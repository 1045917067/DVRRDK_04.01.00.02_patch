From e5464f9c52179210f55f36d47aedc63fa7a446f7 Mon Sep 17 00:00:00 2001
From: zzx <xiaohou1045917067@163.com>
Date: Wed, 8 Jun 2016 16:30:03 +0800
Subject: [PATCH 01/42] Add build support for ti81xx board.

---
 dvr_rdk/Makefile                                   |   8 +
 dvr_rdk/Rules.make                                 | 190 ++++++-
 dvr_rdk/component.mk                               |  44 ++
 dvr_rdk/makerules/build_lsp.mk                     |  33 ++
 dvr_rdk/makerules/build_uboot.mk                   |  71 +++
 dvr_rdk/makerules/env.mk                           |   2 +-
 dvr_rdk/makerules/includes_a8.mk                   |   2 +-
 dvr_rdk/mcfw/src_bios6/Makefile                    |   2 +-
 dvr_rdk/run_make.sh                                |  97 +++-
 .../IVAHD_001/Inc/ijpegvdec.h                      | 633 +++++++++++++++++++++
 .../IVAHD_001/Inc/jpegvdec_ti.h                    |  79 +++
 .../IVAHD_001/inc/ijpegvdec.h                      | 633 ---------------------
 .../IVAHD_001/inc/jpegvdec_ti.h                    |  79 ---
 .../IVAHD_001/Inc/ijpegenc.h                       | 472 +++++++++++++++
 .../IVAHD_001/Inc/jpegenc_ti.h                     |  71 +++
 .../IVAHD_001/inc/ijpegenc.h                       | 472 ---------------
 .../IVAHD_001/inc/jpegenc_ti.h                     |  71 ---
 .../IVAHD_001/Inc/impeg2vdec.h                     | 521 +++++++++++++++++
 .../IVAHD_001/Inc/mpeg2vdec_ti.h                   |  88 +++
 .../IVAHD_001/inc/impeg2vdec.h                     | 521 -----------------
 .../IVAHD_001/inc/mpeg2vdec_ti.h                   |  88 ---
 21 files changed, 2280 insertions(+), 1897 deletions(-)
 create mode 100755 ti_tools/codecs/REL.500.V.MJPEG.D.IVAHD.01.00.06.00/500.V.MJPEG.D.IVAHD.01.00/IVAHD_001/Inc/ijpegvdec.h
 create mode 100755 ti_tools/codecs/REL.500.V.MJPEG.D.IVAHD.01.00.06.00/500.V.MJPEG.D.IVAHD.01.00/IVAHD_001/Inc/jpegvdec_ti.h
 delete mode 100755 ti_tools/codecs/REL.500.V.MJPEG.D.IVAHD.01.00.06.00/500.V.MJPEG.D.IVAHD.01.00/IVAHD_001/inc/ijpegvdec.h
 delete mode 100755 ti_tools/codecs/REL.500.V.MJPEG.D.IVAHD.01.00.06.00/500.V.MJPEG.D.IVAHD.01.00/IVAHD_001/inc/jpegvdec_ti.h
 create mode 100755 ti_tools/codecs/REL.500.V.MJPEG.E.IVAHD.01.00.04.00/500.V.MJPEG.E.IVAHD.01.00/IVAHD_001/Inc/ijpegenc.h
 create mode 100755 ti_tools/codecs/REL.500.V.MJPEG.E.IVAHD.01.00.04.00/500.V.MJPEG.E.IVAHD.01.00/IVAHD_001/Inc/jpegenc_ti.h
 delete mode 100755 ti_tools/codecs/REL.500.V.MJPEG.E.IVAHD.01.00.04.00/500.V.MJPEG.E.IVAHD.01.00/IVAHD_001/inc/ijpegenc.h
 delete mode 100755 ti_tools/codecs/REL.500.V.MJPEG.E.IVAHD.01.00.04.00/500.V.MJPEG.E.IVAHD.01.00/IVAHD_001/inc/jpegenc_ti.h
 create mode 100755 ti_tools/codecs/REL.500.V.MPEG2.D.IVAHD.01.00.12.00/500.V.MPEG2.D.IVAHD.01.00/IVAHD_001/Inc/impeg2vdec.h
 create mode 100755 ti_tools/codecs/REL.500.V.MPEG2.D.IVAHD.01.00.12.00/500.V.MPEG2.D.IVAHD.01.00/IVAHD_001/Inc/mpeg2vdec_ti.h
 delete mode 100755 ti_tools/codecs/REL.500.V.MPEG2.D.IVAHD.01.00.12.00/500.V.MPEG2.D.IVAHD.01.00/IVAHD_001/inc/impeg2vdec.h
 delete mode 100755 ti_tools/codecs/REL.500.V.MPEG2.D.IVAHD.01.00.12.00/500.V.MPEG2.D.IVAHD.01.00/IVAHD_001/inc/mpeg2vdec_ti.h

diff --git a/dvr_rdk/Makefile b/dvr_rdk/Makefile
index 0f66fc0..59f24f6 100755
--- a/dvr_rdk/Makefile
+++ b/dvr_rdk/Makefile
@@ -60,6 +60,14 @@ dvr_rdk_linux_clean:
 
 dvr_rdk_linux_all: dvr_rdk_linux_clean dvr_rdk_linux
 
+##Added by zzx
+dvr_rdk_demo:
+	$(MAKE) -fMAKEFILE.MK -C$(dvr_rdk_PATH)/demos
+
+dvr_rdk_demo_clean:
+	$(MAKE) -fMAKEFILE.MK -C$(dvr_rdk_PATH)/demos clean
+
+dvr_rdk_demo_all: dvr_rdk_demo_clean dvr_rdk_demo fsupdate
 
 #################################################
 #                                               #
diff --git a/dvr_rdk/Rules.make b/dvr_rdk/Rules.make
index ed966db..23a00c5 100755
--- a/dvr_rdk/Rules.make
+++ b/dvr_rdk/Rules.make
@@ -2,15 +2,26 @@
 ifeq ($(dvr_rdk_PATH), )
 
 # Board type can be one of the following
-#	1. DM816X_UD_DVR
-#	2. DM816X_TI_EVM
-#	3. DM814X_TI_EVM
-#	4. DM810X_TI_EVM
-#	5. DM810X_UD_DVR
-#	6. DM810X_BCH_120_DVR
+#	1.    DM816X_UD_DVR
+#	2.    DM816X_TI_EVM
+#	3.    DM814X_TI_EVM
+#	4.    DM810X_TI_EVM
+#	5.    DM810X_UD_DVR
+#	6.    DM810X_BCH_120_DVR
+#	7.    DM816X_TI_CZ
+#	8.    DM816X_TI_HLC
+#	9.    DM816X_TI_ETVH
+#	10.   DM816X_TI_ETVS
+#	11.   DM816X_TI_ES
+#	12.   DM816X_TI_BTJX
+#	13.   DM816X_TI_SBTJX
+#	14.   DM8107_TI_INS
+#	15.   DM816X_TI_HJ
+#	16.   DM816X_TI_VCS
+#	17.   DM816X_TI_VRS
 
 ifeq ($(DVR_RDK_BOARD_TYPE ), )
-  DVR_RDK_BOARD_TYPE := DM816X_UD_DVR
+  DVR_RDK_BOARD_TYPE := DM816X_TI_ETVH
 endif
 
 # Default build environment, windows or linux
@@ -88,11 +99,13 @@ LSP_COLLATERALS  := $(TI_SW_ROOT)/linux_lsp/collaterals
 
 # DVR Qt GUI Application tools
 ifeq ($(DVR_RDK_BOARD_TYPE),DM810X_UD_DVR)
-dvrapp_PATH      := $(dvr_rdk_PATH)/dvrapp/ti810x
+#dvrapp_PATH      := $(dvr_rdk_PATH)/dvrapp/ti810x
+dvrapp_PATH      := $(dvr_rdk_PATH)/dvrapp/ti810x_nvr
 endif
 
 ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_UD_DVR)
-dvrapp_PATH      := $(dvr_rdk_PATH)/dvrapp/ti816x
+#dvrapp_PATH      := $(dvr_rdk_PATH)/dvrapp/ti816x
+dvrapp_PATH      := $(dvr_rdk_PATH)/dvrapp/ti816x_nvr
 endif
 
 # NVR Qt GUI Application tools
@@ -166,6 +179,72 @@ TARGET_FS     := $(dvr_rdk_BASE)/target/rfs_810x
 TARGET_EXE_DIR := opt/dvr_rdk/ti810x
 endif
 
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_CZ)
+TARGET_FS_DIR := $(dvr_rdk_PATH)/bin/ti816x
+TARGET_FS     := $(dvr_rdk_BASE)/target/rfs_816x
+TARGET_EXE_DIR := opt/dvr_rdk/ti816x
+endif
+
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_HLC)
+TARGET_FS_DIR := $(dvr_rdk_PATH)/bin/ti816x
+TARGET_FS     := $(dvr_rdk_BASE)/target/rfs_816x
+TARGET_EXE_DIR := opt/dvr_rdk/ti816x
+endif
+
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_ETVH)
+TARGET_FS_DIR := $(dvr_rdk_PATH)/bin/ti816x
+TARGET_FS     := $(dvr_rdk_BASE)/target/rfs_816x
+TARGET_EXE_DIR := opt/dvr_rdk/ti816x
+endif
+
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_ETVS)
+TARGET_FS_DIR := $(dvr_rdk_PATH)/bin/ti816x
+TARGET_FS     := $(dvr_rdk_BASE)/target/rfs_816x
+TARGET_EXE_DIR := opt/dvr_rdk/ti816x
+endif
+
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_ES)
+TARGET_FS_DIR := $(dvr_rdk_PATH)/bin/ti816x
+TARGET_FS     := $(dvr_rdk_BASE)/target/rfs_816x
+TARGET_EXE_DIR := opt/dvr_rdk/ti816x
+endif
+
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_BTJX)
+TARGET_FS_DIR := $(dvr_rdk_PATH)/bin/ti816x
+TARGET_FS     := $(dvr_rdk_BASE)/target/rfs_816x
+TARGET_EXE_DIR := opt/dvr_rdk/ti816x
+endif
+
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_SBTJX)
+TARGET_FS_DIR := $(dvr_rdk_PATH)/bin/ti816x
+TARGET_FS     := $(dvr_rdk_BASE)/target/rfs_816x
+TARGET_EXE_DIR := opt/dvr_rdk/ti816x
+endif
+
+ifeq ($(DVR_RDK_BOARD_TYPE),DM8107_TI_INS)
+TARGET_FS_DIR := $(dvr_rdk_PATH)/bin/ti810x
+TARGET_FS     := $(dvr_rdk_BASE)/target/rfs_816x
+TARGET_EXE_DIR := opt/dvr_rdk/ti810x
+endif
+
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_HJ)
+TARGET_FS_DIR := $(dvr_rdk_PATH)/bin/ti816x
+TARGET_FS     := $(dvr_rdk_BASE)/target/rfs_816x
+TARGET_EXE_DIR := opt/dvr_rdk/ti816x
+endif
+
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_VCS)
+TARGET_FS_DIR := $(dvr_rdk_PATH)/bin/ti816x
+TARGET_FS     := $(dvr_rdk_BASE)/target/rfs_816x
+TARGET_EXE_DIR := opt/dvr_rdk/ti816x
+endif
+
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_VRS)
+TARGET_FS_DIR := $(dvr_rdk_PATH)/bin/ti816x
+TARGET_FS     := $(dvr_rdk_BASE)/target/rfs_816x
+TARGET_EXE_DIR := opt/dvr_rdk/ti816x
+endif
+
 ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_UD_DVR)
 ifeq ($(DEMOTYPE), )
 #  DEMOTYPE := link_api_sd_demo
@@ -208,6 +287,39 @@ endif
 ifeq ($(DVR_RDK_BOARD_TYPE),DM810X_BCH_120_DVR)
   PLATFORM := ti810x-evm
 endif
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_CZ)
+  PLATFORM := ti816x-evm
+endif
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_HLC)
+  PLATFORM := ti816x-evm
+endif
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_ETVH)
+  PLATFORM := ti816x-evm
+endif
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_ETVS)
+  PLATFORM := ti816x-evm
+endif
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_ES)
+  PLATFORM := ti816x-evm
+endif
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_BTJX)
+  PLATFORM := ti816x-evm
+endif
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_SBTJX)
+  PLATFORM := ti816x-evm
+endif
+ifeq ($(DVR_RDK_BOARD_TYPE),DM8107_TI_INS)
+  PLATFORM := ti810x-evm
+endif
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_HJ)
+  PLATFORM := ti816x-evm
+endif
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_VCS)
+  PLATFORM := ti816x-evm
+endif
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_VRS)
+  PLATFORM := ti816x-evm
+endif
 endif
 
 ###########################
@@ -218,22 +330,55 @@ endif
 # TI810X: 256M,64M; 512M,128M; 512,192M; 512,256M;
 
 ifeq ($(PLATFORM), ti816x-evm)
-ifeq ($(DDR_MEM), )
-ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_EVM)
-  	DDR_MEM := DDR_MEM_1024M
-ifeq ($(LINUX_MEM),)
-	LINUX_MEM := LINUX_MEM_256M
-#    LINUX_MEM := LINUX_MEM_128M
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_CZ)
+  DDR_MEM := DDR_MEM_1024M
+  LINUX_MEM := LINUX_MEM_256M
+endif
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_HLC)
+  DDR_MEM := DDR_MEM_1024M
+  LINUX_MEM := LINUX_MEM_256M
+endif
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_ETVH)
+  DDR_MEM := DDR_MEM_2048M
+  LINUX_MEM := LINUX_MEM_512M
+endif
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_ETVS)
+  DDR_MEM := DDR_MEM_2048M
+  LINUX_MEM := LINUX_MEM_512M
+endif
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_ES)
+  DDR_MEM := DDR_MEM_1024M
+  LINUX_MEM := LINUX_MEM_256M
+endif
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_BTJX)
+  DDR_MEM := DDR_MEM_2048M
+  LINUX_MEM := LINUX_MEM_512M
 endif
-else
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_SBTJX)
+  DDR_MEM := DDR_MEM_1024M
+  LINUX_MEM := LINUX_MEM_256M
+endif
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_HJ)
+  DDR_MEM := DDR_MEM_2048M
+  LINUX_MEM := LINUX_MEM_512M
+endif
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_VCS)
+  DDR_MEM := DDR_MEM_2048M
+  LINUX_MEM := LINUX_MEM_512M
+endif
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_VRS)
+  DDR_MEM := DDR_MEM_2048M
+  LINUX_MEM := LINUX_MEM_512M
+endif
+
+ifeq ($(DDR_MEM), )
 #  DDR_MEM := DDR_MEM_1024M
 	DDR_MEM := DDR_MEM_2048M
+endif
 ifeq ($(LINUX_MEM),)
-	LINUX_MEM := LINUX_MEM_256M
+	LINUX_MEM := LINUX_MEM_512M
 #    LINUX_MEM := LINUX_MEM_128M
 endif
-endif
-endif
   VS_CARD := WITH_VS_CARD
 #  VS_CARD := WITHOUT_VS_CARD
 endif
@@ -250,6 +395,10 @@ endif
 endif
 
 ifeq ($(PLATFORM), ti810x-evm)
+ifeq ($(DVR_RDK_BOARD_TYPE),DM8107_TI_INS)
+  DDR_MEM := DDR_MEM_512M
+  LINUX_MEM := LINUX_MEM_128M
+endif
 ifeq ($(DDR_MEM), )
   DDR_MEM := DDR_MEM_512M
 #  DDR_MEM := DDR_MEM_256M
@@ -312,7 +461,7 @@ endif
 #Device Collaterals
 DEV_COLLATERALS  := $(TI_SW_ROOT)/device_collateral
 
-TREAT_WARNINGS_AS_ERROR=yes
+TREAT_WARNINGS_AS_ERROR=no
 
 BUILD_BIOS6_FIRMWARE=yes
 
@@ -392,6 +541,7 @@ export XDCPATH
 export KW_BUILD
 export syslink_PATH
 export KERNELDIR
+export TARGET_FS
 export TARGET_FS_DIR
 export TARGET_EXE_DIR
 export UBOOTDIR
diff --git a/dvr_rdk/component.mk b/dvr_rdk/component.mk
index d1e6bff..c85fc00 100755
--- a/dvr_rdk/component.mk
+++ b/dvr_rdk/component.mk
@@ -140,6 +140,50 @@ ifeq ($(DVR_RDK_BOARD_TYPE), DM814X_BCH_DVR)
 DVR_RDK_CFLAGS += -DTI814X_DVR 
 endif
 
+ifeq ($(DVR_RDK_BOARD_TYPE), DM816X_TI_CZ)
+DVR_RDK_CFLAGS += -DTI816X_CZ
+endif
+
+ifeq ($(DVR_RDK_BOARD_TYPE), DM816X_TI_HLC)
+DVR_RDK_CFLAGS += -DTI816X_HLC
+endif
+
+ifeq ($(DVR_RDK_BOARD_TYPE), DM816X_TI_ETVH)
+DVR_RDK_CFLAGS += -DTI816X_ETVH
+endif
+
+ifeq ($(DVR_RDK_BOARD_TYPE), DM816X_TI_ETVS)
+DVR_RDK_CFLAGS += -DTI816X_ETVS
+endif
+
+ifeq ($(DVR_RDK_BOARD_TYPE), DM816X_TI_ES)
+DVR_RDK_CFLAGS += -DTI816X_ES
+endif
+
+ifeq ($(DVR_RDK_BOARD_TYPE), DM816X_TI_BTJX)
+DVR_RDK_CFLAGS += -DTI816X_BTJX
+endif
+
+ifeq ($(DVR_RDK_BOARD_TYPE), DM816X_TI_SBTJX)
+DVR_RDK_CFLAGS += -DTI816X_SBTJX
+endif
+
+ifeq ($(DVR_RDK_BOARD_TYPE), DM8107_TI_INS)
+DVR_RDK_CFLAGS += -DTI8107_INS
+endif
+
+ifeq ($(DVR_RDK_BOARD_TYPE), DM816X_TI_HJ)
+DVR_RDK_CFLAGS += -DTI816X_HJ
+endif
+
+ifeq ($(DVR_RDK_BOARD_TYPE), DM816X_TI_VCS)
+DVR_RDK_CFLAGS += -DTI816X_VCS
+endif
+
+ifeq ($(DVR_RDK_BOARD_TYPE), DM816X_TI_VRS)
+DVR_RDK_CFLAGS += -DTI816X_VRS
+endif
+
 ifeq ($(DDR_MEM),DDR_MEM_256M)
 DVR_RDK_CFLAGS += -DDDR_MEM_256M 
 endif
diff --git a/dvr_rdk/makerules/build_lsp.mk b/dvr_rdk/makerules/build_lsp.mk
index e846a00..83a0bf2 100755
--- a/dvr_rdk/makerules/build_lsp.mk
+++ b/dvr_rdk/makerules/build_lsp.mk
@@ -31,6 +31,39 @@ endif
 ifeq ($(DVR_RDK_BOARD_TYPE),DM810X_UD_DVR)
 	$(MAKE) -fbuild_lsp.mk lsp_build TARGET=ti8107_dvr_defconfig
 endif
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_CZ)
+	$(MAKE) -fbuild_lsp.mk lsp_build TARGET=ti8168_cz_defconfig
+endif
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_HLC)
+	$(MAKE) -fbuild_lsp.mk lsp_build TARGET=ti8168_hlc_defconfig
+endif
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_ETVH)
+	$(MAKE) -fbuild_lsp.mk lsp_build TARGET=ti8168_etv_defconfig
+endif
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_ETVS)
+	$(MAKE) -fbuild_lsp.mk lsp_build TARGET=ti8168_etv_defconfig
+endif
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_ES)
+	$(MAKE) -fbuild_lsp.mk lsp_build TARGET=ti8168_es_defconfig
+endif
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_BTJX)
+	$(MAKE) -fbuild_lsp.mk lsp_build TARGET=ti8168_btjx_defconfig
+endif
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_SBTJX)
+	$(MAKE) -fbuild_lsp.mk lsp_build TARGET=ti8168_sbtjx_defconfig
+endif
+ifeq ($(DVR_RDK_BOARD_TYPE),DM8107_TI_INS)
+	$(MAKE) -fbuild_lsp.mk lsp_build TARGET=ti8107_ins_defconfig
+endif
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_HJ)
+	$(MAKE) -fbuild_lsp.mk lsp_build TARGET=ti8168_hj_defconfig
+endif
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_VCS)
+	$(MAKE) -fbuild_lsp.mk lsp_build TARGET=ti8168_vcs_defconfig
+endif
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_VRS)
+	$(MAKE) -fbuild_lsp.mk lsp_build TARGET=ti8168_vrs_defconfig
+endif
 
 lsp:
 	$(MAKE) -fbuild_lsp.mk lsp_config
diff --git a/dvr_rdk/makerules/build_uboot.mk b/dvr_rdk/makerules/build_uboot.mk
index 8325bc7..89a4358 100755
--- a/dvr_rdk/makerules/build_uboot.mk
+++ b/dvr_rdk/makerules/build_uboot.mk
@@ -130,4 +130,75 @@ ifeq ($(DVR_RDK_BOARD_TYPE),DM810X_BCH_120_DVR)
 	cp $(UBOOTDIR)/u-boot.bin $(TFTP_HOME)/u-boot_$(DVR_RDK_BOARD_TYPE).bin
 endif
 
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_CZ)
+	$(MAKE) -fbuild_uboot.mk uboot_build UBOOT_TARGET=ti8168_cz_config
+	$(MAKE) -fbuild_uboot.mk uboot_build UBOOT_TARGET=u-boot.ti
+	cp $(UBOOTDIR)/u-boot.noxip.bin $(TFTP_HOME)/uboot_NAND_$(DVR_RDK_BOARD_TYPE)
+endif
+
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_HLC)
+	$(MAKE) -fbuild_uboot.mk uboot_build UBOOT_TARGET=ti8168_hlc_config
+	$(MAKE) -fbuild_uboot.mk uboot_build UBOOT_TARGET=u-boot.ti
+	cp $(UBOOTDIR)/u-boot.noxip.bin $(TFTP_HOME)/uboot_NAND_$(DVR_RDK_BOARD_TYPE)
+endif
+
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_ETVH)
+	$(MAKE) -fbuild_uboot.mk uboot_build UBOOT_TARGET=ti8168_etv_config
+	$(MAKE) -fbuild_uboot.mk uboot_build UBOOT_TARGET=u-boot.ti
+	cp $(UBOOTDIR)/u-boot.noxip.bin $(TFTP_HOME)/uboot_NAND_$(DVR_RDK_BOARD_TYPE)
+endif
+
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_ETVS)
+	$(MAKE) -fbuild_uboot.mk uboot_build UBOOT_TARGET=ti8168_etv_config
+	$(MAKE) -fbuild_uboot.mk uboot_build UBOOT_TARGET=u-boot.ti
+	cp $(UBOOTDIR)/u-boot.noxip.bin $(TFTP_HOME)/uboot_NAND_$(DVR_RDK_BOARD_TYPE)
+endif
+
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_ES)
+	$(MAKE) -fbuild_uboot.mk uboot_build UBOOT_TARGET=ti8168_es_config
+	$(MAKE) -fbuild_uboot.mk uboot_build UBOOT_TARGET=u-boot.ti
+	cp $(UBOOTDIR)/u-boot.noxip.bin $(TFTP_HOME)/uboot_NAND_$(DVR_RDK_BOARD_TYPE)
+endif
+
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_BTJX)
+	$(MAKE) -fbuild_uboot.mk uboot_build UBOOT_TARGET=ti8168_btjx_config
+	$(MAKE) -fbuild_uboot.mk uboot_build UBOOT_TARGET=u-boot.ti
+	cp $(UBOOTDIR)/u-boot.noxip.bin $(TFTP_HOME)/uboot_NAND_$(DVR_RDK_BOARD_TYPE)
+endif
+
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_SBTJX)
+	$(MAKE) -fbuild_uboot.mk uboot_build UBOOT_TARGET=ti8168_sbtjx_config
+	$(MAKE) -fbuild_uboot.mk uboot_build UBOOT_TARGET=u-boot.ti
+	cp $(UBOOTDIR)/u-boot.noxip.bin $(TFTP_HOME)/uboot_NAND_$(DVR_RDK_BOARD_TYPE)
+endif
+
+ifeq ($(DVR_RDK_BOARD_TYPE),DM8107_TI_INS) 
+	$(MAKE) -fbuild_uboot.mk uboot_clean
+	$(MAKE) -fbuild_uboot.mk uboot_build UBOOT_TARGET=ti8107_ins_min_nand
+	$(MAKE) -fbuild_uboot.mk uboot_build UBOOT_TARGET=u-boot.ti
+	cp $(UBOOTDIR)/u-boot.min.nand $(TFTP_HOME)/u-boot_$(DVR_RDK_BOARD_TYPE).min.nand
+	$(MAKE) -fbuild_uboot.mk uboot_clean
+	$(MAKE) -fbuild_uboot.mk uboot_build UBOOT_TARGET=ti8107_ins_config_nand
+	$(MAKE) -fbuild_uboot.mk uboot_build UBOOT_TARGET=u-boot.ti
+	cp $(UBOOTDIR)/u-boot.bin $(TFTP_HOME)/u-boot_$(DVR_RDK_BOARD_TYPE).bin
+endif
+
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_HJ)
+	$(MAKE) -fbuild_uboot.mk uboot_build UBOOT_TARGET=ti8168_hj_config
+	$(MAKE) -fbuild_uboot.mk uboot_build UBOOT_TARGET=u-boot.ti
+	cp $(UBOOTDIR)/u-boot.noxip.bin $(TFTP_HOME)/uboot_NAND_$(DVR_RDK_BOARD_TYPE)
+endif
+
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_VCS)
+	$(MAKE) -fbuild_uboot.mk uboot_build UBOOT_TARGET=ti8168_vcs_config
+	$(MAKE) -fbuild_uboot.mk uboot_build UBOOT_TARGET=u-boot.ti
+	cp $(UBOOTDIR)/u-boot.noxip.bin $(TFTP_HOME)/uboot_NAND_$(DVR_RDK_BOARD_TYPE)
+endif
+
+ifeq ($(DVR_RDK_BOARD_TYPE),DM816X_TI_VRS)
+	$(MAKE) -fbuild_uboot.mk uboot_build UBOOT_TARGET=ti8168_vrs_config
+	$(MAKE) -fbuild_uboot.mk uboot_build UBOOT_TARGET=u-boot.ti
+	cp $(UBOOTDIR)/u-boot.noxip.bin $(TFTP_HOME)/uboot_NAND_$(DVR_RDK_BOARD_TYPE)
+endif
+
 
diff --git a/dvr_rdk/makerules/env.mk b/dvr_rdk/makerules/env.mk
index e572416..7dbbe1c 100755
--- a/dvr_rdk/makerules/env.mk
+++ b/dvr_rdk/makerules/env.mk
@@ -71,7 +71,7 @@ mpeg4dec_INCLUDE = $(mpeg4dec_PATH)/Inc
 mpeg4enc_INCLUDE = $(mpeg4enc_PATH)/Inc
 
 #MPEG2DEC include
-mpeg2dec_INCLUDE = $(mpeg2dec_PATH)/inc
+mpeg2dec_INCLUDE = $(mpeg2dec_PATH)/Inc
 
 #HDVICP API
 hdvicpapi_INCLUDE = $(hdvicplib_PATH)
diff --git a/dvr_rdk/makerules/includes_a8.mk b/dvr_rdk/makerules/includes_a8.mk
index 87f8d23..6369a1d 100755
--- a/dvr_rdk/makerules/includes_a8.mk
+++ b/dvr_rdk/makerules/includes_a8.mk
@@ -13,7 +13,7 @@ COMMON_UTILS_INC=-I$(dvr_rdk_PATH)/mcfw/src_common/utils/inc
 
 SYSLINK_INC=-I$(syslink_PATH)/packages -I$(ipc_PATH)/packages
 
-CODEC_INC=-I$(xdais_PATH)/packages -I$(h264dec_PATH)/Inc -I$(mpeg4dec_PATH)/Inc -I$(mpeg2dec_PATH)/inc -I$(h264enc_PATH)/Inc -I$(jpegdec_PATH)/Inc -I$(jpegenc_PATH)/Inc -I$(mpeg4enc_PATH)/Inc
+CODEC_INC=-I$(xdais_PATH)/packages -I$(h264dec_PATH)/Inc -I$(mpeg4dec_PATH)/Inc -I$(mpeg2dec_PATH)/Inc -I$(h264enc_PATH)/Inc -I$(jpegdec_PATH)/Inc -I$(jpegenc_PATH)/Inc -I$(mpeg4enc_PATH)/Inc
 
 LINUXDEVKIT_INC=-I$(linuxdevkit_PATH)/usr/include 
 
diff --git a/dvr_rdk/mcfw/src_bios6/Makefile b/dvr_rdk/mcfw/src_bios6/Makefile
index 2e8ebb9..8d777ee 100755
--- a/dvr_rdk/mcfw/src_bios6/Makefile
+++ b/dvr_rdk/mcfw/src_bios6/Makefile
@@ -2,7 +2,7 @@
 MODULE_NAME = dvr_rdk_bios6
 
 
-INCDIR = .  $(jpegenc_PATH)/inc $(jpegdec_PATH)/inc  $(h264enc_PATH)/packages/ti/sdo/codecs/h264enc/ $(h264dec_PATH)/packages/ti/sdo/codecs/h264dec/ $(rpe_INCLUDE) $(rpei_INCLUDE) $(mpeg4enc_PATH)/Inc $(mpeg2dec_PATH)/inc
+INCDIR = .  $(jpegenc_PATH)/Inc $(jpegdec_PATH)/Inc  $(h264enc_PATH)/packages/ti/sdo/codecs/h264enc/ $(h264dec_PATH)/packages/ti/sdo/codecs/h264dec/ $(rpe_INCLUDE) $(rpei_INCLUDE) $(mpeg4enc_PATH)/Inc $(mpeg2dec_PATH)/Inc
 
 # List all the external components/interfaces, whose interface header files
 #  need to be included for this component
diff --git a/dvr_rdk/run_make.sh b/dvr_rdk/run_make.sh
index 1253db1..224c5c8 100755
--- a/dvr_rdk/run_make.sh
+++ b/dvr_rdk/run_make.sh
@@ -5,13 +5,24 @@ function print_help {
 	echo " # ./run_build.sh <platform> <make target>"
 	echo " "
 	echo " Valid <platform> are,"
-	echo " ti816x-evm : DM816X_TI_EVM build"
-	echo " ti816x-dvr : DM816X_UD_DVR build"
-	echo " ti814x-evm : DM814X_TI_EVM build"
-	echo " ti814x-dvr : DM814X_BCH_DVR build"
-	echo " ti810x-evm : DM810X_TI_EVM build"
-	echo " ti810x-dvr : DM810X_UD_DVR build"
-	echo " all        : Builds DM816x DVR , DM814x EVM , DM810x DVR"
+	echo " ti816x-evm   : DM816X_TI_EVM   build"
+	echo " ti816x-dvr   : DM816X_UD_DVR   build"
+	echo " ti814x-evm   : DM814X_TI_EVM   build"
+	echo " ti814x-dvr   : DM814X_BCH_DVR  build"
+	echo " ti810x-evm   : DM810X_TI_EVM   build"
+	echo " ti810x-dvr   : DM810X_UD_DVR   build"
+	echo " ti816x-cz    : DM816X_TI_CZ    build"
+	echo " ti816x-hlc   : DM816X_TI_HLC   build"
+	echo " ti816x-etvh  : DM816X_TI_ETVH  build"
+	echo " ti816x-etvs  : DM816X_TI_ETVS  build"
+	echo " ti816x-es    : DM816X_TI_ES    build"
+	echo " ti816x-btjx  : DM816X_TI_BTJX  build"
+	echo " ti816x-sbtjx : DM816X_TI_SBTJX build"
+	echo " ti8107-ins   : DM8107_TI_INS   build"
+	echo " ti816x-hj    : DM816X_TI_HJ    build"
+	echo " ti816x-vcs   : DM816X_TI_VCS   build"
+	echo " ti816x-vrs   : DM816X_TI_VRS   build"
+	echo " all          : Builds DM816x   DVR , DM814x EVM , DM810x DVR"
 	echo " "
 	echo " IMPORTANT NOTE:"
 	echo " A 'clean' is required before switching from EVM to DVR on a given platform"
@@ -51,9 +62,20 @@ then
 	echo "#### "
 	echo "#### Building All platforms !!!"
 	echo "#### "
-	build_platform DM810X_UD_DVR $2
-	build_platform DM814X_TI_EVM $2
-	build_platform DM816X_UD_DVR $2
+	build_platform DM810X_UD_DVR 	$2
+	build_platform DM814X_TI_EVM    $2
+	build_platform DM816X_UD_DVR    $2
+	build_platform DM816X_TI_CZ     $2
+	build_platform DM816X_TI_HLC    $2
+	build_platform DM816X_TI_ETVH   $2
+	build_platform DM816X_TI_ETVS   $2
+	build_platform DM816X_TI_ES     $2
+	build_platform DM816X_TI_BTJX   $2
+	build_platform DM816X_TI_SBTJX  $2
+	build_platform DM8107_TI_INS    $2
+	build_platform DM816X_TI_HJ     $2
+	build_platform DM816X_TI_HJ     $2
+	build_platform DM816X_TI_VRS    $2
 	echo "#### "
 	echo "#### All platforms build [$2] Done !!!"
 	echo "#### "
@@ -100,6 +122,61 @@ then
 	build_platform DM810X_TI_EVM $2
 fi
 
+if [ "$1" == "ti816x-cz" ];
+then
+	build_platform DM816X_TI_CZ $2
+fi
+
+if [ "$1" == "ti816x-hlc" ];
+then
+	build_platform DM816X_TI_HLC $2
+fi
+
+if [ "$1" == "ti816x-etvh" ];
+then
+	build_platform DM816X_TI_ETVH $2
+fi
+
+if [ "$1" == "ti816x-etvs" ];
+then
+	build_platform DM816X_TI_ETVS $2
+fi
+
+if [ "$1" == "ti816x-es" ];
+then
+	build_platform DM816X_TI_ES $2
+fi
+
+if [ "$1" == "ti816x-btjx" ];
+then
+	build_platform DM816X_TI_BTJX $2
+fi
+
+if [ "$1" == "ti816x-sbtjx" ];
+then
+	build_platform DM816X_TI_SBTJX $2
+fi
+
+if [ "$1" == "ti8107-ins" ];
+then
+	build_platform DM8107_TI_INS $2
+fi
+
+if [ "$1" == "ti816x-hj" ];
+then
+	build_platform DM816X_TI_HJ $2
+fi
+
+if [ "$1" == "ti816x-vcs" ];
+then
+	build_platform DM816X_TI_VCS $2
+fi
+
+if [ "$1" == "ti816x-vrs" ];
+then
+	build_platform DM816X_TI_VRS $2
+fi
+
 if [ "$1" == "help" ];
 then
 	print_help
diff --git a/ti_tools/codecs/REL.500.V.MJPEG.D.IVAHD.01.00.06.00/500.V.MJPEG.D.IVAHD.01.00/IVAHD_001/Inc/ijpegvdec.h b/ti_tools/codecs/REL.500.V.MJPEG.D.IVAHD.01.00.06.00/500.V.MJPEG.D.IVAHD.01.00/IVAHD_001/Inc/ijpegvdec.h
new file mode 100755
index 0000000..f5ba8e2
--- /dev/null
+++ b/ti_tools/codecs/REL.500.V.MJPEG.D.IVAHD.01.00.06.00/500.V.MJPEG.D.IVAHD.01.00/IVAHD_001/Inc/ijpegvdec.h
@@ -0,0 +1,633 @@
+/*
+********************************************************************************  
+* HDVICP2.0 Based JPEG Decoder
+*
+* "HDVICP2.0 Based JPEG Decoder" is software module developed on
+* TI's HDVICP2 based SOCs. This module is capable of generating a raw image 
+* by de-compressing/decoding a jpeg bit-stream based on ISO/IEC IS 10918-1. 
+* Copyright (C) 2009 Texas Instruments Incorporated - http://www.ti.com/ 
+* ALL RIGHTS RESERVED 
+********************************************************************************
+*/
+
+/**  
+********************************************************************************
+* @file      ijpegvdec.h                     
+*
+* @brief     This file provides definisions for the interface handles.
+*
+* @author    Odanaka
+*
+* @version 0.0 (Dec 2008) : Created the initial version.
+*
+* @version 0.1 (Dec 2009)  : Added extended dynamic paramters[Chetan]
+*
+* @version 0.2 (Feb 2010)  : Coding Guidelines[Chetan] 
+*
+* @version 0.3 (July 2010)  : Added Error Robustness Error Codes[Chetan] 
+*
+* @version 0.4 (Sept 2010)  : Added Error Robustness Error Codes for Data Sync
+*                             [Chetan] 
+* 
+* @version 0.5 (Nov 2010) : Added support for Slice level decoding[Chetan] 
+* 
+* @version 0.6 (Feb 2011) : Added error codes for unsupported features [Chetan]
+*
+* @version 0.7 (Sep 2011) : Exposed default static/dynamic params [Naidu]
+*
+* @version 0.8 (Sep 2011) : Added error codes for un-supported resolutions 
+*                           [Naidu]
+*
+* @version 0.9 (Oct 2012) : Added parameter rangeReduction in extended Dynamic
+*                           parameters to support Limited Pixel range feature.
+*                           [Santoshkumar S K]
+*
+*******************************************************************************
+*/
+
+/*----------------------compilation control switches -------------------------*/
+#ifndef _IJPEGVDEC_
+#define _IJPEGVDEC_
+
+/*******************************************************************************
+*   INCLUDE FILES
+*******************************************************************************/
+/* -------------------- system and platform files ----------------------------*/
+#include <ti/xdais/xdas.h>
+#include <ti/xdais/ialg.h>
+#include <ti/xdais/dm/ividdec3.h>
+#include <ti/xdais/ires.h>
+#include <ti/sdo/fc/ires/hdvicp/ires_hdvicp2.h>
+
+/*----------------------program files ----------------------------------------*/
+
+/*******************************************************************************
+*   PUBLIC DECLARATIONS Defined here, used elsewhere
+*******************************************************************************/
+/*-----------------------data declarations -----------------------------------*/
+
+
+/** 
+*******************************************************************************
+*  @enum       ethumbnailMode
+*  
+*  @brief      Enumerator which defines all the different  types of thumbnail
+*              supported.
+*
+*  @remarks    IJPEGVDEC_THUMBNAIL_JFIF        :  Decode and output thumbnail  
+*                                       available with JFIF marker
+*
+*  @remarks    IJPEGVDEC_THUMBNAIL_EXIF        :  Decode and output thumbnail  
+*                                       available with EXIF marker
+*
+*  @remarks    IJPEGVDEC_THUMBNAIL_DOWNSAMPLE  :  Decode the image and 
+*                                downsample it toprovide it as thumbnail output
+*
+*******************************************************************************
+*/
+typedef enum
+{
+  IJPEGVDEC_THUMBNAIL_JFIF = 1,     
+  IJPEGVDEC_THUMBNAIL_EXIF = 2,
+  IJPEGVDEC_THUMBNAIL_DOWNSAMPLE = 3
+}ethumbnailMode;
+
+/** 
+*******************************************************************************
+*  @enum       edownSamplingFactor
+*  
+*  @brief      Enumerator which defines the factor with which the downsampling
+*              needs to be carried out. This applies to both Horizontal
+*              and vertical dimentions
+*
+*  @remarks    IJPEGVDEC_NODOWNSAMPLE        :  No Down Sample. 
+*
+*  @remarks    IJPEGVDEC_DOWNSAMPLEBY2       :  Downscale by 2
+*
+*  @remarks    IJPEGVDEC_DOWNSAMPLEBY4       :  Downscale by 4  
+*
+*
+*******************************************************************************
+*/
+typedef enum {
+  IJPEGVDEC_NODOWNSAMPLE  = 1,
+  IJPEGVDEC_DOWNSAMPLEBY2 = 2,
+  IJPEGVDEC_DOWNSAMPLEBY4 = 4
+} edownSamplingFactor;
+
+/** 
+*******************************************************************************
+*  @enum       eFrameErrorConcealment
+*  
+*  @brief      Enumerator which defines values to ENABLE or DISABLE
+*              Error Concealment
+*
+*  @remarks    IJPEGVDEC_EC_DISABLE      :  Disable Error concealment
+*
+*  @remarks    IJPEGVDEC_EC_ENABLE       :  Enable Error Concealment
+*
+*
+*******************************************************************************
+*/
+typedef enum
+{
+  IJPEGVDEC_EC_DISABLE = 0,
+  IJPEGVDEC_EC_ENABLE
+}eFrameErrorConcealment;
+
+/**
+*******************************************************************************
+*  @struct IJPEGVDEC_Obj
+*
+*  @brief  This structure must be the first field of all jpgVDEC instance
+*          objects
+*
+*  @param  fxns  : Handle to extented jpeg video decoder library interface 
+*                  functions
+* 
+*******************************************************************************
+*/
+typedef struct IJPEGVDEC_Obj 
+{
+  struct IJPEGVDEC_Fxns *fxns;
+} IJPEGVDEC_Obj;
+
+/**
+*******************************************************************************
+*  @struct IJPEGVDEC_Handle
+*
+*  @brief  This handle is used to reference all jpgVDEC instance objects
+* 
+*******************************************************************************
+*/
+typedef struct IJPEGVDEC_Obj *IJPEGVDEC_Handle;
+
+/**
+*******************************************************************************
+*  @struct IJPEGVDEC_Status
+*
+*  @brief  Status structure defines the parameters that can be changed or 
+*          read during real-time operation of the alogrithm.
+*
+*  @param  viddecStatus  :  Handle to base class status struture which defines 
+*                           the all  run time parameters.
+*
+*  @param extendedErrorCode0 : Extended Error Code0 returned by decoder
+*
+*  @param extendedErrorCode1 : Extended Error Code1 returned by decoder
+*
+*  @param extendedErrorCode2 : Extended Error Code2 returned by decoder
+*
+*  @param extendedErrorCode3 : Extended Error Code3 returned by decoder
+*
+*  @param debugTraceLevel    : DebugTrace level being used by decoder
+*
+*  @param lastNFramesToLog   : Number of frames of debug data decoder is 
+*                              dumping trace buffer
+*
+*  @param extMemoryDebugTraceAddr : Trace buffer base address in external memory
+*
+*  @param extMemoryDebugTraceSize : Size of Trace buffer in external memory
+* 
+*******************************************************************************
+*/
+typedef struct IJPEGVDEC_Status 
+{
+  /*--------------------------------------------------------------------------*/
+  /*Base Class                                                                */
+  /*--------------------------------------------------------------------------*/
+  IVIDDEC3_Status  viddecStatus; 
+  
+  /*--------------------------------------------------------------------------*/
+  /*Extended Error Code0 returned by decoder                                  */
+  /*--------------------------------------------------------------------------*/  
+  XDAS_UInt32 extendedErrorCode0;
+  
+  /*--------------------------------------------------------------------------*/
+  /*Extended Error Code1 returned by decoder                                  */
+  /*--------------------------------------------------------------------------*/ 
+  XDAS_UInt32 extendedErrorCode1;
+  
+  /*--------------------------------------------------------------------------*/
+  /*Extended Error Code2 returned by decoder                                  */
+  /*--------------------------------------------------------------------------*/ 
+  XDAS_UInt32 extendedErrorCode2;
+  
+  /*--------------------------------------------------------------------------*/
+  /*Extended Error Code3 returned by decoder                                  */
+  /*--------------------------------------------------------------------------*/
+  XDAS_UInt32 extendedErrorCode3;  
+
+  /*--------------------------------------------------------------------------*/
+  /*DebugTrace level being used by decoder                                    */
+  /*--------------------------------------------------------------------------*/  
+  XDAS_UInt32 debugTraceLevel;
+  
+  /*--------------------------------------------------------------------------*/
+  /*Number of frames of debug data decoder is dumping trace buffer            */
+  /*--------------------------------------------------------------------------*/ 
+  XDAS_UInt32 lastNFramesToLog;
+
+  /*--------------------------------------------------------------------------*/
+  /* Trace buffer base address in external memory                             */
+  /*--------------------------------------------------------------------------*/  
+  XDAS_UInt32 * extMemoryDebugTraceAddr;
+
+  /*--------------------------------------------------------------------------*/
+  /* Size of Trace buffer in external memory                                  */
+  /*--------------------------------------------------------------------------*/  
+  XDAS_UInt32 extMemoryDebugTraceSize;  
+  
+} IJPEGVDEC_Status;
+
+/**
+*******************************************************************************
+*  @struct IJPEGVDEC_Cmd
+*
+*  @brief  The Cmd enumeration defines the control commands for the JPEG 
+*                video decoder control method.
+* 
+*******************************************************************************
+*/
+typedef IVIDDEC3_Cmd IJPEGVDEC_Cmd;
+
+/**
+*******************************************************************************
+*  @struct IJPEGVDEC_Params
+*
+*  @brief  This structure defines the creation parameters for all 
+*          jpgVDEC objects
+*
+*  @param  viddecParams  :  Defines the creation time parameters for
+*                           all IVIDDEC3 instance objects.
+*
+*  @param  ErrorConcealmentON  :  Enable/Disable Error Concealment 
+*
+*  @param  debugTraceLevel  :  Enable/Disable Error Concealment
+*
+*  @param  lastNFramesToLog  :  Number of frames to log history for debugTrace 
+* 
+*  @param  sliceSwitchON     :  ENABLE/DISABLE Slice Switching  feature.
+* 
+*  @param  numSwitchPerFrame     :  Number of Switches in a Frame.
+* 
+*  @param  numRestartMarkerPerSwitch  :  Number of Restart Marker(slices) to 
+*                                  decode in one process call or in one switch.
+*  
+*******************************************************************************
+*/
+typedef struct IJPEGVDEC_Params 
+{
+  /*--------------------------------------------------------------------------*/
+  /*Base Class                                                                */
+  /*--------------------------------------------------------------------------*/
+  IVIDDEC3_Params    viddecParams; 
+  
+  /*--------------------------------------------------------------------------*/
+  /*Enable/Disable Error Concealment                                          */
+  /* enumeration 'eFrameErrorConcealment' can be used to set this value       */
+  /*--------------------------------------------------------------------------*/
+  XDAS_Int32         ErrorConcealmentON;
+  
+  /*--------------------------------------------------------------------------*/
+  /*Debug trace Level                                                         */
+  /*--------------------------------------------------------------------------*/
+  XDAS_UInt32   debugTraceLevel;
+
+  /*--------------------------------------------------------------------------*/
+  /*Number of frames to log history for debugTrace                            */
+  /*--------------------------------------------------------------------------*/
+  XDAS_UInt32   lastNFramesToLog;
+  
+  /*--------------------------------------------------------------------------*/
+  /* ENABLE/DISABLE Slice Switching  feature.                                 */
+  /* enumeration 'eSliceSwitch' can be used to set this value                 */
+  /*--------------------------------------------------------------------------*/
+  XDAS_UInt32   sliceSwitchON;  
+  
+  /*--------------------------------------------------------------------------*/
+  /* Number of Switches in a Frame. This is valid only when sliceSwitchON is  */
+  /* enabled , when disabled , its dont care.                                 */
+  /* Application tells how many switches should happen in a frame , codec has */
+  /* to decide how to handle each process call ( how many slices) and it has  */
+  /* process "numSwitchInFrame " process calls only                           */
+  /*--------------------------------------------------------------------------*/
+  XDAS_UInt32   numSwitchPerFrame;  
+  
+  /*--------------------------------------------------------------------------*/
+  /* Application tells a number meaning codec has to decode this much slices  */
+  /* or restart markers and come out of process call. Here each switch can    */
+  /*have N number of restart marker ( N should be greater than or equal to 1).*/
+  /* Once codec process call is done , application will give again the next   */
+  /* number and application will handle till all the slices in the frame have */
+  /* been decoded.                                                            */
+  /* This paramter is valid only when "sliceSwitchON"  is enabled             */
+  /*--------------------------------------------------------------------------*/
+  XDAS_UInt32   numRestartMarkerPerSwitch;     
+  
+} IJPEGVDEC_Params;
+
+/**
+*******************************************************************************
+*  @struct IJPEGVDEC_DynamicParams
+*
+*  @brief  This structure defines the run time parameters for all
+*          jpgVDEC objects
+*
+*  @param  viddecDynamicParams  :  Defines the run time parameters for
+*                                  all IVIDDEC3 instance objects.
+*
+*  @param  decodeThumbnail  :  Decode the ThumNail and provide the output for 
+*                              display.
+*
+*  @param  thumbnailMode  :  Specifies which thumbnail to decode. If none of 
+*                            the markers (JFIF and EXIF) have thumbnail image, 
+*                            use IJPEGVDEC_THUMBNAIL_DOWNSAMPLE. Refer to 
+*                            thumbnailMode enumeration          
+*
+*  @param  downsamplingFactor  : If decodeThumbnail is enabled and 
+*                                thumbnailMode is set to  
+*                                IJPEGVDEC_THUMBNAIL_DOWNSAMPLE, 
+*                                downsamplingFactor is used as scaling factor  
+*                                for ThumNail output    
+*                                If decodeThumbnail is disabled, this parameter 
+*                                is used as scaling factor for display buffer 
+*                                output. Refer to  edownSamplingFactor
+*
+*  @param  streamingCompliant  : If an Input Image is Non-Interleaved , 
+*                                Application has to set this params to "0" 
+*                                (DISABLE) , if it is Interleaved , value will 
+*                                be "1" (ENABLE). This Paramater along with 
+*                                ForceChromaFormat determines whether we
+*                                have to give Planar Buffers from GetBufinfo.
+* 
+*  @param  rangeReduction   :  Parameter is used to enable/disable 
+*                              limited Pixel Range feature.
+*
+*******************************************************************************
+*/
+typedef struct IJPEGVDEC_DynamicParams 
+{
+  IVIDDEC3_DynamicParams viddecDynamicParams; 
+  
+
+  XDAS_Int32          decodeThumbnail;           
+  
+  XDAS_Int32          thumbnailMode;  
+  
+  XDAS_Int32         downsamplingFactor;    
+
+  XDAS_Int32         streamingCompliant;     
+
+  XDAS_Int32          rangeReduction;
+  
+} IJPEGVDEC_DynamicParams;
+
+/**
+*******************************************************************************
+*  @struct IJPEGVDEC_InArgs
+*
+*  @brief  This structure defines the run time input arguments for all VIDDEC 
+*          objects.
+*
+*  @param  viddecInArgs       :  Defines the input arguments for all 
+*                                IVIDDEC3 instance process function.
+* 
+*******************************************************************************
+*/
+typedef struct IJPEGVDEC_InArgs 
+{
+  IVIDDEC3_InArgs   viddecInArgs; 
+}IJPEGVDEC_InArgs;
+
+/**
+*******************************************************************************
+*  @struct IJPEGVDEC_OutArgs
+*
+*  @brief  This structure defines the run time output arguments for VIDDEC 
+*          objects.This structure may be extended by individual codec 
+*                implementation allowing customization with vendor specific 
+*          parameters.
+*
+*  @param  viddecOutArgs      :  Defines the output arguments for all 
+*                                IVIDDEC3 instance process function.
+* 
+*******************************************************************************
+*/
+typedef struct IJPEGVDEC_OutArgs 
+{
+  IVIDDEC3_OutArgs  viddecOutArgs;
+  XDAS_UInt32 IsGrayFlag;  
+}IJPEGVDEC_OutArgs;
+
+
+/**
+*******************************************************************************
+*  @struct IJPEGVDEC_Fxns
+*
+*  @brief  This structure defines all of the operations on jpgVDEC objects.
+*
+*  @param  ividdec            :  handle to the all function of the operations 
+*                                on IVIDDEC3 objects
+* 
+*******************************************************************************
+*/
+typedef struct IJPEGVDEC_Fxns 
+{
+  IVIDDEC3_Fxns    ividdec;    
+} IJPEGVDEC_Fxns;
+
+typedef enum
+{
+  IJPEGDEC_ERR_UNSUPPORTED_VIDDEC3PARAMS = 0,
+  IJPEGDEC_ERR_UNSUPPORTED_VIDDEC3DYNAMICPARAMS,
+  IJPEGDEC_ERR_UNSUPPORTED_JPEGDECDYNAMICPARAMS,
+  IJPEGDEC_ERR_NOSLICE,            
+  IJPEGDEC_ERR_MBDATA,             
+  IJPEGDEC_ERR_STANDBY,       
+  IJPEGDEC_ERR_INVALID_MBOX_MESSAGE ,    
+  IJPEGDEC_ERR_HDVICP_RESET,
+  IJPEGDEC_ERR_HDVICP_WAIT_NOT_CLEAN_EXIT = 16,
+  IJPEGDEC_ERR_FRAME_HDR,
+  IJPEGDEC_ERR_SCAN_HDR,
+  IJPEGDEC_ERR_HUFF_TBL_HDR,
+  IJPEGDEC_ERR_QUANT_TBL_HDR,
+  IJPEGDEC_ERR_OUTCHROMAFORMAT,
+  IJPEGDEC_ERR_UNSUPPORTED_MARKER,
+  IJPEGDEC_ERR_THUMBNAIL,
+  IJPEGDEC_ERR_IRES_HANDLE,
+  IJPEGDEC_ERR_DYNAMIC_PARAMS_HANDLE,
+  
+  /* Error Codes of Data Sync */
+  IJPEGDEC_ERR_DATASYNC,
+  IJPEGDEC_ERR_DOWNSAMPLE_INPUT_FORMAT,
+  IJPEGDEC_ERR_NOT_SUPPORTED_FEATURE,
+  IJPEGDEC_ERR_NOT_SUPPORTED_RESOLUTION
+  
+}IJPEGDEC_ExtendedErrorCodes;
+
+typedef enum
+{
+  JPEG_DECODE_THUMBNAIL_ERROR = 0,
+  JPEG_DYNAMIC_PARAMS_HANDLE_ERROR,
+  JPEG_THUMBNAIL_MODE_ERROR,
+  JPEG_DOWNSAMPLING_FACTOR_ERROR,
+  JPEG_STREAMING_COMPLIANT_ERROR,
+  JPEG_NON_INTERLEAVED_STREAMING_COMPLIANT_ERROR,
+  JPEG_DECODE_HEADER_ERROR,
+  JPEG_DISPLAY_WIDTH_ERROR,
+  JPEG_DYNAMIC_PARAMS_SIZE_ERROR,
+  JPEG_NULL_INSTANCE_HANDLE_ERROR,
+  JPEG_NULL_INARGS_POINTER_ERROR,
+  JPEG_NULL_OUTARGS_POINTER_ERROR,
+  JPEG_NULL_INPUT_BUF_DESC_ERROR,
+  JPEG_NULL_OUTPUT_BUF_DESC_ERROR,
+  JPEG_INVALID_INARGS_SIZE,
+  JPEG_INVALID_OUTARGS_SIZE,
+  JPEG_NULL_INPUT_BUFFER_POINTER_ERROR,
+  JPEG_NULL_OUTPUT_BUF_DESC_POINTER_ERROR,
+  JPEG_INVALID_NUM_OF_INPUT_BUFFERS_ERROR,
+  JPEG_INVALID_INPUT_BYTES_ERROR,
+  JPEG_INVALID_INPUT_BUFFER_MEMORY_TYPE_ERROR,
+  JPEG_INVALID_NUM_OF_OUTPUT_BUFFERS_ERROR,
+  JPEG_NULL_OUTPUT_BUFFER_POINTER0_ERROR,
+  JPEG_INVALID_OUTPUT_BUFFER0_SIZE_ERROR,
+  JPEG_INVALID_OUTPUT_BUFFER0_MEMTYPE_ERROR,
+  JPEG_NULL_OUTPUT_BUFFER_POINTER1_ERROR,
+  JPEG_INVALID_OUTPUT_BUFFER1_SIZE_ERROR,
+  JPEG_INVALID_OUTPUT_BUFFER1_MEMTYPE_ERROR,
+  JPEG_NULL_OUTPUT_BUFFER_POINTER2_ERROR,
+  JPEG_INVALID_OUTPUT_BUFFER2_SIZE_ERROR,
+  JPEG_INVALID_OUTPUT_BUFFER2_MEMTYPE_ERROR,
+  JPEG_INVALID_INPUT_ID_ERROR,
+  JPEG_NUM_VDMA_DESC_EXCEEDS_ERROR,
+  JPEG_INVALID_SOI_MARKER_ERROR,
+  JPEG_INVALID_MARKER_SEG_LENGTH_ERROR,
+  JPEG_NON_STANDARD_MARKER_CODE_ERROR,
+  JPEG_INVALID_QUANT_TABLE_TYPE_ERROR,
+  JPEG_QUANT_TABLE_BYTES_READ_ERROR,
+  JPEG_INVALID_HUFFMAN_TABLE_TYPE_ERROR,
+  JPEG_HUFFMAN_CODE_LENGTH_SIZE_EXCEED_ERROR,
+  JPEG_HUFFMAN_TABLE_MARKER_SEG_SIZE_ERROR,
+  JPEG_HUFFMAN_TABLE_BYTES_READ_ERROR,
+  JPEG_INVALID_SAMPLE_PRECISION_ERROR,
+  JPEG_INVALID_NUM_COMPONENTS_ERROR,
+  JPEG_FRAME_HDR_BYTES_READ_ERROR,
+  JPEG_NOT_SUPPORTED_FORMAT_ERROR,
+  JPEG_ARITHMETIC_DECODING_NOT_SUPPORTED_MARKER_ERROR,
+  JPEG_PROG_DECODING_NOT_SUPPORTED_MARKER_ERROR,
+  JPEG_LOSSLESS_DECODING_NOT_SUPPORTED_MARKER_ERROR,
+  JPEG_DIFFERENTIAL_DECODING_NOT_SUPPORTED_MARKER_ERROR,
+  JPEG_JFIF_THUMBNAIL_IDENTIFIER_ERROR,
+  JPEG_JFIF_THUMBNAIL_BYTES_READ_ERROR,
+  JPEG_JFIF_EXTN_NO_SOI_ERROR,
+  JPEG_JFIF_NOT_SUPPORTED_FEATURE_ERROR,
+  JPEG_FORCECHROMA_OUTPUTCHROMA_FORMAT_MISMATCH_ERROR,
+  JPEG_INVALID_VERT_SCAN_FREQ_ERROR,
+  JPEG_INVALID_HORI_SCAN_FREQ_ERROR,
+  JPEG_INVALID_QUANT_DEST_SELECTOR_ERROR,
+  JPEG_DC_ENTROPY_CODING_DEST_ERROR,
+  JPEG_AC_ENTROPY_CODING_DEST_ERROR,
+  JPEG_ECD_VLD_OUT_OF_TABLE_ERROR,
+  JPEG_ECD_RESTART_INTERVAL_ERROR,
+  JPEG_ECD_BLOCK_COEFF_NUM_ERROR,
+  JPEG_GET_DATA_SYNC_NULL_FUNC_POINTER_ERROR,
+  JPEG_PUT_DATA_SYNC_NULL_FUNC_POINTER_ERROR,
+  JPEG_HDVICP_ACQUIRE_AND_CONFIGURE_ERROR,
+  JPEG_NULL_ALGORITHM_HANDLE_ERROR,
+  JPEG_GETVERSION_NULL_BUF_POINTER_ERROR,
+  JPEG_IRES_RESOURCE_DESC_ERROR,
+  JPEG_IRES_RESOURCE_DESC_HANDLE_ERROR,
+  JPEG_NULL_STATUS_DATA_BUF,
+  JPEG_EXCEED_BYTES_CONSUMED_ERROR,
+  
+  /* Extended Error Codes for Data Sync */
+  JPEG_INPUT_DATASYNC_NUMBLOCKS_ERROR,
+  JPEG_INPUT_DATASYNC_BUFF_POINTER_ERROR,
+  JPEG_INPUT_DATASYNC_BLOCKSIZE_ERROR,
+  JPEG_INPUT_DATASYNC_NOT_VALID,
+  
+  JPEG_OUTPUT_DATASYNC_NUMBLOCKS_ERROR,
+  
+  JPEG_SLICE_LEVEL_INPUT_NO_RST_MARKER_ERROR,
+  JPEG_DOWNSAMPLING_IN_NON_TILED_ERROR,
+  JPEG_DOWNSAMPLING_NOT_SUPPORTED_FORMAT_ERROR,
+  JPEG_DOWNSAMPLING_NOT_SUPPORTED_FEATURE_ERROR,
+  JPEG_THUMBNAIL_NOT_SUPPORTED_FEATURE_ERROR,
+  
+  /* Extended Error Codes for Unsupported Resolution */
+  JPEG_NOT_SUPPORTED_WIDTH_ERROR,
+  JPEG_NOT_SUPPORTED_HEIGHT_ERROR,
+  JPEG_DECODE_LIMITED_PIXEL_RANGE_ERROR 
+}IjpegVDEC_ErrorStatus;
+/*
+ *  ======== IJPEGVDEC_Params   ========
+ *  Default parameter values for JPEGVDEC instance objects
+ */
+extern const IJPEGVDEC_Params JPEGVDEC_TI_Static_Params;
+/*
+ *  ======== IJPEGVDEC_DynamicParams ========
+ *  Default dynamic parameter values for JPEGVDEC instance objects
+ */
+extern const IJPEGVDEC_DynamicParams JPEGVDEC_TI_DynamicParams;
+/* ------------------------------ macros ------------------------------------ */
+
+/****************************************************************
+*   PRIVATE DECLARATIONS Defined here, used only here
+****************************************************************/
+/*--------data declarations -----------------------------------*/
+
+/**
+* Extending control method commands                                  
+*/
+/**
+* The Macro indicates the Get Status Command Enum for the Control API
+*/
+#define IJPEGVDEC_GETSTATUS             XDM_GETSTATUS
+
+/**
+* The Macro indicates the SET PARAMS Command Enum for the Control API
+*/
+#define IJPEGVDEC_SETPARAMS             XDM_SETPARAMS
+
+/**
+* The Macro indicates the XDM RESET Command Enum for the Control API
+*/
+#define IJPEGVDEC_RESET                 XDM_RESET
+
+/**
+* The Macro indicates the XDM FLUSH Command Enum for the Control API
+*/
+#define IJPEGVDEC_FLUSH                 XDM_FLUSH
+
+/**
+* The Macro indicates the SET DEFUALT Command Enum for the Control API
+*/
+#define IJPEGVDEC_SETDEFAULT            XDM_SETDEFAULT
+
+/**
+* The Macro indicates the Get BUFINFO Command Enum for the Control API
+*/
+#define IJPEGVDEC_GETBUFINFO            XDM_GETBUFINFO
+
+/**
+* The Macro indicates the Get VERSION Command Enum for the Control API
+*/
+#define IJPEGVDEC_GETVERSION            XDM_GETVERSION
+
+/**
+* The Macro indicates the Get CONTEXTINFO Command Enum for the Control API
+*/
+#define IJPEGVDEC_GETCONTEXTINFO        XDM_GETCONTEXTINFO
+
+/**
+* The Macro indicates the Get DYNAMICPARAM DEFAULT Command Enum for the 
+* Control API
+*/
+#define IJPEGVDEC_GETDYNPARAMSDEFAULT   XDM_GETDYNPARAMSDEFAULT
+
+#endif  /* _IJPEGVDEC_ */
+
+
+
+
diff --git a/ti_tools/codecs/REL.500.V.MJPEG.D.IVAHD.01.00.06.00/500.V.MJPEG.D.IVAHD.01.00/IVAHD_001/Inc/jpegvdec_ti.h b/ti_tools/codecs/REL.500.V.MJPEG.D.IVAHD.01.00.06.00/500.V.MJPEG.D.IVAHD.01.00/IVAHD_001/Inc/jpegvdec_ti.h
new file mode 100755
index 0000000..d59e8e0
--- /dev/null
+++ b/ti_tools/codecs/REL.500.V.MJPEG.D.IVAHD.01.00.06.00/500.V.MJPEG.D.IVAHD.01.00/IVAHD_001/Inc/jpegvdec_ti.h
@@ -0,0 +1,79 @@
+/*
+********************************************************************************
+* HDVICP2.0 Based JPEG Decoder
+*
+* "HDVICP2.0 Based JPEG Decoder" is software module developed on
+* TI's HDVICP2 based SOCs. This module is capable of generating a raw image
+* by de-compressing/decoding a jpeg bit-stream based on ISO/IEC IS 10918-1.
+* Copyright (C) 2009 Texas Instruments Incorporated - http://www.ti.com/
+* ALL RIGHTS RESERVED
+********************************************************************************
+*/
+
+/**
+********************************************************************************
+* @file      jpegvdec_ti.h
+*
+* @brief     This file provides definisions for the interface handles.
+*
+* @author    Odanaka
+*
+* @version 0.0 (Dec 2008) : Created the initial version.
+* @version 0.1 (Dec 2009)  : Added IRES interface handle[Chetan]
+* @version 0.2 (Feb 2010)  : Coding Guidelines[Chetan] 
+*
+********************************************************************************
+*/
+
+/*----------------------compilation control switches -------------------------*/
+#ifndef _IJPEGVDEC_TI_
+#define _IJPEGVDEC_TI_
+
+/*******************************************************************************
+*   INCLUDE FILES
+*******************************************************************************/
+/* -------------------- system and platform files ----------------------------*/
+#include <ti/xdais/xdas.h>
+#include <ti/xdais/ialg.h>
+#include <ti/xdais/dm/ividdec3.h>
+
+/*----------------------program files ----------------------------------------*/
+#include "ijpegvdec.h"
+
+/*******************************************************************************
+*   PUBLIC DECLARATIONS Defined here, used elsewhere
+*******************************************************************************/
+/*-----------------------data declarations -----------------------------------*/
+
+/**
+* Referene to external symbol JPEGVDEC_TI_IALG, holding the pointers to the
+* all the basic algorithm creation related functions.
+*/
+extern IALG_Fxns     JPEGVDEC_TI_IALG;
+
+/**
+* Referene to external symbol JPEGVDEC_TI_IJPEGVDEC,holding the pointers to
+* the all the jpeg decoder algorithm interfaces
+*/
+extern IJPEGVDEC_Fxns JPEGVDEC_TI_IJPEGVDEC;
+
+/**
+* Referene to external symbol JPEGVDEC_TI_IRES,holding the pointers to
+* the all the jpeg decoder IRES interface functions
+*/
+extern IRES_Fxns JPEGVDEC_TI_IRES;
+
+/*******************************************************************************
+*   PRIVATE DECLARATIONS Defined here, used only here
+*******************************************************************************/
+/* ------------------------ data declarations ------------------------------- */
+
+
+/* ----------------------- function prototypes ------------------------------ */
+
+/* ------------------------------ macros ------------------------------------ */
+
+#endif /* #ifndef _IJPEGVDEC_TI_ */
+
+
+
diff --git a/ti_tools/codecs/REL.500.V.MJPEG.D.IVAHD.01.00.06.00/500.V.MJPEG.D.IVAHD.01.00/IVAHD_001/inc/ijpegvdec.h b/ti_tools/codecs/REL.500.V.MJPEG.D.IVAHD.01.00.06.00/500.V.MJPEG.D.IVAHD.01.00/IVAHD_001/inc/ijpegvdec.h
deleted file mode 100755
index f5ba8e2..0000000
--- a/ti_tools/codecs/REL.500.V.MJPEG.D.IVAHD.01.00.06.00/500.V.MJPEG.D.IVAHD.01.00/IVAHD_001/inc/ijpegvdec.h
+++ /dev/null
@@ -1,633 +0,0 @@
-/*
-********************************************************************************  
-* HDVICP2.0 Based JPEG Decoder
-*
-* "HDVICP2.0 Based JPEG Decoder" is software module developed on
-* TI's HDVICP2 based SOCs. This module is capable of generating a raw image 
-* by de-compressing/decoding a jpeg bit-stream based on ISO/IEC IS 10918-1. 
-* Copyright (C) 2009 Texas Instruments Incorporated - http://www.ti.com/ 
-* ALL RIGHTS RESERVED 
-********************************************************************************
-*/
-
-/**  
-********************************************************************************
-* @file      ijpegvdec.h                     
-*
-* @brief     This file provides definisions for the interface handles.
-*
-* @author    Odanaka
-*
-* @version 0.0 (Dec 2008) : Created the initial version.
-*
-* @version 0.1 (Dec 2009)  : Added extended dynamic paramters[Chetan]
-*
-* @version 0.2 (Feb 2010)  : Coding Guidelines[Chetan] 
-*
-* @version 0.3 (July 2010)  : Added Error Robustness Error Codes[Chetan] 
-*
-* @version 0.4 (Sept 2010)  : Added Error Robustness Error Codes for Data Sync
-*                             [Chetan] 
-* 
-* @version 0.5 (Nov 2010) : Added support for Slice level decoding[Chetan] 
-* 
-* @version 0.6 (Feb 2011) : Added error codes for unsupported features [Chetan]
-*
-* @version 0.7 (Sep 2011) : Exposed default static/dynamic params [Naidu]
-*
-* @version 0.8 (Sep 2011) : Added error codes for un-supported resolutions 
-*                           [Naidu]
-*
-* @version 0.9 (Oct 2012) : Added parameter rangeReduction in extended Dynamic
-*                           parameters to support Limited Pixel range feature.
-*                           [Santoshkumar S K]
-*
-*******************************************************************************
-*/
-
-/*----------------------compilation control switches -------------------------*/
-#ifndef _IJPEGVDEC_
-#define _IJPEGVDEC_
-
-/*******************************************************************************
-*   INCLUDE FILES
-*******************************************************************************/
-/* -------------------- system and platform files ----------------------------*/
-#include <ti/xdais/xdas.h>
-#include <ti/xdais/ialg.h>
-#include <ti/xdais/dm/ividdec3.h>
-#include <ti/xdais/ires.h>
-#include <ti/sdo/fc/ires/hdvicp/ires_hdvicp2.h>
-
-/*----------------------program files ----------------------------------------*/
-
-/*******************************************************************************
-*   PUBLIC DECLARATIONS Defined here, used elsewhere
-*******************************************************************************/
-/*-----------------------data declarations -----------------------------------*/
-
-
-/** 
-*******************************************************************************
-*  @enum       ethumbnailMode
-*  
-*  @brief      Enumerator which defines all the different  types of thumbnail
-*              supported.
-*
-*  @remarks    IJPEGVDEC_THUMBNAIL_JFIF        :  Decode and output thumbnail  
-*                                       available with JFIF marker
-*
-*  @remarks    IJPEGVDEC_THUMBNAIL_EXIF        :  Decode and output thumbnail  
-*                                       available with EXIF marker
-*
-*  @remarks    IJPEGVDEC_THUMBNAIL_DOWNSAMPLE  :  Decode the image and 
-*                                downsample it toprovide it as thumbnail output
-*
-*******************************************************************************
-*/
-typedef enum
-{
-  IJPEGVDEC_THUMBNAIL_JFIF = 1,     
-  IJPEGVDEC_THUMBNAIL_EXIF = 2,
-  IJPEGVDEC_THUMBNAIL_DOWNSAMPLE = 3
-}ethumbnailMode;
-
-/** 
-*******************************************************************************
-*  @enum       edownSamplingFactor
-*  
-*  @brief      Enumerator which defines the factor with which the downsampling
-*              needs to be carried out. This applies to both Horizontal
-*              and vertical dimentions
-*
-*  @remarks    IJPEGVDEC_NODOWNSAMPLE        :  No Down Sample. 
-*
-*  @remarks    IJPEGVDEC_DOWNSAMPLEBY2       :  Downscale by 2
-*
-*  @remarks    IJPEGVDEC_DOWNSAMPLEBY4       :  Downscale by 4  
-*
-*
-*******************************************************************************
-*/
-typedef enum {
-  IJPEGVDEC_NODOWNSAMPLE  = 1,
-  IJPEGVDEC_DOWNSAMPLEBY2 = 2,
-  IJPEGVDEC_DOWNSAMPLEBY4 = 4
-} edownSamplingFactor;
-
-/** 
-*******************************************************************************
-*  @enum       eFrameErrorConcealment
-*  
-*  @brief      Enumerator which defines values to ENABLE or DISABLE
-*              Error Concealment
-*
-*  @remarks    IJPEGVDEC_EC_DISABLE      :  Disable Error concealment
-*
-*  @remarks    IJPEGVDEC_EC_ENABLE       :  Enable Error Concealment
-*
-*
-*******************************************************************************
-*/
-typedef enum
-{
-  IJPEGVDEC_EC_DISABLE = 0,
-  IJPEGVDEC_EC_ENABLE
-}eFrameErrorConcealment;
-
-/**
-*******************************************************************************
-*  @struct IJPEGVDEC_Obj
-*
-*  @brief  This structure must be the first field of all jpgVDEC instance
-*          objects
-*
-*  @param  fxns  : Handle to extented jpeg video decoder library interface 
-*                  functions
-* 
-*******************************************************************************
-*/
-typedef struct IJPEGVDEC_Obj 
-{
-  struct IJPEGVDEC_Fxns *fxns;
-} IJPEGVDEC_Obj;
-
-/**
-*******************************************************************************
-*  @struct IJPEGVDEC_Handle
-*
-*  @brief  This handle is used to reference all jpgVDEC instance objects
-* 
-*******************************************************************************
-*/
-typedef struct IJPEGVDEC_Obj *IJPEGVDEC_Handle;
-
-/**
-*******************************************************************************
-*  @struct IJPEGVDEC_Status
-*
-*  @brief  Status structure defines the parameters that can be changed or 
-*          read during real-time operation of the alogrithm.
-*
-*  @param  viddecStatus  :  Handle to base class status struture which defines 
-*                           the all  run time parameters.
-*
-*  @param extendedErrorCode0 : Extended Error Code0 returned by decoder
-*
-*  @param extendedErrorCode1 : Extended Error Code1 returned by decoder
-*
-*  @param extendedErrorCode2 : Extended Error Code2 returned by decoder
-*
-*  @param extendedErrorCode3 : Extended Error Code3 returned by decoder
-*
-*  @param debugTraceLevel    : DebugTrace level being used by decoder
-*
-*  @param lastNFramesToLog   : Number of frames of debug data decoder is 
-*                              dumping trace buffer
-*
-*  @param extMemoryDebugTraceAddr : Trace buffer base address in external memory
-*
-*  @param extMemoryDebugTraceSize : Size of Trace buffer in external memory
-* 
-*******************************************************************************
-*/
-typedef struct IJPEGVDEC_Status 
-{
-  /*--------------------------------------------------------------------------*/
-  /*Base Class                                                                */
-  /*--------------------------------------------------------------------------*/
-  IVIDDEC3_Status  viddecStatus; 
-  
-  /*--------------------------------------------------------------------------*/
-  /*Extended Error Code0 returned by decoder                                  */
-  /*--------------------------------------------------------------------------*/  
-  XDAS_UInt32 extendedErrorCode0;
-  
-  /*--------------------------------------------------------------------------*/
-  /*Extended Error Code1 returned by decoder                                  */
-  /*--------------------------------------------------------------------------*/ 
-  XDAS_UInt32 extendedErrorCode1;
-  
-  /*--------------------------------------------------------------------------*/
-  /*Extended Error Code2 returned by decoder                                  */
-  /*--------------------------------------------------------------------------*/ 
-  XDAS_UInt32 extendedErrorCode2;
-  
-  /*--------------------------------------------------------------------------*/
-  /*Extended Error Code3 returned by decoder                                  */
-  /*--------------------------------------------------------------------------*/
-  XDAS_UInt32 extendedErrorCode3;  
-
-  /*--------------------------------------------------------------------------*/
-  /*DebugTrace level being used by decoder                                    */
-  /*--------------------------------------------------------------------------*/  
-  XDAS_UInt32 debugTraceLevel;
-  
-  /*--------------------------------------------------------------------------*/
-  /*Number of frames of debug data decoder is dumping trace buffer            */
-  /*--------------------------------------------------------------------------*/ 
-  XDAS_UInt32 lastNFramesToLog;
-
-  /*--------------------------------------------------------------------------*/
-  /* Trace buffer base address in external memory                             */
-  /*--------------------------------------------------------------------------*/  
-  XDAS_UInt32 * extMemoryDebugTraceAddr;
-
-  /*--------------------------------------------------------------------------*/
-  /* Size of Trace buffer in external memory                                  */
-  /*--------------------------------------------------------------------------*/  
-  XDAS_UInt32 extMemoryDebugTraceSize;  
-  
-} IJPEGVDEC_Status;
-
-/**
-*******************************************************************************
-*  @struct IJPEGVDEC_Cmd
-*
-*  @brief  The Cmd enumeration defines the control commands for the JPEG 
-*                video decoder control method.
-* 
-*******************************************************************************
-*/
-typedef IVIDDEC3_Cmd IJPEGVDEC_Cmd;
-
-/**
-*******************************************************************************
-*  @struct IJPEGVDEC_Params
-*
-*  @brief  This structure defines the creation parameters for all 
-*          jpgVDEC objects
-*
-*  @param  viddecParams  :  Defines the creation time parameters for
-*                           all IVIDDEC3 instance objects.
-*
-*  @param  ErrorConcealmentON  :  Enable/Disable Error Concealment 
-*
-*  @param  debugTraceLevel  :  Enable/Disable Error Concealment
-*
-*  @param  lastNFramesToLog  :  Number of frames to log history for debugTrace 
-* 
-*  @param  sliceSwitchON     :  ENABLE/DISABLE Slice Switching  feature.
-* 
-*  @param  numSwitchPerFrame     :  Number of Switches in a Frame.
-* 
-*  @param  numRestartMarkerPerSwitch  :  Number of Restart Marker(slices) to 
-*                                  decode in one process call or in one switch.
-*  
-*******************************************************************************
-*/
-typedef struct IJPEGVDEC_Params 
-{
-  /*--------------------------------------------------------------------------*/
-  /*Base Class                                                                */
-  /*--------------------------------------------------------------------------*/
-  IVIDDEC3_Params    viddecParams; 
-  
-  /*--------------------------------------------------------------------------*/
-  /*Enable/Disable Error Concealment                                          */
-  /* enumeration 'eFrameErrorConcealment' can be used to set this value       */
-  /*--------------------------------------------------------------------------*/
-  XDAS_Int32         ErrorConcealmentON;
-  
-  /*--------------------------------------------------------------------------*/
-  /*Debug trace Level                                                         */
-  /*--------------------------------------------------------------------------*/
-  XDAS_UInt32   debugTraceLevel;
-
-  /*--------------------------------------------------------------------------*/
-  /*Number of frames to log history for debugTrace                            */
-  /*--------------------------------------------------------------------------*/
-  XDAS_UInt32   lastNFramesToLog;
-  
-  /*--------------------------------------------------------------------------*/
-  /* ENABLE/DISABLE Slice Switching  feature.                                 */
-  /* enumeration 'eSliceSwitch' can be used to set this value                 */
-  /*--------------------------------------------------------------------------*/
-  XDAS_UInt32   sliceSwitchON;  
-  
-  /*--------------------------------------------------------------------------*/
-  /* Number of Switches in a Frame. This is valid only when sliceSwitchON is  */
-  /* enabled , when disabled , its dont care.                                 */
-  /* Application tells how many switches should happen in a frame , codec has */
-  /* to decide how to handle each process call ( how many slices) and it has  */
-  /* process "numSwitchInFrame " process calls only                           */
-  /*--------------------------------------------------------------------------*/
-  XDAS_UInt32   numSwitchPerFrame;  
-  
-  /*--------------------------------------------------------------------------*/
-  /* Application tells a number meaning codec has to decode this much slices  */
-  /* or restart markers and come out of process call. Here each switch can    */
-  /*have N number of restart marker ( N should be greater than or equal to 1).*/
-  /* Once codec process call is done , application will give again the next   */
-  /* number and application will handle till all the slices in the frame have */
-  /* been decoded.                                                            */
-  /* This paramter is valid only when "sliceSwitchON"  is enabled             */
-  /*--------------------------------------------------------------------------*/
-  XDAS_UInt32   numRestartMarkerPerSwitch;     
-  
-} IJPEGVDEC_Params;
-
-/**
-*******************************************************************************
-*  @struct IJPEGVDEC_DynamicParams
-*
-*  @brief  This structure defines the run time parameters for all
-*          jpgVDEC objects
-*
-*  @param  viddecDynamicParams  :  Defines the run time parameters for
-*                                  all IVIDDEC3 instance objects.
-*
-*  @param  decodeThumbnail  :  Decode the ThumNail and provide the output for 
-*                              display.
-*
-*  @param  thumbnailMode  :  Specifies which thumbnail to decode. If none of 
-*                            the markers (JFIF and EXIF) have thumbnail image, 
-*                            use IJPEGVDEC_THUMBNAIL_DOWNSAMPLE. Refer to 
-*                            thumbnailMode enumeration          
-*
-*  @param  downsamplingFactor  : If decodeThumbnail is enabled and 
-*                                thumbnailMode is set to  
-*                                IJPEGVDEC_THUMBNAIL_DOWNSAMPLE, 
-*                                downsamplingFactor is used as scaling factor  
-*                                for ThumNail output    
-*                                If decodeThumbnail is disabled, this parameter 
-*                                is used as scaling factor for display buffer 
-*                                output. Refer to  edownSamplingFactor
-*
-*  @param  streamingCompliant  : If an Input Image is Non-Interleaved , 
-*                                Application has to set this params to "0" 
-*                                (DISABLE) , if it is Interleaved , value will 
-*                                be "1" (ENABLE). This Paramater along with 
-*                                ForceChromaFormat determines whether we
-*                                have to give Planar Buffers from GetBufinfo.
-* 
-*  @param  rangeReduction   :  Parameter is used to enable/disable 
-*                              limited Pixel Range feature.
-*
-*******************************************************************************
-*/
-typedef struct IJPEGVDEC_DynamicParams 
-{
-  IVIDDEC3_DynamicParams viddecDynamicParams; 
-  
-
-  XDAS_Int32          decodeThumbnail;           
-  
-  XDAS_Int32          thumbnailMode;  
-  
-  XDAS_Int32         downsamplingFactor;    
-
-  XDAS_Int32         streamingCompliant;     
-
-  XDAS_Int32          rangeReduction;
-  
-} IJPEGVDEC_DynamicParams;
-
-/**
-*******************************************************************************
-*  @struct IJPEGVDEC_InArgs
-*
-*  @brief  This structure defines the run time input arguments for all VIDDEC 
-*          objects.
-*
-*  @param  viddecInArgs       :  Defines the input arguments for all 
-*                                IVIDDEC3 instance process function.
-* 
-*******************************************************************************
-*/
-typedef struct IJPEGVDEC_InArgs 
-{
-  IVIDDEC3_InArgs   viddecInArgs; 
-}IJPEGVDEC_InArgs;
-
-/**
-*******************************************************************************
-*  @struct IJPEGVDEC_OutArgs
-*
-*  @brief  This structure defines the run time output arguments for VIDDEC 
-*          objects.This structure may be extended by individual codec 
-*                implementation allowing customization with vendor specific 
-*          parameters.
-*
-*  @param  viddecOutArgs      :  Defines the output arguments for all 
-*                                IVIDDEC3 instance process function.
-* 
-*******************************************************************************
-*/
-typedef struct IJPEGVDEC_OutArgs 
-{
-  IVIDDEC3_OutArgs  viddecOutArgs;
-  XDAS_UInt32 IsGrayFlag;  
-}IJPEGVDEC_OutArgs;
-
-
-/**
-*******************************************************************************
-*  @struct IJPEGVDEC_Fxns
-*
-*  @brief  This structure defines all of the operations on jpgVDEC objects.
-*
-*  @param  ividdec            :  handle to the all function of the operations 
-*                                on IVIDDEC3 objects
-* 
-*******************************************************************************
-*/
-typedef struct IJPEGVDEC_Fxns 
-{
-  IVIDDEC3_Fxns    ividdec;    
-} IJPEGVDEC_Fxns;
-
-typedef enum
-{
-  IJPEGDEC_ERR_UNSUPPORTED_VIDDEC3PARAMS = 0,
-  IJPEGDEC_ERR_UNSUPPORTED_VIDDEC3DYNAMICPARAMS,
-  IJPEGDEC_ERR_UNSUPPORTED_JPEGDECDYNAMICPARAMS,
-  IJPEGDEC_ERR_NOSLICE,            
-  IJPEGDEC_ERR_MBDATA,             
-  IJPEGDEC_ERR_STANDBY,       
-  IJPEGDEC_ERR_INVALID_MBOX_MESSAGE ,    
-  IJPEGDEC_ERR_HDVICP_RESET,
-  IJPEGDEC_ERR_HDVICP_WAIT_NOT_CLEAN_EXIT = 16,
-  IJPEGDEC_ERR_FRAME_HDR,
-  IJPEGDEC_ERR_SCAN_HDR,
-  IJPEGDEC_ERR_HUFF_TBL_HDR,
-  IJPEGDEC_ERR_QUANT_TBL_HDR,
-  IJPEGDEC_ERR_OUTCHROMAFORMAT,
-  IJPEGDEC_ERR_UNSUPPORTED_MARKER,
-  IJPEGDEC_ERR_THUMBNAIL,
-  IJPEGDEC_ERR_IRES_HANDLE,
-  IJPEGDEC_ERR_DYNAMIC_PARAMS_HANDLE,
-  
-  /* Error Codes of Data Sync */
-  IJPEGDEC_ERR_DATASYNC,
-  IJPEGDEC_ERR_DOWNSAMPLE_INPUT_FORMAT,
-  IJPEGDEC_ERR_NOT_SUPPORTED_FEATURE,
-  IJPEGDEC_ERR_NOT_SUPPORTED_RESOLUTION
-  
-}IJPEGDEC_ExtendedErrorCodes;
-
-typedef enum
-{
-  JPEG_DECODE_THUMBNAIL_ERROR = 0,
-  JPEG_DYNAMIC_PARAMS_HANDLE_ERROR,
-  JPEG_THUMBNAIL_MODE_ERROR,
-  JPEG_DOWNSAMPLING_FACTOR_ERROR,
-  JPEG_STREAMING_COMPLIANT_ERROR,
-  JPEG_NON_INTERLEAVED_STREAMING_COMPLIANT_ERROR,
-  JPEG_DECODE_HEADER_ERROR,
-  JPEG_DISPLAY_WIDTH_ERROR,
-  JPEG_DYNAMIC_PARAMS_SIZE_ERROR,
-  JPEG_NULL_INSTANCE_HANDLE_ERROR,
-  JPEG_NULL_INARGS_POINTER_ERROR,
-  JPEG_NULL_OUTARGS_POINTER_ERROR,
-  JPEG_NULL_INPUT_BUF_DESC_ERROR,
-  JPEG_NULL_OUTPUT_BUF_DESC_ERROR,
-  JPEG_INVALID_INARGS_SIZE,
-  JPEG_INVALID_OUTARGS_SIZE,
-  JPEG_NULL_INPUT_BUFFER_POINTER_ERROR,
-  JPEG_NULL_OUTPUT_BUF_DESC_POINTER_ERROR,
-  JPEG_INVALID_NUM_OF_INPUT_BUFFERS_ERROR,
-  JPEG_INVALID_INPUT_BYTES_ERROR,
-  JPEG_INVALID_INPUT_BUFFER_MEMORY_TYPE_ERROR,
-  JPEG_INVALID_NUM_OF_OUTPUT_BUFFERS_ERROR,
-  JPEG_NULL_OUTPUT_BUFFER_POINTER0_ERROR,
-  JPEG_INVALID_OUTPUT_BUFFER0_SIZE_ERROR,
-  JPEG_INVALID_OUTPUT_BUFFER0_MEMTYPE_ERROR,
-  JPEG_NULL_OUTPUT_BUFFER_POINTER1_ERROR,
-  JPEG_INVALID_OUTPUT_BUFFER1_SIZE_ERROR,
-  JPEG_INVALID_OUTPUT_BUFFER1_MEMTYPE_ERROR,
-  JPEG_NULL_OUTPUT_BUFFER_POINTER2_ERROR,
-  JPEG_INVALID_OUTPUT_BUFFER2_SIZE_ERROR,
-  JPEG_INVALID_OUTPUT_BUFFER2_MEMTYPE_ERROR,
-  JPEG_INVALID_INPUT_ID_ERROR,
-  JPEG_NUM_VDMA_DESC_EXCEEDS_ERROR,
-  JPEG_INVALID_SOI_MARKER_ERROR,
-  JPEG_INVALID_MARKER_SEG_LENGTH_ERROR,
-  JPEG_NON_STANDARD_MARKER_CODE_ERROR,
-  JPEG_INVALID_QUANT_TABLE_TYPE_ERROR,
-  JPEG_QUANT_TABLE_BYTES_READ_ERROR,
-  JPEG_INVALID_HUFFMAN_TABLE_TYPE_ERROR,
-  JPEG_HUFFMAN_CODE_LENGTH_SIZE_EXCEED_ERROR,
-  JPEG_HUFFMAN_TABLE_MARKER_SEG_SIZE_ERROR,
-  JPEG_HUFFMAN_TABLE_BYTES_READ_ERROR,
-  JPEG_INVALID_SAMPLE_PRECISION_ERROR,
-  JPEG_INVALID_NUM_COMPONENTS_ERROR,
-  JPEG_FRAME_HDR_BYTES_READ_ERROR,
-  JPEG_NOT_SUPPORTED_FORMAT_ERROR,
-  JPEG_ARITHMETIC_DECODING_NOT_SUPPORTED_MARKER_ERROR,
-  JPEG_PROG_DECODING_NOT_SUPPORTED_MARKER_ERROR,
-  JPEG_LOSSLESS_DECODING_NOT_SUPPORTED_MARKER_ERROR,
-  JPEG_DIFFERENTIAL_DECODING_NOT_SUPPORTED_MARKER_ERROR,
-  JPEG_JFIF_THUMBNAIL_IDENTIFIER_ERROR,
-  JPEG_JFIF_THUMBNAIL_BYTES_READ_ERROR,
-  JPEG_JFIF_EXTN_NO_SOI_ERROR,
-  JPEG_JFIF_NOT_SUPPORTED_FEATURE_ERROR,
-  JPEG_FORCECHROMA_OUTPUTCHROMA_FORMAT_MISMATCH_ERROR,
-  JPEG_INVALID_VERT_SCAN_FREQ_ERROR,
-  JPEG_INVALID_HORI_SCAN_FREQ_ERROR,
-  JPEG_INVALID_QUANT_DEST_SELECTOR_ERROR,
-  JPEG_DC_ENTROPY_CODING_DEST_ERROR,
-  JPEG_AC_ENTROPY_CODING_DEST_ERROR,
-  JPEG_ECD_VLD_OUT_OF_TABLE_ERROR,
-  JPEG_ECD_RESTART_INTERVAL_ERROR,
-  JPEG_ECD_BLOCK_COEFF_NUM_ERROR,
-  JPEG_GET_DATA_SYNC_NULL_FUNC_POINTER_ERROR,
-  JPEG_PUT_DATA_SYNC_NULL_FUNC_POINTER_ERROR,
-  JPEG_HDVICP_ACQUIRE_AND_CONFIGURE_ERROR,
-  JPEG_NULL_ALGORITHM_HANDLE_ERROR,
-  JPEG_GETVERSION_NULL_BUF_POINTER_ERROR,
-  JPEG_IRES_RESOURCE_DESC_ERROR,
-  JPEG_IRES_RESOURCE_DESC_HANDLE_ERROR,
-  JPEG_NULL_STATUS_DATA_BUF,
-  JPEG_EXCEED_BYTES_CONSUMED_ERROR,
-  
-  /* Extended Error Codes for Data Sync */
-  JPEG_INPUT_DATASYNC_NUMBLOCKS_ERROR,
-  JPEG_INPUT_DATASYNC_BUFF_POINTER_ERROR,
-  JPEG_INPUT_DATASYNC_BLOCKSIZE_ERROR,
-  JPEG_INPUT_DATASYNC_NOT_VALID,
-  
-  JPEG_OUTPUT_DATASYNC_NUMBLOCKS_ERROR,
-  
-  JPEG_SLICE_LEVEL_INPUT_NO_RST_MARKER_ERROR,
-  JPEG_DOWNSAMPLING_IN_NON_TILED_ERROR,
-  JPEG_DOWNSAMPLING_NOT_SUPPORTED_FORMAT_ERROR,
-  JPEG_DOWNSAMPLING_NOT_SUPPORTED_FEATURE_ERROR,
-  JPEG_THUMBNAIL_NOT_SUPPORTED_FEATURE_ERROR,
-  
-  /* Extended Error Codes for Unsupported Resolution */
-  JPEG_NOT_SUPPORTED_WIDTH_ERROR,
-  JPEG_NOT_SUPPORTED_HEIGHT_ERROR,
-  JPEG_DECODE_LIMITED_PIXEL_RANGE_ERROR 
-}IjpegVDEC_ErrorStatus;
-/*
- *  ======== IJPEGVDEC_Params   ========
- *  Default parameter values for JPEGVDEC instance objects
- */
-extern const IJPEGVDEC_Params JPEGVDEC_TI_Static_Params;
-/*
- *  ======== IJPEGVDEC_DynamicParams ========
- *  Default dynamic parameter values for JPEGVDEC instance objects
- */
-extern const IJPEGVDEC_DynamicParams JPEGVDEC_TI_DynamicParams;
-/* ------------------------------ macros ------------------------------------ */
-
-/****************************************************************
-*   PRIVATE DECLARATIONS Defined here, used only here
-****************************************************************/
-/*--------data declarations -----------------------------------*/
-
-/**
-* Extending control method commands                                  
-*/
-/**
-* The Macro indicates the Get Status Command Enum for the Control API
-*/
-#define IJPEGVDEC_GETSTATUS             XDM_GETSTATUS
-
-/**
-* The Macro indicates the SET PARAMS Command Enum for the Control API
-*/
-#define IJPEGVDEC_SETPARAMS             XDM_SETPARAMS
-
-/**
-* The Macro indicates the XDM RESET Command Enum for the Control API
-*/
-#define IJPEGVDEC_RESET                 XDM_RESET
-
-/**
-* The Macro indicates the XDM FLUSH Command Enum for the Control API
-*/
-#define IJPEGVDEC_FLUSH                 XDM_FLUSH
-
-/**
-* The Macro indicates the SET DEFUALT Command Enum for the Control API
-*/
-#define IJPEGVDEC_SETDEFAULT            XDM_SETDEFAULT
-
-/**
-* The Macro indicates the Get BUFINFO Command Enum for the Control API
-*/
-#define IJPEGVDEC_GETBUFINFO            XDM_GETBUFINFO
-
-/**
-* The Macro indicates the Get VERSION Command Enum for the Control API
-*/
-#define IJPEGVDEC_GETVERSION            XDM_GETVERSION
-
-/**
-* The Macro indicates the Get CONTEXTINFO Command Enum for the Control API
-*/
-#define IJPEGVDEC_GETCONTEXTINFO        XDM_GETCONTEXTINFO
-
-/**
-* The Macro indicates the Get DYNAMICPARAM DEFAULT Command Enum for the 
-* Control API
-*/
-#define IJPEGVDEC_GETDYNPARAMSDEFAULT   XDM_GETDYNPARAMSDEFAULT
-
-#endif  /* _IJPEGVDEC_ */
-
-
-
-
diff --git a/ti_tools/codecs/REL.500.V.MJPEG.D.IVAHD.01.00.06.00/500.V.MJPEG.D.IVAHD.01.00/IVAHD_001/inc/jpegvdec_ti.h b/ti_tools/codecs/REL.500.V.MJPEG.D.IVAHD.01.00.06.00/500.V.MJPEG.D.IVAHD.01.00/IVAHD_001/inc/jpegvdec_ti.h
deleted file mode 100755
index d59e8e0..0000000
--- a/ti_tools/codecs/REL.500.V.MJPEG.D.IVAHD.01.00.06.00/500.V.MJPEG.D.IVAHD.01.00/IVAHD_001/inc/jpegvdec_ti.h
+++ /dev/null
@@ -1,79 +0,0 @@
-/*
-********************************************************************************
-* HDVICP2.0 Based JPEG Decoder
-*
-* "HDVICP2.0 Based JPEG Decoder" is software module developed on
-* TI's HDVICP2 based SOCs. This module is capable of generating a raw image
-* by de-compressing/decoding a jpeg bit-stream based on ISO/IEC IS 10918-1.
-* Copyright (C) 2009 Texas Instruments Incorporated - http://www.ti.com/
-* ALL RIGHTS RESERVED
-********************************************************************************
-*/
-
-/**
-********************************************************************************
-* @file      jpegvdec_ti.h
-*
-* @brief     This file provides definisions for the interface handles.
-*
-* @author    Odanaka
-*
-* @version 0.0 (Dec 2008) : Created the initial version.
-* @version 0.1 (Dec 2009)  : Added IRES interface handle[Chetan]
-* @version 0.2 (Feb 2010)  : Coding Guidelines[Chetan] 
-*
-********************************************************************************
-*/
-
-/*----------------------compilation control switches -------------------------*/
-#ifndef _IJPEGVDEC_TI_
-#define _IJPEGVDEC_TI_
-
-/*******************************************************************************
-*   INCLUDE FILES
-*******************************************************************************/
-/* -------------------- system and platform files ----------------------------*/
-#include <ti/xdais/xdas.h>
-#include <ti/xdais/ialg.h>
-#include <ti/xdais/dm/ividdec3.h>
-
-/*----------------------program files ----------------------------------------*/
-#include "ijpegvdec.h"
-
-/*******************************************************************************
-*   PUBLIC DECLARATIONS Defined here, used elsewhere
-*******************************************************************************/
-/*-----------------------data declarations -----------------------------------*/
-
-/**
-* Referene to external symbol JPEGVDEC_TI_IALG, holding the pointers to the
-* all the basic algorithm creation related functions.
-*/
-extern IALG_Fxns     JPEGVDEC_TI_IALG;
-
-/**
-* Referene to external symbol JPEGVDEC_TI_IJPEGVDEC,holding the pointers to
-* the all the jpeg decoder algorithm interfaces
-*/
-extern IJPEGVDEC_Fxns JPEGVDEC_TI_IJPEGVDEC;
-
-/**
-* Referene to external symbol JPEGVDEC_TI_IRES,holding the pointers to
-* the all the jpeg decoder IRES interface functions
-*/
-extern IRES_Fxns JPEGVDEC_TI_IRES;
-
-/*******************************************************************************
-*   PRIVATE DECLARATIONS Defined here, used only here
-*******************************************************************************/
-/* ------------------------ data declarations ------------------------------- */
-
-
-/* ----------------------- function prototypes ------------------------------ */
-
-/* ------------------------------ macros ------------------------------------ */
-
-#endif /* #ifndef _IJPEGVDEC_TI_ */
-
-
-
diff --git a/ti_tools/codecs/REL.500.V.MJPEG.E.IVAHD.01.00.04.00/500.V.MJPEG.E.IVAHD.01.00/IVAHD_001/Inc/ijpegenc.h b/ti_tools/codecs/REL.500.V.MJPEG.E.IVAHD.01.00.04.00/500.V.MJPEG.E.IVAHD.01.00/IVAHD_001/Inc/ijpegenc.h
new file mode 100755
index 0000000..7d9d85c
--- /dev/null
+++ b/ti_tools/codecs/REL.500.V.MJPEG.E.IVAHD.01.00.04.00/500.V.MJPEG.E.IVAHD.01.00/IVAHD_001/Inc/ijpegenc.h
@@ -0,0 +1,472 @@
+/*
+********************************************************************************
+* HDVICP2.0 Based JPEG Encoder
+*
+* "HDVICP2.0 Based JPEG Encoder" is software module developed for
+* TI's HDVICP2 based SoCs. This module is capable of encoding a raw image
+* by compressing it into a JPEG bitstream compliant with ISO/IEC IS 10918-1.
+* Copyright (C) 2009 Texas Instruments Incorporated - http://www.ti.com/
+* ALL RIGHTS RESERVED
+********************************************************************************
+*/
+/**
+********************************************************************************
+* @file      ijpegenc.h
+*
+* @brief     JPEG specific interface details
+*
+* @author    Pavan Kumar
+*
+* @version 0.0 (Dec 2009) : Created the initial version.
+*
+* @version 0.1 (Jan 2010):Modified for Functionality requirements[Pavan,Vasudev]
+*
+* @version 0.2 (Feb 2010) : Review & Cleanup [Vasudev]
+*
+* @version 0.3 (Aug 2010):Debug Trace & error Robustness support added[Vasudev]
+*
+* @version 0.4 (Dec 2010) : Added support for error recovery and error 
+*                           robustness in case of data sync errors[Pavan]
+*
+* @version 0.5 (Nov 2011) : Added support for Minimum Quality factor 1 and  
+*                           Maximum Quality factor 100        [Naidu]
+*
+* @version 0.6 (Nov 2011) : Create and Dynamic Default structure are exposed to 
+*                           Application                       [Naidu]
+********************************************************************************
+*/
+
+/* -------------------- compilation control switches -------------------------*/
+#ifndef JPEGENC_TI_IJPEGVENC_H
+#define JPEGENC_TI_IJPEGVENC_H
+
+/**
+* Macro for Minimum,maximum & Default Quality Factor
+**/
+#define IJPEGVENC_MIN_QUALITY_FACTOR      (1)
+#define IJPEGVENC_MAX_QUALITY_FACTOR      (100)
+#define IJPEGVENC_DEFAULT_QUALITY_FACTOR  (50)
+
+/*******************************************************************************
+*                             INCLUDE FILES
+*******************************************************************************/
+/* -------------------- system and platform files ----------------------------*/
+#include <ti/xdais/ialg.h>
+#include <ti/xdais/dm/ividenc2.h>
+#include <ti/xdais/xdas.h>
+/*--------------------- program files ----------------------------------------*/
+
+/*******************************************************************************
+*  PUBLIC DECLARATIONS Defined here, used elsewhere
+*******************************************************************************/
+/*---------------------- data declarations -----------------------------------*/
+/**
+********************************************************************************
+*  @struct     IJPEGVENC_Obj
+*
+*  @brief       This structure must be the first field of all JPEGVENC
+*               instance objects
+*
+*  @param  fxns : Pointer to Functions which performs all the operations on
+*                 IJPEGVENC objects.
+********************************************************************************
+*/
+typedef struct IJPEGVENC_Obj {
+  struct IJPEGVENC_Fxns *fxns;
+} IJPEGVENC_Obj;
+
+/**
+********************************************************************************
+*  @struct     IJPEGVENC_Status
+*
+*  @brief       Status structure defines the parameters that can be changed or
+*               read during real-time operation of the alogrithm.
+*
+*  @param videnc2Status : This structure holds all the status parameters for
+*                         IVIDENC2 Objects
+********************************************************************************
+*/
+typedef struct IJPEGVENC_Status {
+  /*--------------------------------------------------------------------------*/
+  /* Base Class                                                               */
+  /*--------------------------------------------------------------------------*/
+  IVIDENC2_Status videnc2Status;
+
+  /*--------------------------------------------------------------------------*/
+  /*Debug trace Level : Possible values are 0,1,2,3,4                         */
+  /*--------------------------------------------------------------------------*/
+  XDAS_UInt32 debugTraceLevel;
+
+  /*--------------------------------------------------------------------------*/
+  /* Number of last frames to log the debug info                              */
+  /*--------------------------------------------------------------------------*/
+  XDAS_UInt32 lastNFramesToLog;
+
+  /*--------------------------------------------------------------------------*/
+  /* base address of the trace buffer in external memory                      */
+  /*--------------------------------------------------------------------------*/  
+  XDAS_UInt32 * extMemoryDebugTraceAddr;
+  
+  /*--------------------------------------------------------------------------*/
+  /* Size of the trace buffer                                                 */
+  /*--------------------------------------------------------------------------*/    
+  XDAS_UInt32 extMemoryDebugTraceSize;
+
+  /*--------------------------------------------------------------------------*/
+  /* Extended Error Code0 returned by encoder                                 */
+  /*--------------------------------------------------------------------------*/
+  XDAS_UInt32 extendedErrorCode0;
+  
+  /*--------------------------------------------------------------------------*/
+  /* Extended Error Code1 returned by encoder                                 */
+  /*--------------------------------------------------------------------------*/
+  XDAS_UInt32 extendedErrorCode1;
+  
+  /*--------------------------------------------------------------------------*/
+  /* Extended Error Code2 returned by encoder                                 */
+  /*--------------------------------------------------------------------------*/
+  XDAS_UInt32 extendedErrorCode2;
+  
+  /*--------------------------------------------------------------------------*/
+  /* Extended Error Code3 returned by encoder                                 */
+  /*--------------------------------------------------------------------------*/
+  XDAS_UInt32 extendedErrorCode3;  
+
+} IJPEGVENC_Status;
+
+/**
+********************************************************************************
+*  @struct     IJPEGVENC_Params
+*
+*  @brief       This structure defines the creation parameters for
+*               all JPEGVENC objects
+*
+*  @param  videnc2Params :Create time Parameter structure
+*
+*  @param  maxThumbnailHSizeApp0:Max Horizontal resolution for APP0
+*                                   thumbnail
+*  @param  maxThumbnailVSizeApp0 :Max Vertical resolution for APP0
+*                                    thumbnail
+*  @param  maxThumbnailHSizeApp1:Max Horizontal resolution for APP1
+*                                   thumbnail
+*  @param  maxThumbnailVSizeApp1 :Max Vertical resolution for APP1
+*                                    thumbnail
+*  @param  chm_dc_vlc[12] :Chroma AC codes
+********************************************************************************
+*/
+typedef struct IJPEGVENC_Params {
+  /*--------------------------------------------------------------------------*/
+  /* Base Class                                                               */
+  /*--------------------------------------------------------------------------*/
+  IVIDENC2_Params videnc2Params;
+  
+  /*--------------------------------------------------------------------------*/
+  /* Max Horizontal resolution for APP0 thumbnail                             */
+  /*--------------------------------------------------------------------------*/
+  XDAS_UInt16     maxThumbnailHSizeApp0;
+
+  /*--------------------------------------------------------------------------*/
+  /* Max Vertical resolution for APP0 thumbnail                               */
+  /*--------------------------------------------------------------------------*/
+  XDAS_UInt16     maxThumbnailVSizeApp0;
+  
+  /*--------------------------------------------------------------------------*/
+  /* Max Horizontal resolution for APP1 thumbnail                             */
+  /*--------------------------------------------------------------------------*/
+  XDAS_UInt16     maxThumbnailHSizeApp1;
+
+  /*--------------------------------------------------------------------------*/
+  /* Max Vertical resolution for APP0 thumbnail                               */
+  /*--------------------------------------------------------------------------*/
+  XDAS_UInt16     maxThumbnailVSizeApp1;
+
+  /*--------------------------------------------------------------------------*/
+  /*Debug trace Level                                                         */
+  /*--------------------------------------------------------------------------*/
+  XDAS_UInt32   debugTraceLevel;
+
+  /*--------------------------------------------------------------------------*/
+  /*History of last N frames                                                  */
+  /*--------------------------------------------------------------------------*/
+  XDAS_UInt32   lastNFramesToLog;  
+
+} IJPEGVENC_Params;
+
+typedef IVIDENC2_Cmd IJPEGVENC_Cmd;
+
+/**
+********************************************************************************
+*  @struct     IJPEGVENC_CustomQuantTables
+*
+*  @brief      JPEG Encoder Custom Quantization Tables - This structure defines
+*              the custom quantization tables for both Luma & Chroma that need
+*              to be passed to the JPEG Encoder. This will be used in the
+*              Quantization Module.The format is as specified in RFC 2035
+*              (RTP Payload Format for JPEG-compressed Video) and also in
+*              Table K.1 & K.2 of JPEG Spec.
+*
+*              NOTE: The "IJPEGVENC_DynamicParams" structure defined below
+*              contains a pointer to this structure of type
+*              "IJPEGVENC_CustomQuantTables" -
+*              "IJPEGVENC_CustomQuantTables *quantTable".
+*              This field is used to pass custom Quantization tables to the
+*              JPEG Encoder.The application just needs to initialize this field
+*              appropriately.However, if the application wishes to use the
+*              Standard Quantization Tables,then there are 2 ways of informing
+*              this to the JPEG Encoder -
+*             (a) by using the base class only "IJPEGVENC_DynamicParams" and not
+*                 the extended class "IJPEGVENC_DynamicParams", in which case
+*                 the size field in the DynamicParams structure should be set to
+*                 the size of "IJPEGVENC_DynamicParams".
+*             (b) by using the extended class "IJPEGVENC_DynamicParams", but by
+*                 setting the field "IJPEGVENC_CustomQuantTables *quantTable" to
+*                 NULL.
+*
+*  @param  lumQuantTab :This defines the quantization table for the luma
+*                       component.
+*  @param  chmQuantTab :This defines the quantization table for the chroma
+*                       component.
+********************************************************************************
+*/
+typedef struct IJPEGVENC_CustomQuantTables
+{
+  /*--------------------------------------------------------------------------*/
+  /* The array "lumQuantTab" defines the quantization table for the luma      */
+  /*  component.                                                              */
+  /*--------------------------------------------------------------------------*/
+  XDAS_UInt16 lumQuantTab[64];
+
+  /*--------------------------------------------------------------------------*/
+  /* The array "chmQuantTab" defines the quantization table for the chroma    */
+  /* component.                                                               */
+  /*--------------------------------------------------------------------------*/
+  XDAS_UInt16 chmQuantTab[64];
+
+} IJPEGVENC_CustomQuantTables;
+
+/**
+********************************************************************************
+*  @struct     IJPEGVENC_DynamicParams
+*
+*  @brief       This structure defines the dynamic parameters for
+*               all JPEGVENC objects
+*
+*  @param videnc2DynamicParams: IVIDENC2_Dynamic Params
+*  @param restartInterval     : Restart Interval
+*  @param qualityFactor       : Quality factor
+*  @param quantTable          :User Defined Quant Table
+
+********************************************************************************
+*/
+typedef struct IJPEGVENC_DynamicParams {
+  /*--------------------------------------------------------------------------*/
+  /* Base Class                                                               */
+  /*--------------------------------------------------------------------------*/
+  IVIDENC2_DynamicParams videnc2DynamicParams;
+  
+  /*--------------------------------------------------------------------------*/
+  /* restartInterval : Specifies the number of MCUs between RST markers       */
+  /*--------------------------------------------------------------------------*/
+  XDAS_Int32             restartInterval;
+
+  /*--------------------------------------------------------------------------*/
+  /* qualityFactor : Specifies the quality setting to use for encoding        */
+  /*                 Supported values are from 0 (lowest quality)             */
+  /*                 to 97 (highest quality)                                  */
+  /*--------------------------------------------------------------------------*/
+  XDAS_Int32             qualityFactor;
+
+  /*--------------------------------------------------------------------------*/
+  /* quantTable : Application should populate the custom quant table in a     */
+  /*              structure of type IJPEGVENC_CustomQuantTables and pass the  */
+  /*              pointer to it here. Set it to NULL if custom quant tables   */
+  /*              are not to be used.                                         */
+  /*--------------------------------------------------------------------------*/
+  IJPEGVENC_CustomQuantTables *quantTable;
+  
+} IJPEGVENC_DynamicParams;
+
+/**
+********************************************************************************
+*  @struct     IJPEGVENC_InArgs
+*
+*  @brief       This structure defines the runtime input arguments
+*               for IJPEGVENC::process
+*
+*  @param videnc2InArgs              :IVIDENC2_InArgs
+*  @param APPN0                      :APP0 thumbnail Buffer
+*  @param thumbnailIndexApp0       :JFIF Thumbnail Enable
+*  @param APPN1                      :APP1 thumbnail Buffer
+*  @param thumbnailIndexApp1       :EXIF Thumbnail Enable
+*  @param Comment                    :Comment Data
+********************************************************************************
+*/
+
+typedef struct IJPEGVENC_InArgs {
+  /*--------------------------------------------------------------------------*/
+  /* Base Class                                                               */
+  /*--------------------------------------------------------------------------*/
+  IVIDENC2_InArgs videnc2InArgs;
+  
+  /*--------------------------------------------------------------------------*/
+  /* APPN0 : buffer holding the data for APP-0 Marker                         */
+  /*--------------------------------------------------------------------------*/
+  XDM2_SingleBufDesc  APPN0;
+
+  /*--------------------------------------------------------------------------*/
+  /* thumbnailIndexApp0 :                                                     */
+  /*--------------------------------------------------------------------------*/
+  XDAS_UInt16    thumbnailIndexApp0;
+
+  /*--------------------------------------------------------------------------*/
+  /* APPN1 : buffer holding the data for APP-1 Marker                         */
+  /*--------------------------------------------------------------------------*/
+  XDM2_SingleBufDesc  APPN1;
+
+  /*--------------------------------------------------------------------------*/
+  /* Thumbnail_Index_App0 :                                                   */
+  /*--------------------------------------------------------------------------*/
+  XDAS_UInt16    thumbnailIndexApp1;
+
+  /*--------------------------------------------------------------------------*/
+  /* Comment : buffer holding the data for comment Marker                     */
+  /*--------------------------------------------------------------------------*/
+  XDM2_SingleBufDesc  Comment;
+
+} IJPEGVENC_InArgs;
+
+/**
+********************************************************************************
+*  @struct     IJPEGVENC_OutArgs
+*
+*  @brief  This structure defines the runtime output arguments
+*          for IJPEGVENC::process
+*
+*  @param  videnc2OutArgs :This structure contains run time output arguments for
+*                          all IVIDENC2 instance objects
+********************************************************************************
+*/
+
+typedef struct IJPEGVENC_OutArgs {
+  IVIDENC2_OutArgs videnc2OutArgs;
+} IJPEGVENC_OutArgs;
+
+/**
+********************************************************************************
+*  @struct     IJPEGVENC_Fxns
+*
+*  @brief       This structure defines all of the operations on
+*               JPEGVENC objects.
+*  @param ividenc : Pointer to Functions which performs all the operations on
+*                   IVIDENC2 objects.
+********************************************************************************
+*/
+typedef struct IJPEGVENC_Fxns {
+  IVIDENC2_Fxns ividenc;
+} IJPEGVENC_Fxns;
+
+/**
+ * The error codes correspond to the 32-bit extended error parameter passed 
+ * through outargs and get sttus. The error have been categorised to the below 
+ * 32 groups and the respective bit is set on error occurrence.
+ */
+typedef enum
+{
+  IJPEGVENC_ERR_UNSUPPORTED_VIDENC2PARAMS = 0,
+  IJPEGVENC_ERR_UNSUPPORTED_VIDENC2DYNAMICPARAMS,            
+  IJPEGVENC_ERR_UNSUPPORTED_JPEGENCDYNAMICPARAMS,              
+  IJPEGVENC_ERR_IMPROPER_DATASYNC_SETTING,      
+  IJPEGVENC_ERR_NOSLICE,     
+  IJPEGVENC_ERR_SLICEHDR,            
+  IJPEGVENC_ERR_MBDATA,            
+  IJPEGVENC_ERR_UNSUPPFEATURE,     
+  IJPEGVENC_ERR_STREAM_END = 16,            
+  IJPEGVENC_ERR_INVALID_MBOX_MESSAGE,    
+  IJPEGVENC_ERR_HDVICP_RESET,
+  IJPEGVENC_ERR_HDVICP_WAIT_NOT_CLEAN_EXIT,
+  IJPEGVENC_ERR_IRES_RESHANDLE,
+  IJPEGVENC_ERR_STANDBY,
+
+  /* Error Codes for Data Sync */
+  IJPEGVENC_ERR_INPUT_DATASYNC,
+  IJPEGVENC_ERR_OUTPUT_DATASYNC
+
+}IJPEGVENC_ExtendedErrorCodes;
+
+/**
+ * The enum corresponds to the 4 32-bit words used to pass the error codes to 
+ * the application in the extended parameters of status stucture through the 
+ * getstatus command. Each bit is set for an error which falls under one of 
+ * the groups in the outargs 32 bvits.
+ */
+typedef enum
+{
+  JPEG_DYNAMIC_PARAMS_HANDLE_ERROR = 0,
+  JPEG_STATUS_HANDLE_ERROR,
+  JPEG_DYNAMIC_PARAMS_SIZE_ERROR,
+  JPEG_ENCODE_HEADER_ERROR,
+  JPEG_UNSUPPORTED_RESOLUTION,
+  JPEG_CAPTURE_WIDTH_ERROR,
+  JPEG_GET_DATA_FXN_NULL_POINTER,
+  JPEG_GET_BUFFER_FXN_NULL_POINTER,
+  JPEG_INVALID_RESTART_INTERVAL_ERROR,
+  JPEG_INVALID_QUALITY_FACTOR_ERROR,
+  JPEG_INVALID_INPUT_CHROMA_FORMAT_ERROR,
+  JPEG_NULL_QUANT_TABLE_POINTER_ERROR,
+  JPEG_NULL_INARGS_POINTER_ERROR,
+  JPEG_NULL_INARGS_APP_POINTER_ERROR,
+  JPEG_INARGS_SIZE_ERROR,
+  JPEG_INVALID_INPUT_BYTES_ERROR,
+  JPEG_INVALID_INPUT_ID_ERROR,
+  JPEG_NULL_INPUT_BUF_DESC_ERROR,
+  JPEG_NULL_INPUT_BUFFER_POINTER_ERROR,
+  JPEG_INVALID_INPUT_BUFFER_SIZE_ERROR,
+  JPEG_INVALID_NUM_OF_INPUT_BUFFERS_ERROR,
+  JPEG_INVALID_INPUT_BUFFER_MEMTYPE_ERROR,
+  JPEG_INVALID_OUTPUT_BUFFER_MEMTYPE_ERROR,
+  JPEG_NULL_OUTARGS_POINTER_ERROR,
+  JPEG_INVALID_OUTARGS_SIZE,
+  JPEG_NULL_OUTPUT_BUF_DESC_ERROR,
+  JPEG_NULL_OUTPUT_BUFFER_POINTER_ERROR,
+  JPEG_INVALID_OUTPUT_BUFFER_SIZE_ERROR,
+  JPEG_INVALID_NUM_OF_OUTPUT_BUFFERS_ERROR,
+  JPEG_INSUFFICIENT_OUTPUT_BUFFER_SIZE_ERROR,
+  JPEG_INVALID_JFIF_THUMBNAIL_ENABLE_ERROR,
+  JPEG_INVALID_EXIF_THUMBNAIL_ENABLE_ERROR,
+  JPEG_INPUT_BUFFER_POINTER_ALIGN_ERROR,
+  
+  /* Extended Error Codes related to Data Sync */
+  JPEG_DATASYNC_GET_ROW_DATA_ERROR, /* from 33rd bit*/
+  
+  JPEG_DATASYNC_INVALID_RESTART_INTERVAL_ERROR,
+  
+  JPEG_DATASYNC_BLOCK_POINTER_ERROR,
+  JPEG_DATASYNC_BLOCK_SIZE_ERROR,
+  JPEG_DATASYNC_INVALID_BLOCKS_ERROR,
+  JPEG_DATASYNC_NOT_VALID_COMBINATION_ERROR
+}IjpegVENC_ErrorStatus;
+
+/**
+******************************************************************************
+ *  ======== IJPEGVENC_DynamicParams ========
+ *  Default Create parameter values for JPEGVENC instance objects
+********************************************************************************
+*/
+extern const IJPEGVENC_DynamicParams JPEGVENC_TI_DYNAMICPARAMS;
+/**
+******************************************************************************
+ *  ======== IJPEGVENC_Params ========
+ *  Default DynamicParams values for JPEGVENC instance objects
+********************************************************************************
+*/
+extern const IJPEGVENC_Params JPEGVENC_TI_PARAMS;
+
+/*******************************************************************************
+*  PRIVATE DECLARATIONS Defined here, used only here
+*******************************************************************************/
+/*---------------------- data declarations -----------------------------------*/
+
+/*---------------------- function prototypes ---------------------------------*/
+
+#endif /*#ifndef JPEGENC_TI_IJPEGVENC_H*/
+
diff --git a/ti_tools/codecs/REL.500.V.MJPEG.E.IVAHD.01.00.04.00/500.V.MJPEG.E.IVAHD.01.00/IVAHD_001/Inc/jpegenc_ti.h b/ti_tools/codecs/REL.500.V.MJPEG.E.IVAHD.01.00.04.00/500.V.MJPEG.E.IVAHD.01.00/IVAHD_001/Inc/jpegenc_ti.h
new file mode 100755
index 0000000..444b05b
--- /dev/null
+++ b/ti_tools/codecs/REL.500.V.MJPEG.E.IVAHD.01.00.04.00/500.V.MJPEG.E.IVAHD.01.00/IVAHD_001/Inc/jpegenc_ti.h
@@ -0,0 +1,71 @@
+/*
+********************************************************************************
+* HDVICP2.0 Based JPEG Encoder
+*
+* "HDVICP2.0 Based JPEG Encoder" is software module developed for
+* TI's HDVICP2 based SoCs. This module is capable of encoding a raw image
+* by compressing it into a JPEG bitstream compliant with ISO/IEC IS 10918-1.
+* Copyright (C) 2009 Texas Instruments Incorporated - http://www.ti.com/
+* ALL RIGHTS RESERVED
+********************************************************************************
+*/
+/**
+********************************************************************************
+* @file      Jpegenc_ti.h
+*
+* @brief     TI Interface related header file
+*
+* @author    Pavan Kumar
+*
+* @version 0.0 (Dec 2009) : Created the initial version.
+*
+* @version 0.1 (Feb 2010) : Review & clean up
+*
+* @version 0.2 (Sep 2010) : Review & clean up
+********************************************************************************
+*/
+/* -------------------- compilation control switches -------------------------*/
+#ifndef JPEGENC_TI_
+#define JPEGENC_TI_
+
+/*******************************************************************************
+*                             INCLUDE FILES
+*******************************************************************************/
+/* -------------------- system and platform files ----------------------------*/
+#include <ti/xdais/ialg.h>
+#include <ti/xdais/ires.h>
+/*--------------------- program files ----------------------------------------*/
+
+
+/*******************************************************************************
+*  PUBLIC DECLARATIONS Defined here, used elsewhere
+*******************************************************************************/
+/*---------------------- data declarations -----------------------------------*/
+
+/**
+* Referene to external symbol JPEGVENC_TI_IALG, holding the pointers to the
+* all the basic algorithm creation related functions.
+*/
+/*----------------------------------------------------------------*/
+extern IALG_Fxns JPEGVENC_TI_IALG;
+
+/**
+* Referene to external symbol JPEGVENC_TI_IJPEGVENC,holding the pointers to
+* the all the mpeg2 decoder algorithm interfaces
+*/
+extern IVIDENC2_Fxns JPEGVENC_TI_IJPEGVENC;
+
+/**
+* Referene to external symbol JPEGVENC_TI_IRES, holding the pointers to the
+* all the basic RMAN-IRES reource related functions.
+*/
+extern IRES_Fxns JPEGVENC_TI_IRES;
+
+/*******************************************************************************
+*  PRIVATE DECLARATIONS Defined here, used only here
+*******************************************************************************/
+/*---------------------- data declarations -----------------------------------*/
+
+/*---------------------- function prototypes ---------------------------------*/
+
+#endif /*#ifndef JPEGENC_TI_*/
diff --git a/ti_tools/codecs/REL.500.V.MJPEG.E.IVAHD.01.00.04.00/500.V.MJPEG.E.IVAHD.01.00/IVAHD_001/inc/ijpegenc.h b/ti_tools/codecs/REL.500.V.MJPEG.E.IVAHD.01.00.04.00/500.V.MJPEG.E.IVAHD.01.00/IVAHD_001/inc/ijpegenc.h
deleted file mode 100755
index 7d9d85c..0000000
--- a/ti_tools/codecs/REL.500.V.MJPEG.E.IVAHD.01.00.04.00/500.V.MJPEG.E.IVAHD.01.00/IVAHD_001/inc/ijpegenc.h
+++ /dev/null
@@ -1,472 +0,0 @@
-/*
-********************************************************************************
-* HDVICP2.0 Based JPEG Encoder
-*
-* "HDVICP2.0 Based JPEG Encoder" is software module developed for
-* TI's HDVICP2 based SoCs. This module is capable of encoding a raw image
-* by compressing it into a JPEG bitstream compliant with ISO/IEC IS 10918-1.
-* Copyright (C) 2009 Texas Instruments Incorporated - http://www.ti.com/
-* ALL RIGHTS RESERVED
-********************************************************************************
-*/
-/**
-********************************************************************************
-* @file      ijpegenc.h
-*
-* @brief     JPEG specific interface details
-*
-* @author    Pavan Kumar
-*
-* @version 0.0 (Dec 2009) : Created the initial version.
-*
-* @version 0.1 (Jan 2010):Modified for Functionality requirements[Pavan,Vasudev]
-*
-* @version 0.2 (Feb 2010) : Review & Cleanup [Vasudev]
-*
-* @version 0.3 (Aug 2010):Debug Trace & error Robustness support added[Vasudev]
-*
-* @version 0.4 (Dec 2010) : Added support for error recovery and error 
-*                           robustness in case of data sync errors[Pavan]
-*
-* @version 0.5 (Nov 2011) : Added support for Minimum Quality factor 1 and  
-*                           Maximum Quality factor 100        [Naidu]
-*
-* @version 0.6 (Nov 2011) : Create and Dynamic Default structure are exposed to 
-*                           Application                       [Naidu]
-********************************************************************************
-*/
-
-/* -------------------- compilation control switches -------------------------*/
-#ifndef JPEGENC_TI_IJPEGVENC_H
-#define JPEGENC_TI_IJPEGVENC_H
-
-/**
-* Macro for Minimum,maximum & Default Quality Factor
-**/
-#define IJPEGVENC_MIN_QUALITY_FACTOR      (1)
-#define IJPEGVENC_MAX_QUALITY_FACTOR      (100)
-#define IJPEGVENC_DEFAULT_QUALITY_FACTOR  (50)
-
-/*******************************************************************************
-*                             INCLUDE FILES
-*******************************************************************************/
-/* -------------------- system and platform files ----------------------------*/
-#include <ti/xdais/ialg.h>
-#include <ti/xdais/dm/ividenc2.h>
-#include <ti/xdais/xdas.h>
-/*--------------------- program files ----------------------------------------*/
-
-/*******************************************************************************
-*  PUBLIC DECLARATIONS Defined here, used elsewhere
-*******************************************************************************/
-/*---------------------- data declarations -----------------------------------*/
-/**
-********************************************************************************
-*  @struct     IJPEGVENC_Obj
-*
-*  @brief       This structure must be the first field of all JPEGVENC
-*               instance objects
-*
-*  @param  fxns : Pointer to Functions which performs all the operations on
-*                 IJPEGVENC objects.
-********************************************************************************
-*/
-typedef struct IJPEGVENC_Obj {
-  struct IJPEGVENC_Fxns *fxns;
-} IJPEGVENC_Obj;
-
-/**
-********************************************************************************
-*  @struct     IJPEGVENC_Status
-*
-*  @brief       Status structure defines the parameters that can be changed or
-*               read during real-time operation of the alogrithm.
-*
-*  @param videnc2Status : This structure holds all the status parameters for
-*                         IVIDENC2 Objects
-********************************************************************************
-*/
-typedef struct IJPEGVENC_Status {
-  /*--------------------------------------------------------------------------*/
-  /* Base Class                                                               */
-  /*--------------------------------------------------------------------------*/
-  IVIDENC2_Status videnc2Status;
-
-  /*--------------------------------------------------------------------------*/
-  /*Debug trace Level : Possible values are 0,1,2,3,4                         */
-  /*--------------------------------------------------------------------------*/
-  XDAS_UInt32 debugTraceLevel;
-
-  /*--------------------------------------------------------------------------*/
-  /* Number of last frames to log the debug info                              */
-  /*--------------------------------------------------------------------------*/
-  XDAS_UInt32 lastNFramesToLog;
-
-  /*--------------------------------------------------------------------------*/
-  /* base address of the trace buffer in external memory                      */
-  /*--------------------------------------------------------------------------*/  
-  XDAS_UInt32 * extMemoryDebugTraceAddr;
-  
-  /*--------------------------------------------------------------------------*/
-  /* Size of the trace buffer                                                 */
-  /*--------------------------------------------------------------------------*/    
-  XDAS_UInt32 extMemoryDebugTraceSize;
-
-  /*--------------------------------------------------------------------------*/
-  /* Extended Error Code0 returned by encoder                                 */
-  /*--------------------------------------------------------------------------*/
-  XDAS_UInt32 extendedErrorCode0;
-  
-  /*--------------------------------------------------------------------------*/
-  /* Extended Error Code1 returned by encoder                                 */
-  /*--------------------------------------------------------------------------*/
-  XDAS_UInt32 extendedErrorCode1;
-  
-  /*--------------------------------------------------------------------------*/
-  /* Extended Error Code2 returned by encoder                                 */
-  /*--------------------------------------------------------------------------*/
-  XDAS_UInt32 extendedErrorCode2;
-  
-  /*--------------------------------------------------------------------------*/
-  /* Extended Error Code3 returned by encoder                                 */
-  /*--------------------------------------------------------------------------*/
-  XDAS_UInt32 extendedErrorCode3;  
-
-} IJPEGVENC_Status;
-
-/**
-********************************************************************************
-*  @struct     IJPEGVENC_Params
-*
-*  @brief       This structure defines the creation parameters for
-*               all JPEGVENC objects
-*
-*  @param  videnc2Params :Create time Parameter structure
-*
-*  @param  maxThumbnailHSizeApp0:Max Horizontal resolution for APP0
-*                                   thumbnail
-*  @param  maxThumbnailVSizeApp0 :Max Vertical resolution for APP0
-*                                    thumbnail
-*  @param  maxThumbnailHSizeApp1:Max Horizontal resolution for APP1
-*                                   thumbnail
-*  @param  maxThumbnailVSizeApp1 :Max Vertical resolution for APP1
-*                                    thumbnail
-*  @param  chm_dc_vlc[12] :Chroma AC codes
-********************************************************************************
-*/
-typedef struct IJPEGVENC_Params {
-  /*--------------------------------------------------------------------------*/
-  /* Base Class                                                               */
-  /*--------------------------------------------------------------------------*/
-  IVIDENC2_Params videnc2Params;
-  
-  /*--------------------------------------------------------------------------*/
-  /* Max Horizontal resolution for APP0 thumbnail                             */
-  /*--------------------------------------------------------------------------*/
-  XDAS_UInt16     maxThumbnailHSizeApp0;
-
-  /*--------------------------------------------------------------------------*/
-  /* Max Vertical resolution for APP0 thumbnail                               */
-  /*--------------------------------------------------------------------------*/
-  XDAS_UInt16     maxThumbnailVSizeApp0;
-  
-  /*--------------------------------------------------------------------------*/
-  /* Max Horizontal resolution for APP1 thumbnail                             */
-  /*--------------------------------------------------------------------------*/
-  XDAS_UInt16     maxThumbnailHSizeApp1;
-
-  /*--------------------------------------------------------------------------*/
-  /* Max Vertical resolution for APP0 thumbnail                               */
-  /*--------------------------------------------------------------------------*/
-  XDAS_UInt16     maxThumbnailVSizeApp1;
-
-  /*--------------------------------------------------------------------------*/
-  /*Debug trace Level                                                         */
-  /*--------------------------------------------------------------------------*/
-  XDAS_UInt32   debugTraceLevel;
-
-  /*--------------------------------------------------------------------------*/
-  /*History of last N frames                                                  */
-  /*--------------------------------------------------------------------------*/
-  XDAS_UInt32   lastNFramesToLog;  
-
-} IJPEGVENC_Params;
-
-typedef IVIDENC2_Cmd IJPEGVENC_Cmd;
-
-/**
-********************************************************************************
-*  @struct     IJPEGVENC_CustomQuantTables
-*
-*  @brief      JPEG Encoder Custom Quantization Tables - This structure defines
-*              the custom quantization tables for both Luma & Chroma that need
-*              to be passed to the JPEG Encoder. This will be used in the
-*              Quantization Module.The format is as specified in RFC 2035
-*              (RTP Payload Format for JPEG-compressed Video) and also in
-*              Table K.1 & K.2 of JPEG Spec.
-*
-*              NOTE: The "IJPEGVENC_DynamicParams" structure defined below
-*              contains a pointer to this structure of type
-*              "IJPEGVENC_CustomQuantTables" -
-*              "IJPEGVENC_CustomQuantTables *quantTable".
-*              This field is used to pass custom Quantization tables to the
-*              JPEG Encoder.The application just needs to initialize this field
-*              appropriately.However, if the application wishes to use the
-*              Standard Quantization Tables,then there are 2 ways of informing
-*              this to the JPEG Encoder -
-*             (a) by using the base class only "IJPEGVENC_DynamicParams" and not
-*                 the extended class "IJPEGVENC_DynamicParams", in which case
-*                 the size field in the DynamicParams structure should be set to
-*                 the size of "IJPEGVENC_DynamicParams".
-*             (b) by using the extended class "IJPEGVENC_DynamicParams", but by
-*                 setting the field "IJPEGVENC_CustomQuantTables *quantTable" to
-*                 NULL.
-*
-*  @param  lumQuantTab :This defines the quantization table for the luma
-*                       component.
-*  @param  chmQuantTab :This defines the quantization table for the chroma
-*                       component.
-********************************************************************************
-*/
-typedef struct IJPEGVENC_CustomQuantTables
-{
-  /*--------------------------------------------------------------------------*/
-  /* The array "lumQuantTab" defines the quantization table for the luma      */
-  /*  component.                                                              */
-  /*--------------------------------------------------------------------------*/
-  XDAS_UInt16 lumQuantTab[64];
-
-  /*--------------------------------------------------------------------------*/
-  /* The array "chmQuantTab" defines the quantization table for the chroma    */
-  /* component.                                                               */
-  /*--------------------------------------------------------------------------*/
-  XDAS_UInt16 chmQuantTab[64];
-
-} IJPEGVENC_CustomQuantTables;
-
-/**
-********************************************************************************
-*  @struct     IJPEGVENC_DynamicParams
-*
-*  @brief       This structure defines the dynamic parameters for
-*               all JPEGVENC objects
-*
-*  @param videnc2DynamicParams: IVIDENC2_Dynamic Params
-*  @param restartInterval     : Restart Interval
-*  @param qualityFactor       : Quality factor
-*  @param quantTable          :User Defined Quant Table
-
-********************************************************************************
-*/
-typedef struct IJPEGVENC_DynamicParams {
-  /*--------------------------------------------------------------------------*/
-  /* Base Class                                                               */
-  /*--------------------------------------------------------------------------*/
-  IVIDENC2_DynamicParams videnc2DynamicParams;
-  
-  /*--------------------------------------------------------------------------*/
-  /* restartInterval : Specifies the number of MCUs between RST markers       */
-  /*--------------------------------------------------------------------------*/
-  XDAS_Int32             restartInterval;
-
-  /*--------------------------------------------------------------------------*/
-  /* qualityFactor : Specifies the quality setting to use for encoding        */
-  /*                 Supported values are from 0 (lowest quality)             */
-  /*                 to 97 (highest quality)                                  */
-  /*--------------------------------------------------------------------------*/
-  XDAS_Int32             qualityFactor;
-
-  /*--------------------------------------------------------------------------*/
-  /* quantTable : Application should populate the custom quant table in a     */
-  /*              structure of type IJPEGVENC_CustomQuantTables and pass the  */
-  /*              pointer to it here. Set it to NULL if custom quant tables   */
-  /*              are not to be used.                                         */
-  /*--------------------------------------------------------------------------*/
-  IJPEGVENC_CustomQuantTables *quantTable;
-  
-} IJPEGVENC_DynamicParams;
-
-/**
-********************************************************************************
-*  @struct     IJPEGVENC_InArgs
-*
-*  @brief       This structure defines the runtime input arguments
-*               for IJPEGVENC::process
-*
-*  @param videnc2InArgs              :IVIDENC2_InArgs
-*  @param APPN0                      :APP0 thumbnail Buffer
-*  @param thumbnailIndexApp0       :JFIF Thumbnail Enable
-*  @param APPN1                      :APP1 thumbnail Buffer
-*  @param thumbnailIndexApp1       :EXIF Thumbnail Enable
-*  @param Comment                    :Comment Data
-********************************************************************************
-*/
-
-typedef struct IJPEGVENC_InArgs {
-  /*--------------------------------------------------------------------------*/
-  /* Base Class                                                               */
-  /*--------------------------------------------------------------------------*/
-  IVIDENC2_InArgs videnc2InArgs;
-  
-  /*--------------------------------------------------------------------------*/
-  /* APPN0 : buffer holding the data for APP-0 Marker                         */
-  /*--------------------------------------------------------------------------*/
-  XDM2_SingleBufDesc  APPN0;
-
-  /*--------------------------------------------------------------------------*/
-  /* thumbnailIndexApp0 :                                                     */
-  /*--------------------------------------------------------------------------*/
-  XDAS_UInt16    thumbnailIndexApp0;
-
-  /*--------------------------------------------------------------------------*/
-  /* APPN1 : buffer holding the data for APP-1 Marker                         */
-  /*--------------------------------------------------------------------------*/
-  XDM2_SingleBufDesc  APPN1;
-
-  /*--------------------------------------------------------------------------*/
-  /* Thumbnail_Index_App0 :                                                   */
-  /*--------------------------------------------------------------------------*/
-  XDAS_UInt16    thumbnailIndexApp1;
-
-  /*--------------------------------------------------------------------------*/
-  /* Comment : buffer holding the data for comment Marker                     */
-  /*--------------------------------------------------------------------------*/
-  XDM2_SingleBufDesc  Comment;
-
-} IJPEGVENC_InArgs;
-
-/**
-********************************************************************************
-*  @struct     IJPEGVENC_OutArgs
-*
-*  @brief  This structure defines the runtime output arguments
-*          for IJPEGVENC::process
-*
-*  @param  videnc2OutArgs :This structure contains run time output arguments for
-*                          all IVIDENC2 instance objects
-********************************************************************************
-*/
-
-typedef struct IJPEGVENC_OutArgs {
-  IVIDENC2_OutArgs videnc2OutArgs;
-} IJPEGVENC_OutArgs;
-
-/**
-********************************************************************************
-*  @struct     IJPEGVENC_Fxns
-*
-*  @brief       This structure defines all of the operations on
-*               JPEGVENC objects.
-*  @param ividenc : Pointer to Functions which performs all the operations on
-*                   IVIDENC2 objects.
-********************************************************************************
-*/
-typedef struct IJPEGVENC_Fxns {
-  IVIDENC2_Fxns ividenc;
-} IJPEGVENC_Fxns;
-
-/**
- * The error codes correspond to the 32-bit extended error parameter passed 
- * through outargs and get sttus. The error have been categorised to the below 
- * 32 groups and the respective bit is set on error occurrence.
- */
-typedef enum
-{
-  IJPEGVENC_ERR_UNSUPPORTED_VIDENC2PARAMS = 0,
-  IJPEGVENC_ERR_UNSUPPORTED_VIDENC2DYNAMICPARAMS,            
-  IJPEGVENC_ERR_UNSUPPORTED_JPEGENCDYNAMICPARAMS,              
-  IJPEGVENC_ERR_IMPROPER_DATASYNC_SETTING,      
-  IJPEGVENC_ERR_NOSLICE,     
-  IJPEGVENC_ERR_SLICEHDR,            
-  IJPEGVENC_ERR_MBDATA,            
-  IJPEGVENC_ERR_UNSUPPFEATURE,     
-  IJPEGVENC_ERR_STREAM_END = 16,            
-  IJPEGVENC_ERR_INVALID_MBOX_MESSAGE,    
-  IJPEGVENC_ERR_HDVICP_RESET,
-  IJPEGVENC_ERR_HDVICP_WAIT_NOT_CLEAN_EXIT,
-  IJPEGVENC_ERR_IRES_RESHANDLE,
-  IJPEGVENC_ERR_STANDBY,
-
-  /* Error Codes for Data Sync */
-  IJPEGVENC_ERR_INPUT_DATASYNC,
-  IJPEGVENC_ERR_OUTPUT_DATASYNC
-
-}IJPEGVENC_ExtendedErrorCodes;
-
-/**
- * The enum corresponds to the 4 32-bit words used to pass the error codes to 
- * the application in the extended parameters of status stucture through the 
- * getstatus command. Each bit is set for an error which falls under one of 
- * the groups in the outargs 32 bvits.
- */
-typedef enum
-{
-  JPEG_DYNAMIC_PARAMS_HANDLE_ERROR = 0,
-  JPEG_STATUS_HANDLE_ERROR,
-  JPEG_DYNAMIC_PARAMS_SIZE_ERROR,
-  JPEG_ENCODE_HEADER_ERROR,
-  JPEG_UNSUPPORTED_RESOLUTION,
-  JPEG_CAPTURE_WIDTH_ERROR,
-  JPEG_GET_DATA_FXN_NULL_POINTER,
-  JPEG_GET_BUFFER_FXN_NULL_POINTER,
-  JPEG_INVALID_RESTART_INTERVAL_ERROR,
-  JPEG_INVALID_QUALITY_FACTOR_ERROR,
-  JPEG_INVALID_INPUT_CHROMA_FORMAT_ERROR,
-  JPEG_NULL_QUANT_TABLE_POINTER_ERROR,
-  JPEG_NULL_INARGS_POINTER_ERROR,
-  JPEG_NULL_INARGS_APP_POINTER_ERROR,
-  JPEG_INARGS_SIZE_ERROR,
-  JPEG_INVALID_INPUT_BYTES_ERROR,
-  JPEG_INVALID_INPUT_ID_ERROR,
-  JPEG_NULL_INPUT_BUF_DESC_ERROR,
-  JPEG_NULL_INPUT_BUFFER_POINTER_ERROR,
-  JPEG_INVALID_INPUT_BUFFER_SIZE_ERROR,
-  JPEG_INVALID_NUM_OF_INPUT_BUFFERS_ERROR,
-  JPEG_INVALID_INPUT_BUFFER_MEMTYPE_ERROR,
-  JPEG_INVALID_OUTPUT_BUFFER_MEMTYPE_ERROR,
-  JPEG_NULL_OUTARGS_POINTER_ERROR,
-  JPEG_INVALID_OUTARGS_SIZE,
-  JPEG_NULL_OUTPUT_BUF_DESC_ERROR,
-  JPEG_NULL_OUTPUT_BUFFER_POINTER_ERROR,
-  JPEG_INVALID_OUTPUT_BUFFER_SIZE_ERROR,
-  JPEG_INVALID_NUM_OF_OUTPUT_BUFFERS_ERROR,
-  JPEG_INSUFFICIENT_OUTPUT_BUFFER_SIZE_ERROR,
-  JPEG_INVALID_JFIF_THUMBNAIL_ENABLE_ERROR,
-  JPEG_INVALID_EXIF_THUMBNAIL_ENABLE_ERROR,
-  JPEG_INPUT_BUFFER_POINTER_ALIGN_ERROR,
-  
-  /* Extended Error Codes related to Data Sync */
-  JPEG_DATASYNC_GET_ROW_DATA_ERROR, /* from 33rd bit*/
-  
-  JPEG_DATASYNC_INVALID_RESTART_INTERVAL_ERROR,
-  
-  JPEG_DATASYNC_BLOCK_POINTER_ERROR,
-  JPEG_DATASYNC_BLOCK_SIZE_ERROR,
-  JPEG_DATASYNC_INVALID_BLOCKS_ERROR,
-  JPEG_DATASYNC_NOT_VALID_COMBINATION_ERROR
-}IjpegVENC_ErrorStatus;
-
-/**
-******************************************************************************
- *  ======== IJPEGVENC_DynamicParams ========
- *  Default Create parameter values for JPEGVENC instance objects
-********************************************************************************
-*/
-extern const IJPEGVENC_DynamicParams JPEGVENC_TI_DYNAMICPARAMS;
-/**
-******************************************************************************
- *  ======== IJPEGVENC_Params ========
- *  Default DynamicParams values for JPEGVENC instance objects
-********************************************************************************
-*/
-extern const IJPEGVENC_Params JPEGVENC_TI_PARAMS;
-
-/*******************************************************************************
-*  PRIVATE DECLARATIONS Defined here, used only here
-*******************************************************************************/
-/*---------------------- data declarations -----------------------------------*/
-
-/*---------------------- function prototypes ---------------------------------*/
-
-#endif /*#ifndef JPEGENC_TI_IJPEGVENC_H*/
-
diff --git a/ti_tools/codecs/REL.500.V.MJPEG.E.IVAHD.01.00.04.00/500.V.MJPEG.E.IVAHD.01.00/IVAHD_001/inc/jpegenc_ti.h b/ti_tools/codecs/REL.500.V.MJPEG.E.IVAHD.01.00.04.00/500.V.MJPEG.E.IVAHD.01.00/IVAHD_001/inc/jpegenc_ti.h
deleted file mode 100755
index 444b05b..0000000
--- a/ti_tools/codecs/REL.500.V.MJPEG.E.IVAHD.01.00.04.00/500.V.MJPEG.E.IVAHD.01.00/IVAHD_001/inc/jpegenc_ti.h
+++ /dev/null
@@ -1,71 +0,0 @@
-/*
-********************************************************************************
-* HDVICP2.0 Based JPEG Encoder
-*
-* "HDVICP2.0 Based JPEG Encoder" is software module developed for
-* TI's HDVICP2 based SoCs. This module is capable of encoding a raw image
-* by compressing it into a JPEG bitstream compliant with ISO/IEC IS 10918-1.
-* Copyright (C) 2009 Texas Instruments Incorporated - http://www.ti.com/
-* ALL RIGHTS RESERVED
-********************************************************************************
-*/
-/**
-********************************************************************************
-* @file      Jpegenc_ti.h
-*
-* @brief     TI Interface related header file
-*
-* @author    Pavan Kumar
-*
-* @version 0.0 (Dec 2009) : Created the initial version.
-*
-* @version 0.1 (Feb 2010) : Review & clean up
-*
-* @version 0.2 (Sep 2010) : Review & clean up
-********************************************************************************
-*/
-/* -------------------- compilation control switches -------------------------*/
-#ifndef JPEGENC_TI_
-#define JPEGENC_TI_
-
-/*******************************************************************************
-*                             INCLUDE FILES
-*******************************************************************************/
-/* -------------------- system and platform files ----------------------------*/
-#include <ti/xdais/ialg.h>
-#include <ti/xdais/ires.h>
-/*--------------------- program files ----------------------------------------*/
-
-
-/*******************************************************************************
-*  PUBLIC DECLARATIONS Defined here, used elsewhere
-*******************************************************************************/
-/*---------------------- data declarations -----------------------------------*/
-
-/**
-* Referene to external symbol JPEGVENC_TI_IALG, holding the pointers to the
-* all the basic algorithm creation related functions.
-*/
-/*----------------------------------------------------------------*/
-extern IALG_Fxns JPEGVENC_TI_IALG;
-
-/**
-* Referene to external symbol JPEGVENC_TI_IJPEGVENC,holding the pointers to
-* the all the mpeg2 decoder algorithm interfaces
-*/
-extern IVIDENC2_Fxns JPEGVENC_TI_IJPEGVENC;
-
-/**
-* Referene to external symbol JPEGVENC_TI_IRES, holding the pointers to the
-* all the basic RMAN-IRES reource related functions.
-*/
-extern IRES_Fxns JPEGVENC_TI_IRES;
-
-/*******************************************************************************
-*  PRIVATE DECLARATIONS Defined here, used only here
-*******************************************************************************/
-/*---------------------- data declarations -----------------------------------*/
-
-/*---------------------- function prototypes ---------------------------------*/
-
-#endif /*#ifndef JPEGENC_TI_*/
diff --git a/ti_tools/codecs/REL.500.V.MPEG2.D.IVAHD.01.00.12.00/500.V.MPEG2.D.IVAHD.01.00/IVAHD_001/Inc/impeg2vdec.h b/ti_tools/codecs/REL.500.V.MPEG2.D.IVAHD.01.00.12.00/500.V.MPEG2.D.IVAHD.01.00/IVAHD_001/Inc/impeg2vdec.h
new file mode 100755
index 0000000..33f73b1
--- /dev/null
+++ b/ti_tools/codecs/REL.500.V.MPEG2.D.IVAHD.01.00.12.00/500.V.MPEG2.D.IVAHD.01.00/IVAHD_001/Inc/impeg2vdec.h
@@ -0,0 +1,521 @@
+/*
+********************************************************************************
+* HDVICP2.0 Based MPEG-2 MP Decoder
+*
+* "HDVICP2.0 Based MPEG-2 MP Decoder" is software module developed on TI's 
+* HDVICP2 based SOCs. This module is capable of generating a raw 4:2:0 video  
+* data by de-compressing/decoding a main/simple profile bit-stream based on    
+* ISO/IEC 13818-2.
+* Copyright (C) 2009 Texas Instruments Incorporated - http://www.ti.com/ 
+* ALL RIGHTS RESERVED 
+********************************************************************************
+*/
+
+/**  
+********************************************************************************
+* @file      impeg2vdec.h                          
+*
+* @brief     This file provides definisions for the interface(API) parameters.
+*
+* @author    Prashanth
+*
+* @version 0.0 (July 2008) : Created  [Prashanth]
+* @version 0.1 (Dec 2009)  : Added extended dynamic paramters[Deepa]
+* @version 0.2 (Feb 2010)  : Coding Guidelines[Deepa] 
+* @version 0.3 (July 2010) : Error robustness added.
+*                            [Deepa Nagendra].
+* @version 0.4 (Aug 2010)  : Debug trace implementation.
+*                            [Deepa Nagendra].
+* @version 0.5 (Aug 2010)  : Error Concealment support.
+*                            [Deepa Nagendra].
+* @version 0.6 (Dec 2011)  : Default structures are exposed in interface file
+*                            and macros are differenciated with codec name.
+*                            [Naidu].
+* @version 0.6 (July 2012)  : Added extended error codes for errors incase  
+*                            referenceframe is not available while decoding  
+*                            after flush and SEEK [Naidu].            
+*                                         
+********************************************************************************
+*/
+/* ---------------------- compilation control switches ---------------------- */
+
+#ifndef _IMPEG2VDEC_
+#define _IMPEG2VDEC_
+
+
+/*******************************************************************************
+*   INCLUDE FILES
+*******************************************************************************/
+/* ---------------------- system and platform files ------------------------- */
+#include <ti/xdais/xdas.h>
+#include <ti/xdais/ialg.h>
+#include <ti/xdais/dm/ividdec3.h>
+#include <ti/xdais/ires.h>
+#include <ti/sdo/fc/ires/hdvicp/ires_hdvicp2.h>
+/* --------------------------- program files -------------------------------- */
+
+/*******************************************************************************
+*   PUBLIC DECLARATIONS Defined here, used elsewhere
+*******************************************************************************/
+/*-----------------------data declarations -----------------------------------*/
+
+
+/*******************************************************************************
+*   PRIVATE DECLARATIONS Defined here, used only here
+*******************************************************************************/
+/*-----------------------data declarations -----------------------------------*/
+
+/*-----------------------function prototypes ---------------------------------*/
+
+/**
+********************************************************************************
+*  @struct     IMPEG2VDEC_Obj
+*
+*  @brief      This structure must be the first field of all Mpeg2vdec instance
+*              objects
+*
+*  @param      fxns  :  Handle to extented mpeg2 video decoder library 
+*                       interface functions
+* 
+********************************************************************************
+*/
+typedef struct IMPEG2VDEC_Obj 
+{
+  struct IMPEG2VDEC_Fxns *fxns;
+} IMPEG2VDEC_Obj;   
+
+/**
+********************************************************************************
+*  @struct     IMPEG2VDEC_Handle
+*
+*  @brief       This handle is used to reference all Mpeg2vdec instance objects
+* 
+********************************************************************************
+*/
+typedef struct IMPEG2VDEC_Obj *IMPEG2VDEC_Handle;
+
+/**
+********************************************************************************
+*  @struct     IMPEG2VDEC_Status
+*
+*  @brief      Status structure defines the parameters that can be changed or 
+*              read during real-time operation of the alogrithm.
+*
+*  @param      viddecStatus  :  Handle to base class status struture which 
+*                               defines the all  run time parameters.
+********************************************************************************
+*/
+typedef struct IMPEG2VDEC_Status 
+{
+  IVIDDEC3_Status  viddecStatus; 
+  /* Extended Error Code0 returned by decoder  */
+  XDAS_UInt32 extendedErrorCode0;
+  /* Extended Error Code1 returned by decoder  */
+  XDAS_UInt32 extendedErrorCode1;
+  /* Extended Error Code2 returned by decoder  */
+  XDAS_UInt32 extendedErrorCode2;
+  /* Extended Error Code3 returned by decoder  */
+  XDAS_UInt32 extendedErrorCode3;
+  
+  XDAS_UInt32 debugTraceLevel;
+  
+  XDAS_UInt32 lastNFramesToLog;
+  
+  XDAS_UInt32 * extMemoryDebugTraceAddr;
+  
+  XDAS_UInt32 extMemoryDebugTraceSize;
+  
+} IMPEG2VDEC_Status;
+
+/**
+*  @brief    The Cmd enumeration defines the control commands for the MPEG2 
+*            video decoder control method.
+*/
+typedef IVIDDEC3_Cmd IMPEG2VDEC_Cmd;
+
+/**
+********************************************************************************
+*  @struct     IMPEG2VDEC_Params
+*
+*  @brief      This structure defines the creation parameters for all 
+*              mpeg2VDEC objects
+*
+*  @param      viddecParams  :  Defines the creation time parameters for
+*                               all IVIDDEC1 instance objects.
+*
+********************************************************************************
+*/
+typedef struct IMPEG2VDEC_Params 
+{
+
+  IVIDDEC3_Params    viddecParams;
+  XDAS_Int32         ErrorConcealmentON;
+  XDAS_Int32         outloopDeBlocking;
+
+  /*--------------------------------------------------------------------------*/
+  /*Debug trace Level                                                         */
+  /*--------------------------------------------------------------------------*/
+  XDAS_UInt32   debugTraceLevel;
+
+  /*--------------------------------------------------------------------------*/
+  /*History of last N frames                                                  */
+  /*--------------------------------------------------------------------------*/
+  XDAS_UInt32   lastNFramesToLog;
+  
+} IMPEG2VDEC_Params;
+
+/**
+********************************************************************************
+*  @struct     IMPEG2VDEC_DynamicParams
+*
+*  @brief      This structure defines the run time parameters for all
+*              Mpeg2vdec objects
+*
+*  @param      viddecDynamicParams  :  Defines the run time parameters for
+*                                      all IVIDDEC3 instance objects.
+*
+********************************************************************************
+*/
+typedef struct IMPEG2VDEC_DynamicParams 
+{
+  /*Base class Parameters*/
+  IVIDDEC3_DynamicParams viddecDynamicParams; 
+
+  /*--------------------------------------------------------------------------*/
+  /* gotoNextIFrame : If enabled, during process call skips decoding of all   */
+  /*                  non I frames. Enable seekFrameEnd to get the bytes      */  
+  /*                   consumed for each non I frame                          */
+  /*--------------------------------------------------------------------------*/    
+  XDAS_Int32 gotoNextIFrame;
+  /*--------------------------------------------------------------------------*/
+  /* skipBFrame  : If enabled, skips decoding of all B frames.                */
+  /*               Enable seekFrameEnd to get the bytes consumed for the      */
+  /*               B-frames                                                   */  
+  /*--------------------------------------------------------------------------*/  
+  XDAS_Int32 skipBFrame;
+  /*--------------------------------------------------------------------------*/
+  /* skipCurrFrame  : If enabled, skips decoding of current frame             */
+  /*               Enable seekFrameEnd to get the bytes consumed for the      */
+  /*               Current frame                                              */
+  /*--------------------------------------------------------------------------*/    
+  XDAS_Int32 skipCurrFrame;
+  /*--------------------------------------------------------------------------*/
+  /* seekFrameEnd  : If enabled along with any SkipFrame option, prcoess call */
+  /*                 returns the bytesconsumed for the frame w/o decoding the */
+  /*                 frame                                                    */
+  /*--------------------------------------------------------------------------*/  
+  XDAS_Int32 seekFrameEnd;
+
+} IMPEG2VDEC_DynamicParams;
+
+/**
+********************************************************************************
+*  @struct     IMPEG2VDEC_InArgs
+*
+*  @brief      This structure defines the runtime input arguments for all VIDDEC 
+*              objects.
+*
+*  @param      viddecInArgs  :   Defines the input arguments for all IVIDDEC3 
+*                                instance process function.
+*
+********************************************************************************
+*/
+typedef struct IMPEG2VDEC_InArgs 
+{
+
+  IVIDDEC3_InArgs   viddecInArgs;   
+
+}IMPEG2VDEC_InArgs;
+
+/**
+********************************************************************************
+*  @struct     IMPEG2VDEC_OutArgs
+*
+*  @brief      This structure defines the run time output arguments for VIDDEC 
+*              objects.
+*
+*  @param      viddecOutArgs  :   Defines the output arguments for all IVIDDEC3
+*                                 instance  process function.
+*
+********************************************************************************
+*/
+typedef struct IMPEG2VDEC_OutArgs 
+{
+  IVIDDEC3_OutArgs  viddecOutArgs;  
+}IMPEG2VDEC_OutArgs;
+
+/**
+********************************************************************************
+*  @struct     IMPEG2VDEC_Fxns
+*
+*  @brief     This structure defines all of the operations on Mpeg2vdec objects.
+*
+*  @param      ividdec  :  handle to the all function of the operations on 
+*                          IVIDDEC3 objects
+*
+********************************************************************************
+*/
+typedef struct IMPEG2VDEC_Fxns 
+{
+  IVIDDEC3_Fxns    ividdec;   
+} IMPEG2VDEC_Fxns;
+
+/**
+ * Error concealment can be enabled or disabled through create time parameter.
+*/
+typedef enum
+{
+  IMPEG2VDEC_EC_DISABLE = 0,
+  IMPEG2VDEC_EC_ENABLE
+} IMPEG2VDEC_FrameErrorConcealment;
+
+
+/**
+ *  Flag to deblock enable
+ */
+#define IMPEG2VDEC_DEBLOCK_ENABLE    (1)
+
+/**
+ *  Flag to deblock disable
+ */
+#define IMPEG2VDEC_DEBLOCK_DISABLE   (0) 
+
+/**
+* Number of MemTab required if Deblock is Off
+*/
+#define IMPEG2VDEC_NUM_MEMTABS_DEBLOCK_OFF (0)
+
+/**
+* Number of memtab required if deblock is on and it will be  maximum 
+* resource required by codec
+*/
+#define IMPEG2VDEC_NUM_MEMTABS_DEBLOCK_ON (6)
+
+/**
+ * The error codes correspond to the 32-bit extended error parameter passed 
+ * through outargs and get sttus. The error have been categorised to the below 
+ * 32 groups and the respective bit is set on error occurrence.
+ */
+typedef enum
+{
+  IMPEG2VDEC_ERR_UNSUPPORTED_VIDDEC3PARAMS = 0,
+  IMPEG2VDEC_ERR_UNSUPPORTED_VIDDEC3DYNAMICPARAMS,            
+  IMPEG2VDEC_ERR_UNSUPPORTED_MPEG2DECDYNAMICPARAMS,              
+  IMPEG2VDEC_ERR_IMPROPER_DATASYNC_SETTING,     
+   
+  IMPEG2VDEC_ERR_NOSLICE,     
+  IMPEG2VDEC_ERR_SLICEHDR,            
+  IMPEG2VDEC_ERR_MBDATA,            
+  IMPEG2VDEC_ERR_UNSUPPFEATURE,  
+     
+  IMPEG2VDEC_ERR_STREAM_END = 16,            
+  IMPEG2VDEC_ERR_UNSUPPRESOLUTION,             
+  IMPEG2VDEC_ERR_STANDBY,       
+  IMPEG2VDEC_ERR_INVALID_MBOX_MESSAGE,    
+  
+  IMPEG2VDEC_ERR_HDVICP_RESET,
+  IMPEG2VDEC_ERR_HDVICP_WAIT_NOT_CLEAN_EXIT,
+  IMPEG2VDEC_ERR_SEQHDR,
+  IMPEG2VDEC_ERR_GOP_PICHDR,
+  
+  IMPEG2VDEC_ERR_SEQLVL_EXTN,
+  IMPEG2VDEC_ERR_PICLVL_EXTN,
+  IMPEG2VDEC_ERR_TRICK_MODE,
+  IMPEG2VDEC_ERR_PICSIZECHANGE,
+  
+  IMPEG2VDEC_ERR_SEMANTIC, 
+  IMPEG2VDEC_ERR_DECODE_EXIT, 
+  IMPEG2VDEC_ERR_IRES_RESHANDLE,
+  IMPEG2VDEC_ERR_IRES_RESDESC
+  
+}IMPEG2VDEC_ExtendedErrorCodes;
+
+/**
+ * The enum corresponds to the 4 32-bit words used to pass the error codes to 
+ * the application in the extended parameters of status stucture through the 
+ * getstatus command. Each bit is set for an error which falls under one of 
+ * the groups in the outargs 32 bvits.
+ */
+typedef enum
+{
+  MPEG2_ECD_ILLEGAL_EOM=0,
+  MPEG2_ECD_ILLEGAL_EOB,
+  MPEG2_ECD_ILLEGAL_MP1_ESCAPE_LVL,
+  MPEG2_ECD_ILLEGAL_MP2_ESCAPE_LVL,
+  
+  MPEG2_ECD_ILLEGAL_MARKER_CONCEAL,
+  MPEG2_ECD_ILLEGAL_MBTYPE_D_PIC,
+  MPEG2_ECD_ILLEGAL_DCT_COEFF,
+  MPEG2_ECD_ILLEGAL_CBP,
+  
+  MPEG2_ECD_ILLEGAL_MOTION_CODE,
+  MPEG2_ECD_ILLEGAL_MB_TYPE,
+  MPEG2_ECD_ILLEGAL_MB_ADDR_INCR,
+  MPEG2_ECD_ILLEGAL_EOS,
+  
+  MPEG2_ECD_ILLEGAL_QUANT_SCALE_CODE,
+  MPEG2_ECD_ILLEGAL_SLICE_START_POS,
+  MPEG2_ECD_ILLEGAL_START_CODE_SEARCH,
+  MPEG2_ECD_ILLEGAL_DC_COEFF_OVFL,
+  
+  MPEG2_DYNAMIC_PARAMS_HANDLE_ERROR,
+  MPEG2_STATUS_HANDLE_ERROR,
+  MPEG2_DYNAMIC_PARAMS_SIZE_ERROR,
+  MPEG2_STATUS_SIZE_ERROR,
+  
+  MPEG2_DECODE_HEADER_ERROR,
+  MPEG2_DISPLAY_WIDTH_ERROR,
+  MPEG2_FRAME_SKIP_MODE_ERROR,
+  MPEG2_NEW_FRAME_FLAG_ERROR,
+  
+  MPEG2_GOTO_IFRAME_ERROR,
+  MPEG2_SKIP_BFRAME_ERROR,
+  MPEG2_SKIP_CURRENTFRAME_ERROR,
+  MPEG2_SEEK_FRAMEEND_ERROR,
+  
+  MPEG2_NULL_STATUS_DATA_BUF,
+  MPEG2_INSUFFICIENT_STATUS_DATA_BUF,
+  MPEG2_NULL_INARGS_POINTER_ERROR,
+  MPEG2_INARGS_SIZE_ERROR,
+  
+  MPEG2_INVALID_INPUT_BYTES_ERROR,
+  MPEG2_INVALID_INPUT_ID_ERROR,
+  MPEG2_DECODER_NOT_INITIALIZED_ERROR,
+  MPEG2_NULL_INPUT_BUF_DESC_ERROR,
+  
+  MPEG2_NULL_INPUT_BUFFER_POINTER_ERROR,
+  MPEG2_INVALID_INPUT_BUFFER_SIZE_ERROR,
+  MPEG2_INVALID_NUM_OF_INPUT_BUFFERS_ERROR,
+  MPEG2_EXCESS_NUM_OF_INPUT_BUFFERS_ERROR,
+  
+  MPEG2_INVALID_INPUT_BUFFER_MEMTYPE_ERROR,
+  MPEG2_NULL_OUTARGS_POINTER_ERROR,
+  MPEG2_INVALID_OUTARGS_SIZE,
+  MPEG2_NULL_OUTPUT_BUF_DESC_POINTER_ERROR,
+  
+  MPEG2_NULL_OUTPUT_BUF_DESC_ERROR,
+  MPEG2_INVALID_OUTPUT_BUFFER0_POINTER_ERROR,
+  MPEG2_INVALID_OUTPUT_BUFFER0_SIZE_ERROR,
+  MPEG2_INVALID_NUM_OF_OUTPUT_BUFFERS_ERROR,
+  
+  MPEG2_INVALID_OUTPUT_BUFFER0_MEMTYPE_ERROR,
+  MPEG2_INVALID_OUTPUT_BUFFER0_ALIGNMENT_ERROR,
+  MPEG2_INVALID_OUTPUT_BUFFER1_POINTER_ERROR,
+  MPEG2_INVALID_OUTPUT_BUFFER1_SIZE_ERROR,
+  
+  MPEG2_INVALID_OUTPUT_BUFFER1_MEMTYPE_ERROR,
+  MPEG2_INVALID_OUTPUT_BUFFER1_ALIGNMENT_ERROR,
+  MPEG2_INVALID_OUTPUT_BUFFER2_POINTER_ERROR,
+  MPEG2_INVALID_OUTPUT_BUFFER2_SIZE_ERROR,
+  
+  MPEG2_INVALID_OUTPUT_BUFFER2_MEMTYPE_ERROR,
+  MPEG2_INVALID_BUFFER_USAGE_MODE,
+  MPEG2_SEQ_HDR_INVALID_FRAME_WIDTH,
+  MPEG2_SEQ_HDR_INVALID_FRAME_HEIGHT,
+  
+  MPEG2_SEQ_HDR_INVALID_ASPECT_RATIO,
+  MPEG2_SEQ_HDR_INVALID_FRAME_RATE_CODE,
+  MPEG2_INVALID_INTRA_QUANT_MAT,
+  MPEG2_INVALID_NON_INTRA_QUANT_MAT,
+  
+  MPEG2_SEQ_HDR_INVALID_INTRA_ESCAPE_BIT,
+  MPEG2_SEQ_HDR_INVALID_PROFILE,
+  MPEG2_SEQ_HDR_INVALID_LEVEL,
+  MPEG2_SEQ_HDR_INVALID_RESOLUTION_FORLVL,
+  
+  MPEG2_SEQ_HDR_INVALID_CHROMA_FORMAT,
+  MPEG2_SEQ_HDR_INVALID_LOW_DELAY,
+  MPEG2_SEQ_DSP_INVALID_VIDEO_FORMAT,
+  MPEG2_SEQ_DSP_INVALID_COLOUR_PRIM,
+  
+  MPEG2_SEQ_DSP_INVALID_TRF_CHARS,
+  MPEG2_SEQ_DSP_INVALID_MAT_COEFFS,
+  MPEG2_GOP_HDR_INVALID_DROP_FLAG,
+  MPEG2_GOP_HDR_INVALID_HOUR,
+  
+  MPEG2_GOP_HDR_INVALID_MIN,
+  MPEG2_GOP_HDR_INVALID_SEC,
+  MPEG2_GOP_HDR_INVALID_TIME_CODE_PICTURES,
+  MPEG2_GOP_HDR_INVALID_BROKEN_LINK,
+  
+  MPEG2_PIC_HDR_INVALID_TEMP_REF,
+  MPEG2_PIC_HDR_INVALID_PIC_TYPE,
+  MPEG2_PIC_HDR_INVALID_VBV_DELAY,
+  MPEG1_PIC_HDR_INVALID_FWD_FCODE,
+  
+  MPEG1_PIC_HDR_INVALID_BWD_FCODE,
+  MPEG2_PIC_HDR_INVALID_FCODE,
+  MPEG2_PIC_HDR_INVALID_PIC_STRUCTURE,
+  MPEG2_PIC_HDR_INVALID_FIELD_COMB,
+  
+  MPEG2_PIC_HDR_INVALID_TFF,
+  MPEG2_PIC_HDR_INVALID_FPFD,
+  MPEG2_PIC_HDR_INVALID_RFF,
+  MPEG2_PIC_HDR_INVALID_PROG_FLAG,
+  
+  MPEG2_QUANT_EXT_INVALID_LOAD_CHROMA_INTRA_FLAG,
+  MPEG2_QUANT_EXT_INVALID_LOAD_CHROMA_NON_INTRA_FLAG,
+  MPEG2_INVALID_EXTN_CODE,
+  MPEG2_SEQ_HDR_MISSING,
+  
+  MPEG2_NO_PICTURE_ENCODED_ERROR,
+  MPEG2_SEQ_EXT_MISSING,
+  MPEG2_PIC_CODING_EXT_MISSING,
+  MPEG2_SEQ_DISP_EXT_MISSING,
+  
+  MPEG2_GOP_FIRST_FRAME_NOT_I,
+  MPEG2_SCALABILITY_NOT_SUPPORTED,
+  MPEG2_END_OF_SEQ_DETECTED,
+  MPEG2_PIC_HDR_RFF_FRAME_RATE_MISMATCH,
+  
+  MPEG2_PIC_HDR_INVALID_DC_PRECISION,
+  MPEG2_INVALID_FRAME_RATE,
+  MPEG2_INVALID_BIT_RATE,
+  MPEG2_FRAME_SKIPPED,
+  
+  MPEG2_REF_FRAME_SKIPPED,
+  MPEG2_NO_REF_TO_FLUSH,
+  MPEG2_EXCESS_INPUT_BYTES,
+  MPEG2_ALL_MBS_NOT_DECODED,
+  
+  MPEG2_NO_REF_PFRAME,
+  MPEG2_NO_REF_BFRAME
+  
+}Impeg2VDEC_ErrorStatus;
+
+/*
+ *  ======== IMPEG2VDEC_PARAMS ========
+ *  Default parameter values for MPEG2VDEC instance objects
+ */
+extern const IMPEG2VDEC_Params MPEG2VDEC_TI_Static_Params;
+/*
+ *  ======== IMPEG2VDEC_IVDEC_DYNAMICPARAMS ========
+ *  Default dynamic parameter values for MPEG2VDEC instance objects
+ */
+extern const IMPEG2VDEC_DynamicParams MPEG2VDEC_TI_DynamicParams;
+/* ------------------------ function prototypes ----------------------------- */
+/*******************************************************************************
+*   PRIVATE DECLARATIONS Defined here, used only here
+*******************************************************************************/
+/* ------------------------ data declarations ------------------------------- */
+/* ----------------------- function prototypes ------------------------------ */
+
+/* ------------------------------ macros ------------------------------------ */
+/*----------------------------------------------------------------------------*/
+/* Extending control method commands                                          */
+/*----------------------------------------------------------------------------*/
+#define IMPEG2VDEC_GETSTATUS             XDM_GETSTATUS
+#define IMPEG2VDEC_SETPARAMS             XDM_SETPARAMS
+#define IMPEG2VDEC_RESET                 XDM_RESET
+#define IMPEG2VDEC_FLUSH                 XDM_FLUSH
+#define IMPEG2VDEC_SETDEFAULT            XDM_SETDEFAULT
+#define IMPEG2VDEC_GETBUFINFO            XDM_GETBUFINFO
+#define IMPEG2VDEC_GETVERSION            XDM_GETVERSION
+#define IMPEG2VDEC_GETCONTEXTINFO        XDM_GETCONTEXTINFO
+#define IMPEG2VDEC_GETDYNPARAMSDEFAULT   XDM_GETDYNPARAMSDEFAULT
+
+#endif  /* __IMPEG2VDEC__ */
+
+
+
+
diff --git a/ti_tools/codecs/REL.500.V.MPEG2.D.IVAHD.01.00.12.00/500.V.MPEG2.D.IVAHD.01.00/IVAHD_001/Inc/mpeg2vdec_ti.h b/ti_tools/codecs/REL.500.V.MPEG2.D.IVAHD.01.00.12.00/500.V.MPEG2.D.IVAHD.01.00/IVAHD_001/Inc/mpeg2vdec_ti.h
new file mode 100755
index 0000000..6c24553
--- /dev/null
+++ b/ti_tools/codecs/REL.500.V.MPEG2.D.IVAHD.01.00.12.00/500.V.MPEG2.D.IVAHD.01.00/IVAHD_001/Inc/mpeg2vdec_ti.h
@@ -0,0 +1,88 @@
+/*
+********************************************************************************
+* HDVICP2.0 Based MPEG-2 MP Decoder
+*
+* "HDVICP2.0 Based MPEG-2 MP Decoder" is software module developed on TI's 
+* HDVICP2 based SOCs. This module is capable of generating a raw 4:2:0 video  
+* data by de-compressing/decoding a main/simple profile bit-stream based on    
+* ISO/IEC 13818-2.
+* Copyright (C) 2009 Texas Instruments Incorporated - http://www.ti.com/ 
+* ALL RIGHTS RESERVED 
+********************************************************************************
+*/
+
+/**  
+********************************************************************************
+* @file      mpeg2vdec_ti.h                          
+*
+* @brief     This file provides definisions for the interface handles.
+*
+* @author    Prashanth
+*
+* @version 0.0 (March 2008) : Created  [Prashanth]
+* @version 0.1 (Dec 2009)   : Added MPEG2VDEC_TI_IRES[Deepa]
+* @version 0.2 (Feb 2010)   : Coding Guidelines[Deepa] 
+*
+********************************************************************************
+*/
+
+
+#ifndef __MPEG2VDEC_TI__
+#define __MPEG2VDEC_TI__
+
+/* ---------------------- compilation control switches ---------------------- */
+
+/*******************************************************************************
+*   INCLUDE FILES
+*******************************************************************************/
+/* ---------------------- system and platform files ------------------------- */
+#include <ti/xdais/xdas.h>
+#include <ti/xdais/ialg.h>
+#include <ti/xdais/dm/ividdec3.h>
+
+/* --------------------------- program files -------------------------------- */
+#include "impeg2vdec.h"
+
+/*******************************************************************************
+*   EXTERNAL REFERENCES NOTE : only use if not found in header file
+*******************************************************************************/
+/* -------------------------- data declarations ----------------------------- */
+/**
+* Referene to external symbol MPEG2VDEC_TI_IALG, holding the pointers to the 
+* all the basic algorithm creation related functions.                        
+*/
+extern IALG_Fxns     MPEG2VDEC_TI_IALG;
+
+/**
+* Referene to external symbol MPEG2VDEC_TI_IMPEG2VDEC,holding the pointers to
+* the all the mpeg2 decoder algorithm interfaces                             
+*/
+extern IMPEG2VDEC_Fxns MPEG2VDEC_TI_IMPEG2VDEC;
+
+/**
+* Referene to external symbol MPEG2VDEC_TI_IRES, holding the pointers to the
+* all the basic RMAN-IRES reource related functions.
+*/
+extern IRES_Fxns MPEG2VDEC_TI_IRES;
+
+/* ------------------------- function prototypes ---------------------------- */
+
+/*******************************************************************************
+*   PUBLIC DECLARATIONS Defined here, used elsewhere
+*******************************************************************************/
+/* ------------------------- data declarations ------------------------------ */
+/* ------------------------- function prototypes ---------------------------- */
+
+/*******************************************************************************
+*   PRIVATE DECLARATIONS Defined here, used only here
+*******************************************************************************/
+/* ------------------------ data declarations ------------------------------- */
+/* ----------------------- function prototypes ------------------------------ */
+
+/* ------------------------------ macros ------------------------------------ */
+
+#endif /* #ifndef __MPEG2VDEC_TI__ */
+
+
+
+
diff --git a/ti_tools/codecs/REL.500.V.MPEG2.D.IVAHD.01.00.12.00/500.V.MPEG2.D.IVAHD.01.00/IVAHD_001/inc/impeg2vdec.h b/ti_tools/codecs/REL.500.V.MPEG2.D.IVAHD.01.00.12.00/500.V.MPEG2.D.IVAHD.01.00/IVAHD_001/inc/impeg2vdec.h
deleted file mode 100755
index 33f73b1..0000000
--- a/ti_tools/codecs/REL.500.V.MPEG2.D.IVAHD.01.00.12.00/500.V.MPEG2.D.IVAHD.01.00/IVAHD_001/inc/impeg2vdec.h
+++ /dev/null
@@ -1,521 +0,0 @@
-/*
-********************************************************************************
-* HDVICP2.0 Based MPEG-2 MP Decoder
-*
-* "HDVICP2.0 Based MPEG-2 MP Decoder" is software module developed on TI's 
-* HDVICP2 based SOCs. This module is capable of generating a raw 4:2:0 video  
-* data by de-compressing/decoding a main/simple profile bit-stream based on    
-* ISO/IEC 13818-2.
-* Copyright (C) 2009 Texas Instruments Incorporated - http://www.ti.com/ 
-* ALL RIGHTS RESERVED 
-********************************************************************************
-*/
-
-/**  
-********************************************************************************
-* @file      impeg2vdec.h                          
-*
-* @brief     This file provides definisions for the interface(API) parameters.
-*
-* @author    Prashanth
-*
-* @version 0.0 (July 2008) : Created  [Prashanth]
-* @version 0.1 (Dec 2009)  : Added extended dynamic paramters[Deepa]
-* @version 0.2 (Feb 2010)  : Coding Guidelines[Deepa] 
-* @version 0.3 (July 2010) : Error robustness added.
-*                            [Deepa Nagendra].
-* @version 0.4 (Aug 2010)  : Debug trace implementation.
-*                            [Deepa Nagendra].
-* @version 0.5 (Aug 2010)  : Error Concealment support.
-*                            [Deepa Nagendra].
-* @version 0.6 (Dec 2011)  : Default structures are exposed in interface file
-*                            and macros are differenciated with codec name.
-*                            [Naidu].
-* @version 0.6 (July 2012)  : Added extended error codes for errors incase  
-*                            referenceframe is not available while decoding  
-*                            after flush and SEEK [Naidu].            
-*                                         
-********************************************************************************
-*/
-/* ---------------------- compilation control switches ---------------------- */
-
-#ifndef _IMPEG2VDEC_
-#define _IMPEG2VDEC_
-
-
-/*******************************************************************************
-*   INCLUDE FILES
-*******************************************************************************/
-/* ---------------------- system and platform files ------------------------- */
-#include <ti/xdais/xdas.h>
-#include <ti/xdais/ialg.h>
-#include <ti/xdais/dm/ividdec3.h>
-#include <ti/xdais/ires.h>
-#include <ti/sdo/fc/ires/hdvicp/ires_hdvicp2.h>
-/* --------------------------- program files -------------------------------- */
-
-/*******************************************************************************
-*   PUBLIC DECLARATIONS Defined here, used elsewhere
-*******************************************************************************/
-/*-----------------------data declarations -----------------------------------*/
-
-
-/*******************************************************************************
-*   PRIVATE DECLARATIONS Defined here, used only here
-*******************************************************************************/
-/*-----------------------data declarations -----------------------------------*/
-
-/*-----------------------function prototypes ---------------------------------*/
-
-/**
-********************************************************************************
-*  @struct     IMPEG2VDEC_Obj
-*
-*  @brief      This structure must be the first field of all Mpeg2vdec instance
-*              objects
-*
-*  @param      fxns  :  Handle to extented mpeg2 video decoder library 
-*                       interface functions
-* 
-********************************************************************************
-*/
-typedef struct IMPEG2VDEC_Obj 
-{
-  struct IMPEG2VDEC_Fxns *fxns;
-} IMPEG2VDEC_Obj;   
-
-/**
-********************************************************************************
-*  @struct     IMPEG2VDEC_Handle
-*
-*  @brief       This handle is used to reference all Mpeg2vdec instance objects
-* 
-********************************************************************************
-*/
-typedef struct IMPEG2VDEC_Obj *IMPEG2VDEC_Handle;
-
-/**
-********************************************************************************
-*  @struct     IMPEG2VDEC_Status
-*
-*  @brief      Status structure defines the parameters that can be changed or 
-*              read during real-time operation of the alogrithm.
-*
-*  @param      viddecStatus  :  Handle to base class status struture which 
-*                               defines the all  run time parameters.
-********************************************************************************
-*/
-typedef struct IMPEG2VDEC_Status 
-{
-  IVIDDEC3_Status  viddecStatus; 
-  /* Extended Error Code0 returned by decoder  */
-  XDAS_UInt32 extendedErrorCode0;
-  /* Extended Error Code1 returned by decoder  */
-  XDAS_UInt32 extendedErrorCode1;
-  /* Extended Error Code2 returned by decoder  */
-  XDAS_UInt32 extendedErrorCode2;
-  /* Extended Error Code3 returned by decoder  */
-  XDAS_UInt32 extendedErrorCode3;
-  
-  XDAS_UInt32 debugTraceLevel;
-  
-  XDAS_UInt32 lastNFramesToLog;
-  
-  XDAS_UInt32 * extMemoryDebugTraceAddr;
-  
-  XDAS_UInt32 extMemoryDebugTraceSize;
-  
-} IMPEG2VDEC_Status;
-
-/**
-*  @brief    The Cmd enumeration defines the control commands for the MPEG2 
-*            video decoder control method.
-*/
-typedef IVIDDEC3_Cmd IMPEG2VDEC_Cmd;
-
-/**
-********************************************************************************
-*  @struct     IMPEG2VDEC_Params
-*
-*  @brief      This structure defines the creation parameters for all 
-*              mpeg2VDEC objects
-*
-*  @param      viddecParams  :  Defines the creation time parameters for
-*                               all IVIDDEC1 instance objects.
-*
-********************************************************************************
-*/
-typedef struct IMPEG2VDEC_Params 
-{
-
-  IVIDDEC3_Params    viddecParams;
-  XDAS_Int32         ErrorConcealmentON;
-  XDAS_Int32         outloopDeBlocking;
-
-  /*--------------------------------------------------------------------------*/
-  /*Debug trace Level                                                         */
-  /*--------------------------------------------------------------------------*/
-  XDAS_UInt32   debugTraceLevel;
-
-  /*--------------------------------------------------------------------------*/
-  /*History of last N frames                                                  */
-  /*--------------------------------------------------------------------------*/
-  XDAS_UInt32   lastNFramesToLog;
-  
-} IMPEG2VDEC_Params;
-
-/**
-********************************************************************************
-*  @struct     IMPEG2VDEC_DynamicParams
-*
-*  @brief      This structure defines the run time parameters for all
-*              Mpeg2vdec objects
-*
-*  @param      viddecDynamicParams  :  Defines the run time parameters for
-*                                      all IVIDDEC3 instance objects.
-*
-********************************************************************************
-*/
-typedef struct IMPEG2VDEC_DynamicParams 
-{
-  /*Base class Parameters*/
-  IVIDDEC3_DynamicParams viddecDynamicParams; 
-
-  /*--------------------------------------------------------------------------*/
-  /* gotoNextIFrame : If enabled, during process call skips decoding of all   */
-  /*                  non I frames. Enable seekFrameEnd to get the bytes      */  
-  /*                   consumed for each non I frame                          */
-  /*--------------------------------------------------------------------------*/    
-  XDAS_Int32 gotoNextIFrame;
-  /*--------------------------------------------------------------------------*/
-  /* skipBFrame  : If enabled, skips decoding of all B frames.                */
-  /*               Enable seekFrameEnd to get the bytes consumed for the      */
-  /*               B-frames                                                   */  
-  /*--------------------------------------------------------------------------*/  
-  XDAS_Int32 skipBFrame;
-  /*--------------------------------------------------------------------------*/
-  /* skipCurrFrame  : If enabled, skips decoding of current frame             */
-  /*               Enable seekFrameEnd to get the bytes consumed for the      */
-  /*               Current frame                                              */
-  /*--------------------------------------------------------------------------*/    
-  XDAS_Int32 skipCurrFrame;
-  /*--------------------------------------------------------------------------*/
-  /* seekFrameEnd  : If enabled along with any SkipFrame option, prcoess call */
-  /*                 returns the bytesconsumed for the frame w/o decoding the */
-  /*                 frame                                                    */
-  /*--------------------------------------------------------------------------*/  
-  XDAS_Int32 seekFrameEnd;
-
-} IMPEG2VDEC_DynamicParams;
-
-/**
-********************************************************************************
-*  @struct     IMPEG2VDEC_InArgs
-*
-*  @brief      This structure defines the runtime input arguments for all VIDDEC 
-*              objects.
-*
-*  @param      viddecInArgs  :   Defines the input arguments for all IVIDDEC3 
-*                                instance process function.
-*
-********************************************************************************
-*/
-typedef struct IMPEG2VDEC_InArgs 
-{
-
-  IVIDDEC3_InArgs   viddecInArgs;   
-
-}IMPEG2VDEC_InArgs;
-
-/**
-********************************************************************************
-*  @struct     IMPEG2VDEC_OutArgs
-*
-*  @brief      This structure defines the run time output arguments for VIDDEC 
-*              objects.
-*
-*  @param      viddecOutArgs  :   Defines the output arguments for all IVIDDEC3
-*                                 instance  process function.
-*
-********************************************************************************
-*/
-typedef struct IMPEG2VDEC_OutArgs 
-{
-  IVIDDEC3_OutArgs  viddecOutArgs;  
-}IMPEG2VDEC_OutArgs;
-
-/**
-********************************************************************************
-*  @struct     IMPEG2VDEC_Fxns
-*
-*  @brief     This structure defines all of the operations on Mpeg2vdec objects.
-*
-*  @param      ividdec  :  handle to the all function of the operations on 
-*                          IVIDDEC3 objects
-*
-********************************************************************************
-*/
-typedef struct IMPEG2VDEC_Fxns 
-{
-  IVIDDEC3_Fxns    ividdec;   
-} IMPEG2VDEC_Fxns;
-
-/**
- * Error concealment can be enabled or disabled through create time parameter.
-*/
-typedef enum
-{
-  IMPEG2VDEC_EC_DISABLE = 0,
-  IMPEG2VDEC_EC_ENABLE
-} IMPEG2VDEC_FrameErrorConcealment;
-
-
-/**
- *  Flag to deblock enable
- */
-#define IMPEG2VDEC_DEBLOCK_ENABLE    (1)
-
-/**
- *  Flag to deblock disable
- */
-#define IMPEG2VDEC_DEBLOCK_DISABLE   (0) 
-
-/**
-* Number of MemTab required if Deblock is Off
-*/
-#define IMPEG2VDEC_NUM_MEMTABS_DEBLOCK_OFF (0)
-
-/**
-* Number of memtab required if deblock is on and it will be  maximum 
-* resource required by codec
-*/
-#define IMPEG2VDEC_NUM_MEMTABS_DEBLOCK_ON (6)
-
-/**
- * The error codes correspond to the 32-bit extended error parameter passed 
- * through outargs and get sttus. The error have been categorised to the below 
- * 32 groups and the respective bit is set on error occurrence.
- */
-typedef enum
-{
-  IMPEG2VDEC_ERR_UNSUPPORTED_VIDDEC3PARAMS = 0,
-  IMPEG2VDEC_ERR_UNSUPPORTED_VIDDEC3DYNAMICPARAMS,            
-  IMPEG2VDEC_ERR_UNSUPPORTED_MPEG2DECDYNAMICPARAMS,              
-  IMPEG2VDEC_ERR_IMPROPER_DATASYNC_SETTING,     
-   
-  IMPEG2VDEC_ERR_NOSLICE,     
-  IMPEG2VDEC_ERR_SLICEHDR,            
-  IMPEG2VDEC_ERR_MBDATA,            
-  IMPEG2VDEC_ERR_UNSUPPFEATURE,  
-     
-  IMPEG2VDEC_ERR_STREAM_END = 16,            
-  IMPEG2VDEC_ERR_UNSUPPRESOLUTION,             
-  IMPEG2VDEC_ERR_STANDBY,       
-  IMPEG2VDEC_ERR_INVALID_MBOX_MESSAGE,    
-  
-  IMPEG2VDEC_ERR_HDVICP_RESET,
-  IMPEG2VDEC_ERR_HDVICP_WAIT_NOT_CLEAN_EXIT,
-  IMPEG2VDEC_ERR_SEQHDR,
-  IMPEG2VDEC_ERR_GOP_PICHDR,
-  
-  IMPEG2VDEC_ERR_SEQLVL_EXTN,
-  IMPEG2VDEC_ERR_PICLVL_EXTN,
-  IMPEG2VDEC_ERR_TRICK_MODE,
-  IMPEG2VDEC_ERR_PICSIZECHANGE,
-  
-  IMPEG2VDEC_ERR_SEMANTIC, 
-  IMPEG2VDEC_ERR_DECODE_EXIT, 
-  IMPEG2VDEC_ERR_IRES_RESHANDLE,
-  IMPEG2VDEC_ERR_IRES_RESDESC
-  
-}IMPEG2VDEC_ExtendedErrorCodes;
-
-/**
- * The enum corresponds to the 4 32-bit words used to pass the error codes to 
- * the application in the extended parameters of status stucture through the 
- * getstatus command. Each bit is set for an error which falls under one of 
- * the groups in the outargs 32 bvits.
- */
-typedef enum
-{
-  MPEG2_ECD_ILLEGAL_EOM=0,
-  MPEG2_ECD_ILLEGAL_EOB,
-  MPEG2_ECD_ILLEGAL_MP1_ESCAPE_LVL,
-  MPEG2_ECD_ILLEGAL_MP2_ESCAPE_LVL,
-  
-  MPEG2_ECD_ILLEGAL_MARKER_CONCEAL,
-  MPEG2_ECD_ILLEGAL_MBTYPE_D_PIC,
-  MPEG2_ECD_ILLEGAL_DCT_COEFF,
-  MPEG2_ECD_ILLEGAL_CBP,
-  
-  MPEG2_ECD_ILLEGAL_MOTION_CODE,
-  MPEG2_ECD_ILLEGAL_MB_TYPE,
-  MPEG2_ECD_ILLEGAL_MB_ADDR_INCR,
-  MPEG2_ECD_ILLEGAL_EOS,
-  
-  MPEG2_ECD_ILLEGAL_QUANT_SCALE_CODE,
-  MPEG2_ECD_ILLEGAL_SLICE_START_POS,
-  MPEG2_ECD_ILLEGAL_START_CODE_SEARCH,
-  MPEG2_ECD_ILLEGAL_DC_COEFF_OVFL,
-  
-  MPEG2_DYNAMIC_PARAMS_HANDLE_ERROR,
-  MPEG2_STATUS_HANDLE_ERROR,
-  MPEG2_DYNAMIC_PARAMS_SIZE_ERROR,
-  MPEG2_STATUS_SIZE_ERROR,
-  
-  MPEG2_DECODE_HEADER_ERROR,
-  MPEG2_DISPLAY_WIDTH_ERROR,
-  MPEG2_FRAME_SKIP_MODE_ERROR,
-  MPEG2_NEW_FRAME_FLAG_ERROR,
-  
-  MPEG2_GOTO_IFRAME_ERROR,
-  MPEG2_SKIP_BFRAME_ERROR,
-  MPEG2_SKIP_CURRENTFRAME_ERROR,
-  MPEG2_SEEK_FRAMEEND_ERROR,
-  
-  MPEG2_NULL_STATUS_DATA_BUF,
-  MPEG2_INSUFFICIENT_STATUS_DATA_BUF,
-  MPEG2_NULL_INARGS_POINTER_ERROR,
-  MPEG2_INARGS_SIZE_ERROR,
-  
-  MPEG2_INVALID_INPUT_BYTES_ERROR,
-  MPEG2_INVALID_INPUT_ID_ERROR,
-  MPEG2_DECODER_NOT_INITIALIZED_ERROR,
-  MPEG2_NULL_INPUT_BUF_DESC_ERROR,
-  
-  MPEG2_NULL_INPUT_BUFFER_POINTER_ERROR,
-  MPEG2_INVALID_INPUT_BUFFER_SIZE_ERROR,
-  MPEG2_INVALID_NUM_OF_INPUT_BUFFERS_ERROR,
-  MPEG2_EXCESS_NUM_OF_INPUT_BUFFERS_ERROR,
-  
-  MPEG2_INVALID_INPUT_BUFFER_MEMTYPE_ERROR,
-  MPEG2_NULL_OUTARGS_POINTER_ERROR,
-  MPEG2_INVALID_OUTARGS_SIZE,
-  MPEG2_NULL_OUTPUT_BUF_DESC_POINTER_ERROR,
-  
-  MPEG2_NULL_OUTPUT_BUF_DESC_ERROR,
-  MPEG2_INVALID_OUTPUT_BUFFER0_POINTER_ERROR,
-  MPEG2_INVALID_OUTPUT_BUFFER0_SIZE_ERROR,
-  MPEG2_INVALID_NUM_OF_OUTPUT_BUFFERS_ERROR,
-  
-  MPEG2_INVALID_OUTPUT_BUFFER0_MEMTYPE_ERROR,
-  MPEG2_INVALID_OUTPUT_BUFFER0_ALIGNMENT_ERROR,
-  MPEG2_INVALID_OUTPUT_BUFFER1_POINTER_ERROR,
-  MPEG2_INVALID_OUTPUT_BUFFER1_SIZE_ERROR,
-  
-  MPEG2_INVALID_OUTPUT_BUFFER1_MEMTYPE_ERROR,
-  MPEG2_INVALID_OUTPUT_BUFFER1_ALIGNMENT_ERROR,
-  MPEG2_INVALID_OUTPUT_BUFFER2_POINTER_ERROR,
-  MPEG2_INVALID_OUTPUT_BUFFER2_SIZE_ERROR,
-  
-  MPEG2_INVALID_OUTPUT_BUFFER2_MEMTYPE_ERROR,
-  MPEG2_INVALID_BUFFER_USAGE_MODE,
-  MPEG2_SEQ_HDR_INVALID_FRAME_WIDTH,
-  MPEG2_SEQ_HDR_INVALID_FRAME_HEIGHT,
-  
-  MPEG2_SEQ_HDR_INVALID_ASPECT_RATIO,
-  MPEG2_SEQ_HDR_INVALID_FRAME_RATE_CODE,
-  MPEG2_INVALID_INTRA_QUANT_MAT,
-  MPEG2_INVALID_NON_INTRA_QUANT_MAT,
-  
-  MPEG2_SEQ_HDR_INVALID_INTRA_ESCAPE_BIT,
-  MPEG2_SEQ_HDR_INVALID_PROFILE,
-  MPEG2_SEQ_HDR_INVALID_LEVEL,
-  MPEG2_SEQ_HDR_INVALID_RESOLUTION_FORLVL,
-  
-  MPEG2_SEQ_HDR_INVALID_CHROMA_FORMAT,
-  MPEG2_SEQ_HDR_INVALID_LOW_DELAY,
-  MPEG2_SEQ_DSP_INVALID_VIDEO_FORMAT,
-  MPEG2_SEQ_DSP_INVALID_COLOUR_PRIM,
-  
-  MPEG2_SEQ_DSP_INVALID_TRF_CHARS,
-  MPEG2_SEQ_DSP_INVALID_MAT_COEFFS,
-  MPEG2_GOP_HDR_INVALID_DROP_FLAG,
-  MPEG2_GOP_HDR_INVALID_HOUR,
-  
-  MPEG2_GOP_HDR_INVALID_MIN,
-  MPEG2_GOP_HDR_INVALID_SEC,
-  MPEG2_GOP_HDR_INVALID_TIME_CODE_PICTURES,
-  MPEG2_GOP_HDR_INVALID_BROKEN_LINK,
-  
-  MPEG2_PIC_HDR_INVALID_TEMP_REF,
-  MPEG2_PIC_HDR_INVALID_PIC_TYPE,
-  MPEG2_PIC_HDR_INVALID_VBV_DELAY,
-  MPEG1_PIC_HDR_INVALID_FWD_FCODE,
-  
-  MPEG1_PIC_HDR_INVALID_BWD_FCODE,
-  MPEG2_PIC_HDR_INVALID_FCODE,
-  MPEG2_PIC_HDR_INVALID_PIC_STRUCTURE,
-  MPEG2_PIC_HDR_INVALID_FIELD_COMB,
-  
-  MPEG2_PIC_HDR_INVALID_TFF,
-  MPEG2_PIC_HDR_INVALID_FPFD,
-  MPEG2_PIC_HDR_INVALID_RFF,
-  MPEG2_PIC_HDR_INVALID_PROG_FLAG,
-  
-  MPEG2_QUANT_EXT_INVALID_LOAD_CHROMA_INTRA_FLAG,
-  MPEG2_QUANT_EXT_INVALID_LOAD_CHROMA_NON_INTRA_FLAG,
-  MPEG2_INVALID_EXTN_CODE,
-  MPEG2_SEQ_HDR_MISSING,
-  
-  MPEG2_NO_PICTURE_ENCODED_ERROR,
-  MPEG2_SEQ_EXT_MISSING,
-  MPEG2_PIC_CODING_EXT_MISSING,
-  MPEG2_SEQ_DISP_EXT_MISSING,
-  
-  MPEG2_GOP_FIRST_FRAME_NOT_I,
-  MPEG2_SCALABILITY_NOT_SUPPORTED,
-  MPEG2_END_OF_SEQ_DETECTED,
-  MPEG2_PIC_HDR_RFF_FRAME_RATE_MISMATCH,
-  
-  MPEG2_PIC_HDR_INVALID_DC_PRECISION,
-  MPEG2_INVALID_FRAME_RATE,
-  MPEG2_INVALID_BIT_RATE,
-  MPEG2_FRAME_SKIPPED,
-  
-  MPEG2_REF_FRAME_SKIPPED,
-  MPEG2_NO_REF_TO_FLUSH,
-  MPEG2_EXCESS_INPUT_BYTES,
-  MPEG2_ALL_MBS_NOT_DECODED,
-  
-  MPEG2_NO_REF_PFRAME,
-  MPEG2_NO_REF_BFRAME
-  
-}Impeg2VDEC_ErrorStatus;
-
-/*
- *  ======== IMPEG2VDEC_PARAMS ========
- *  Default parameter values for MPEG2VDEC instance objects
- */
-extern const IMPEG2VDEC_Params MPEG2VDEC_TI_Static_Params;
-/*
- *  ======== IMPEG2VDEC_IVDEC_DYNAMICPARAMS ========
- *  Default dynamic parameter values for MPEG2VDEC instance objects
- */
-extern const IMPEG2VDEC_DynamicParams MPEG2VDEC_TI_DynamicParams;
-/* ------------------------ function prototypes ----------------------------- */
-/*******************************************************************************
-*   PRIVATE DECLARATIONS Defined here, used only here
-*******************************************************************************/
-/* ------------------------ data declarations ------------------------------- */
-/* ----------------------- function prototypes ------------------------------ */
-
-/* ------------------------------ macros ------------------------------------ */
-/*----------------------------------------------------------------------------*/
-/* Extending control method commands                                          */
-/*----------------------------------------------------------------------------*/
-#define IMPEG2VDEC_GETSTATUS             XDM_GETSTATUS
-#define IMPEG2VDEC_SETPARAMS             XDM_SETPARAMS
-#define IMPEG2VDEC_RESET                 XDM_RESET
-#define IMPEG2VDEC_FLUSH                 XDM_FLUSH
-#define IMPEG2VDEC_SETDEFAULT            XDM_SETDEFAULT
-#define IMPEG2VDEC_GETBUFINFO            XDM_GETBUFINFO
-#define IMPEG2VDEC_GETVERSION            XDM_GETVERSION
-#define IMPEG2VDEC_GETCONTEXTINFO        XDM_GETCONTEXTINFO
-#define IMPEG2VDEC_GETDYNPARAMSDEFAULT   XDM_GETDYNPARAMSDEFAULT
-
-#endif  /* __IMPEG2VDEC__ */
-
-
-
-
diff --git a/ti_tools/codecs/REL.500.V.MPEG2.D.IVAHD.01.00.12.00/500.V.MPEG2.D.IVAHD.01.00/IVAHD_001/inc/mpeg2vdec_ti.h b/ti_tools/codecs/REL.500.V.MPEG2.D.IVAHD.01.00.12.00/500.V.MPEG2.D.IVAHD.01.00/IVAHD_001/inc/mpeg2vdec_ti.h
deleted file mode 100755
index 6c24553..0000000
--- a/ti_tools/codecs/REL.500.V.MPEG2.D.IVAHD.01.00.12.00/500.V.MPEG2.D.IVAHD.01.00/IVAHD_001/inc/mpeg2vdec_ti.h
+++ /dev/null
@@ -1,88 +0,0 @@
-/*
-********************************************************************************
-* HDVICP2.0 Based MPEG-2 MP Decoder
-*
-* "HDVICP2.0 Based MPEG-2 MP Decoder" is software module developed on TI's 
-* HDVICP2 based SOCs. This module is capable of generating a raw 4:2:0 video  
-* data by de-compressing/decoding a main/simple profile bit-stream based on    
-* ISO/IEC 13818-2.
-* Copyright (C) 2009 Texas Instruments Incorporated - http://www.ti.com/ 
-* ALL RIGHTS RESERVED 
-********************************************************************************
-*/
-
-/**  
-********************************************************************************
-* @file      mpeg2vdec_ti.h                          
-*
-* @brief     This file provides definisions for the interface handles.
-*
-* @author    Prashanth
-*
-* @version 0.0 (March 2008) : Created  [Prashanth]
-* @version 0.1 (Dec 2009)   : Added MPEG2VDEC_TI_IRES[Deepa]
-* @version 0.2 (Feb 2010)   : Coding Guidelines[Deepa] 
-*
-********************************************************************************
-*/
-
-
-#ifndef __MPEG2VDEC_TI__
-#define __MPEG2VDEC_TI__
-
-/* ---------------------- compilation control switches ---------------------- */
-
-/*******************************************************************************
-*   INCLUDE FILES
-*******************************************************************************/
-/* ---------------------- system and platform files ------------------------- */
-#include <ti/xdais/xdas.h>
-#include <ti/xdais/ialg.h>
-#include <ti/xdais/dm/ividdec3.h>
-
-/* --------------------------- program files -------------------------------- */
-#include "impeg2vdec.h"
-
-/*******************************************************************************
-*   EXTERNAL REFERENCES NOTE : only use if not found in header file
-*******************************************************************************/
-/* -------------------------- data declarations ----------------------------- */
-/**
-* Referene to external symbol MPEG2VDEC_TI_IALG, holding the pointers to the 
-* all the basic algorithm creation related functions.                        
-*/
-extern IALG_Fxns     MPEG2VDEC_TI_IALG;
-
-/**
-* Referene to external symbol MPEG2VDEC_TI_IMPEG2VDEC,holding the pointers to
-* the all the mpeg2 decoder algorithm interfaces                             
-*/
-extern IMPEG2VDEC_Fxns MPEG2VDEC_TI_IMPEG2VDEC;
-
-/**
-* Referene to external symbol MPEG2VDEC_TI_IRES, holding the pointers to the
-* all the basic RMAN-IRES reource related functions.
-*/
-extern IRES_Fxns MPEG2VDEC_TI_IRES;
-
-/* ------------------------- function prototypes ---------------------------- */
-
-/*******************************************************************************
-*   PUBLIC DECLARATIONS Defined here, used elsewhere
-*******************************************************************************/
-/* ------------------------- data declarations ------------------------------ */
-/* ------------------------- function prototypes ---------------------------- */
-
-/*******************************************************************************
-*   PRIVATE DECLARATIONS Defined here, used only here
-*******************************************************************************/
-/* ------------------------ data declarations ------------------------------- */
-/* ----------------------- function prototypes ------------------------------ */
-
-/* ------------------------------ macros ------------------------------------ */
-
-#endif /* #ifndef __MPEG2VDEC_TI__ */
-
-
-
-
-- 
2.7.4

